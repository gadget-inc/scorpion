---
http_interactions:
  - request:
      method: post
      uri: <SCORPION_CRAWLER_URL>/interaction/shopify_browse_add
      body:
        encoding: UTF-8
        string: '{"traceContext":{},"crawlOptions":{},"property":{"id":"4","crawlRoots":["https://bape.com"],"allowedDomains":["bape.com"]},"startPage":"https://bape.com"}'
      headers:
        Accept:
          - "*/*"
        User-Agent:
          - rest-client/2.1.0 (darwin19.2.0 x86_64) ruby/2.7.0p0
        Authorization:
          - "<AUTHORIZATION>"
        Content-Type:
          - application/json
        Content-Length:
          - "154"
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
    response:
      status:
        code: 202
        message: Accepted
      headers:
        X-Powered-By:
          - Express
        X-Request-Id:
          - 736c55d2-55b2-496a-a225-963065d0700e
        Content-Type:
          - application/ndjson
        Date:
          - Thu, 13 Feb 2020 16:17:12 GMT
        Connection:
          - keep-alive
        Transfer-Encoding:
          - chunked
      body:
        encoding: ASCII-8BIT
        string: !binary |-
          {"tag":"system","message":"Request start"}
{"tag":"log","message":"INTERACTION START","args":[{"options":{"start":"https://bape.com"}}]}
{"tag":"log","message":"GROUP START Navigate to product page","args":[]}
{"tag":"log","message":"Found no product links on homepage, finding first collection page","args":[]}
{"tag":"interaction_result","result":{"type":"html","html":"<html xmlns=\"http://www.w3.org/1999/xhtml\" class=\" js opacity generatedcontent pointerevents\" style=\"height: 585px; overflow: hidden;\">\n\n  <!-- new server -->\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta http-equiv=\"keyword\" content=\"A BATHING APE,BAPE,APE,ア　ベイシング　エイプ,ベイプ,エイプ\">\n    <meta name=\"keyword\" content=\"BAPE SOUNDS,ベイプサウンズ, APE  SOUNDS,エイプサウンズ,FOOTSOLDIER,フットソルジャー,BABY MILO,ベイビーマイロ,ベビーマイロ,APEE,エイピー,BAPY,ベイピー,BAPE　CUTS,ベイプカッツ,BAPE　CAFE!?,ベイプカフェ,BAPE　STA!!,ベイプスタ,BAPE　TV,ベイプティーヴィー,BAPE MANIA,ベイプマニア,BAPEKIDS,ベイプキッズ,A BATHING APE,ア　ベイシング　エイプ,BAPE,ベイプ,APE,エイプ,bape.com,busy work shop,bape store,アベイシングエイプ 公式サイト\">\n\n    <!--mobile\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no\">\n-->\n    <title>BAPE.COM | A BATHING APE OFFICIAL SITE</title>\n    <link rel=\"shortcut icon\" href=\"https://bape.com/lib/img/icon/favicon.ico\">\n    <link rel=\"apple-touch-icon\" href=\"https://bape.com/lib/img/icon/bapecom.png\">\n    <link rel=\"apple-t-ouch-icon\" href=\"https://bape.com/lib/img/icon/72x72.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"https://bape.com/lib/img/icon/72x72.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"https://bape.com/lib/img/icon/114x114.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"228x228\" href=\"https://bape.com/lib/img/icon/228x228.png\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://bape.com/lib/css/css.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://bape.com/lib/css/style.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://bape.com/lib/css/font.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://bape.com/lib/css/responsive.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../lib/css/jquery-ui.min.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://bape.com/lib/css/ipad.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://bape.com/lib/js/easyslider/screen.css\">\n\n    <!--<link rel=\"stylesheet\" type=\"text/css\" href=\"../SpryAssets/SpryValidationTextField.css\"  />-->\n    <script type=\"text/javascript\" async=\"\" src=\"https://ssl.google-analytics.com/ga.js\"></script>\n    <script type=\"text/javascript\" src=\"https://bape.com/lib/js/extras/jquery.min.1.7.js\"></script>\n    <script type=\"text/javascript\" src=\"../lib/js/jquery-ui.min.js\"></script>\n\n    <!--<script type=\"text/javascript\" src=\"https://bape.com/lib/js/css3-mediaqueries.js\"></script>-->\n    <script type=\"text/javascript\" src=\"https://bape.com/lib/js/responsive.js\"></script>\n    <script>\n      var ismania = 0;\n    </script>\n<!-- false -->\n    <script language=\"JavaScript\" type=\"text/javascript\" src=\"https://bape.com/lib/js/js.js\"></script>\n\n    <!--scrollbar 1-->\n    <link rel=\"stylesheet\" href=\"../lib/js/scrollbar/jquery.jscrollpane.css\" type=\"text/css\">\n    <script language=\"JavaScript\" type=\"text/javascript\" src=\"../lib/js/scrollbar/jquery.jscrollpane.js\"></script>\n    <script language=\"JavaScript\" type=\"text/javascript\" src=\"../lib/js/scrollbar/jquery.mousewheel.js\"></script>\n\n    <!--radio button-->\n    <link href=\"https://bape.com/lib/js/uniform_selected_list_style/themes/default/css/uniform.default.css\" type=\"text/css\" rel=\"stylesheet\">\n    <link href=\"https://bape.com/lib/js/uniform_selected_list_style/themes/default/css/m_uniform.default.css\" type=\"text/css\" media=\"screen and (max-device-width: 479px)\" rel=\"stylesheet\">\n    <script src=\"https://bape.com/lib/js/uniform_selected_list_style/jquery.uniform.js\"></script>\n\n    <!--easyslider-->\n    <link rel=\"stylesheet\" href=\"https://bape.com/lib/js/easyslider/screen.css\" type=\"text/css\">\n    <script type=\"text/javascript\" src=\"https://bape.com/lib/js/easyslider/easySlider1.7.js\"></script>\n\n    <!--drop down list-->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://bape.com/lib/js/dropdownlist/style.css\">\n    <script type=\"text/javascript\" src=\"https://bape.com/lib/js/dropdownlist/modernizr.custom.79639.js\"></script>\n    <noscript>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"https://bape.com/lib/js/dropdownlist/noJS.css\" /></noscript>\n\n    <!--bxslider-->\n    <script src=\"https://bape.com/lib/js/jquery_bxslider/jquery.bxslider.min.js\"></script>\n    <link href=\"https://bape.com/lib/js/jquery_bxslider/jquery.bxslider.css\" rel=\"stylesheet\">\n\n    <!--bjqs slider-->\n    <link rel=\"stylesheet\" href=\"https://bape.com/lib/js/bjqs/bjqs.css\" type=\"text/css\">\n    <script language=\"javascript\" type=\"text/javascript\" src=\"https://bape.com/lib/js/bjqs/bjqs-1.3.min.js\"></script>\n\n    <!--royalslider-->\n    <link rel=\"stylesheet\" href=\"https://bape.com/lib/js/royalslider/royalslider.css\" type=\"text/css\">\n    <link rel=\"stylesheet\" href=\"https://bape.com/lib/js/royalslider/rs-default.css\" type=\"text/css\">\n    <script language=\"JavaScript\" type=\"text/javascript\" src=\"https://bape.com/lib/js/royalslider/jquery.easing-1.3.js\"></script>\n    <script language=\"JavaScript\" type=\"text/javascript\" src=\"https://bape.com/lib/js/royalslider/jquery.royalslider.min.js\"></script>\n\n    <!--fancybox-->\n    <script src=\"https://bape.com/lib/js/fancybox/jquery.fancybox.js\"></script>\n    <link href=\"https://bape.com/lib/js/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n\n    <!--Slider : Awkward Showcase -->\n    <link rel=\"stylesheet\" href=\"https://bape.com/lib/js/awkward_showcase/css/style.css\">\n    <script type=\"text/javascript\" src=\"https://bape.com/lib/js/awkward_showcase/jquery.aw-showcase.js\"></script>\n\n    <!--Mobile Slide : mobile -->\n    <script type=\"text/javascript\" src=\"https://bape.com/lib/js/jquery.touchSwipe.js\"></script>\n\n    <!--[if !IE]>\n<!-->\n    <script type=\"text/javascript\" src=\"https://bape.com/lib/js/quojs/QuoJS.js\"></script>\n\n    <!--<![endif]-->\n    <script type=\"text/javascript\">\n      setTimeout(function() {\n        init_menu();\n        help_btn();\n        //fav_btn();\n      }, 500);\n    </script>\n\n    <!--[if !IE]>\n<!-->\n    <script>\n      $$(document).ready(function() {\n        $$('#mobile_menu').swipeRight(function() {\n          menu_move(1);\n        });\n      });\n    </script>\n\n    <!--<![endif]-->\n    <script>\n      $(window).load(function() {\n      });\n      function m_sub_menu(id, cat) {\n        var i = 0;\n        for (i = 1; i < 9; i++) {\n          $('#arrow_' + i).attr({\n            \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\"\n          });\n        }\n        switch (id) {\n          case 1: //webstore\n            $(\" #mobile_menu\").animate({\n              scrollTop: '240px'\n            }, 200);\n            if ($('#m_menu_webstore').is(':visible')) {\n              $(\"#m_menu_webstore\").css({\n                \"display\": \"none\"\n              });\n            } else {\n              $('#m_menu_sub_news').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_lookbook').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_mania').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_profile').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_contact').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_faq').css({\n                \"display\": \"none\"\n              });\n              $(\"#m_menu_webstore\").css({\n                \"display\": \"block\"\n              });\n              for (i = 0; i < 9; i++) {\n                $('#m_menu_webstore_cat_' + i).css({\n                  \"display\": \"none\"\n                });\n              }\n              $('#arrow_1').attr({\n                \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n              });\n            }\n            break;\n          case 2: //webstore cat/sub cat\n            pos = cat * 125 + 360;\n            $(\" #mobile_menu\").animate({\n              scrollTop: pos + 'px'\n            }, 200);\n            for (i = 0; i < 9; i++) {\n              if (i == cat) {\n                if ($('#m_menu_webstore_cat_' + i).is(':visible')) {\n                  console.log('1');\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                  $('#arrow_1').attr({\n                    \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                  });\n                  $('#arrow_1_' + cat).attr({\n                    \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\"\n                  });\n                } else {\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"table\"\n                  });\n                  $('#arrow_1').attr({\n                    \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                  });\n                  $('#arrow_1_' + cat).attr({\n                    \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                  });\n                }\n              } else {\n                $('#m_menu_webstore_cat_' + i).css({\n                  \"display\": \"none\"\n                });\n              }\n            }\n            break;\n          case 3: //news\n            window.location.href = '../index/';\n            if (cat == 0) {\n              if ($('#m_menu_sub_news').is(':visible')) {\n                $('#m_menu_sub_news').css({\n                  \"display\": \"none\"\n                });\n              } else {\n                $(\"#m_menu_webstore\").css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_news').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_lookbook').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mania').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_profile').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_contact').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_faq').css({\n                  \"display\": \"none\"\n                });\n                for (i = 0; i < 8; i++) {\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                }\n                $('#arrow_2').attr({\n                  \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                });\n              }\n            } else if (cat == 1) {\n              confirm_to_PC('../news');\n            }\n            break;\n          case 4: //lookbook\n            $(\" #mobile_menu\").animate({\n              scrollTop: '610px'\n            }, 200);\n            if ($('#m_menu_lookbook').is(':visible')) {\n              $(\"#m_menu_lookbook\").css({\n                \"display\": \"none\"\n              });\n            } else {\n              $('#m_menu_sub_news').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_mania').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_profile').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_contact').css({\n                \"display\": \"none\"\n              });\n              $('#m_menu_sub_faq').css({\n                \"display\": \"none\"\n              });\n              $(\"#m_menu_lookbook\").css({\n                \"display\": \"block\"\n              });\n              for (i = 0; i < 8; i++) {\n                $('#m_menu_lookbook_cat_' + i).css({\n                  \"display\": \"none\"\n                });\n              }\n              $('#arrow_2').attr({\n                \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n              });\n            }\n            break;\n          case 5: //mania\n            window.location.href = '../mania/';\n            return;\n            $(\" #mobile_menu\").animate({\n              scrollTop: '860px'\n            }, 200);\n            if (cat == 0) {\n              if ($('#m_menu_sub_mania').is(':visible')) {\n                $('#m_menu_sub_mania').css({\n                  \"display\": \"none\"\n                });\n              } else {\n                $(\"#m_menu_webstore\").css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_news').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_lookbook').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_profile').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_contact').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_faq').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mania').css({\n                  \"display\": \"table\"\n                });\n                for (i = 0; i < 8; i++) {\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                }\n                $('#arrow_4').attr({\n                  \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                });\n              }\n            } else if (cat == 1) {\n              confirm_to_PC('../mania');\n            }\n            break;\n          case 6: //mania card\n            window.location.href = '../registration/';\n            break;\n          case 7:\n            window.location.href = '../company_profile/';\n            return;\n            $(\" #mobile_menu\").animate({\n              scrollTop: '860px'\n            }, 200);\n            if (cat == 0) {\n              if ($('#m_menu_sub_profile').is(':visible')) {\n                $('#m_menu_sub_profile').css({\n                  \"display\": \"none\"\n                });\n              } else {\n                $(\"#m_menu_webstore\").css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_news').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mania').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_contact').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_faq').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_profile').css({\n                  \"display\": \"table\"\n                });\n                for (i = 0; i < 8; i++) {\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                }\n                $('#arrow_5').attr({\n                  \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                });\n              }\n            } else if (cat == 1) {\n              confirm_to_PC('../company_profile');\n            }\n            break;\n          case 8: //contact\n            window.location.href = '../contact/';\n            return;\n            $(\" #mobile_menu\").animate({\n              scrollTop: '860px'\n            }, 200);\n            if (cat == 0) {\n              if ($('#m_menu_sub_contact').is(':visible')) {\n                $('#m_menu_sub_contact').css({\n                  \"display\": \"none\"\n                });\n              } else {\n                $(\"#m_menu_webstore\").css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_news').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mania').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_profile').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_faq').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_contact').css({\n                  \"display\": \"table\"\n                });\n                for (i = 0; i < 8; i++) {\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                }\n                $('#arrow_6').attr({\n                  \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                });\n              }\n            } else if (cat == 1) {\n              confirm_to_PC('../contact');\n            }\n            break;\n          case 9: //faq\n            window.location.href = '../faq/';\n            return;\n            $(\" #mobile_menu\").animate({\n              scrollTop: '860px'\n            }, 200);\n            if (cat == 0) {\n              if ($('#m_menu_sub_faq').is(':visible')) {\n                $('#m_menu_sub_faq').css({\n                  \"display\": \"none\"\n                });\n              } else {\n                $(\"#m_menu_webstore\").css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_news').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mania').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_profile').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_contact').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_faq').css({\n                  \"display\": \"table\"\n                });\n                for (i = 0; i < 8; i++) {\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                }\n                $('#arrow_7').attr({\n                  \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                });\n              }\n            } else if (cat == 1) {\n              confirm_to_PC('../faq');\n            }\n            break;\n          case 10: //faq\n            window.location.href = '../sitemap/';\n            break;\n          case 11: //store list\n            window.location.href = '../index/?s=c3RvcmVsaXN0&mi=Mg==';\n            break;\n          case 12: //Instagram\n            window.open('http://instagram.com/bape_japan', '_blank');\n            break;\n          case 13: //Facebook\n            window.open('https://www.facebook.com/BAPE.OFFICIAL', '_blank');\n            break;\n          case 14: //Twitter\n            window.open('https://twitter.com/BAPEOFFICIAL', '_blank');\n            break;\n          case 15: //MR. BATHING APE®\n            $(\" #mobile_menu\").animate({\n              scrollTop: '985px'\n            }, 200);\n            if (cat == 0) {\n              if ($('#m_menu_sub_mrbathingape1').is(':visible') && $('#m_menu_sub_mrbathingape2').is(':visible')) {\n                $('#m_menu_sub_mrbathingape1').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mrbathingape2').css({\n                  \"display\": \"none\"\n                });\n              } else {\n                $(\"#m_menu_webstore\").css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_news').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mania').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_profile').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_faq').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_babymilostore1').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_babymilostore2').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_babymilostore3').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mrbathingape1').css({\n                  \"display\": \"table\"\n                });\n                $('#m_menu_sub_mrbathingape2').css({\n                  \"display\": \"table\"\n                });\n                for (i = 0; i < 8; i++) {\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                }\n                $('#arrow_3').attr({\n                  \"src\": \"../lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                });\n              }\n            } else if (cat == 1) {\n              window.location.href = '../mrbathingape/';\n            } else if (cat == 2) {\n              window.location.href = '../mrbathingape/dealers.php';\n            }\n            break;\n          case 151: //MR. BATHING APE®\n            $(\" #mobile_menu\").animate({\n              scrollTop: '985px'\n            }, 200);\n            if (cat == 0) {\n              if ($('#m_menu_sub_babymilostore1').is(':visible') && $('#m_menu_sub_babymilostore2').is(':visible') && $('#m_menu_sub_babymilostore3').is(':visible')) {\n                $('#m_menu_sub_babymilostore1').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_babymilostore2').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_babymilostore3').css({\n                  \"display\": \"none\"\n                });\n              } else {\n                $(\"#m_menu_webstore\").css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_news').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mania').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_profile').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_faq').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mrbathingape1').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_mrbathingape2').css({\n                  \"display\": \"none\"\n                });\n                $('#m_menu_sub_babymilostore1').css({\n                  \"display\": \"table\"\n                });\n                $('#m_menu_sub_babymilostore2').css({\n                  \"display\": \"table\"\n                });\n                $('#m_menu_sub_babymilostore3').css({\n                  \"display\": \"table\"\n                });\n                for (i = 0; i < 8; i++) {\n                  $('#m_menu_webstore_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                }\n                $('#arrow_3').attr({\n                  \"src\": \"../lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                });\n              }\n            } else if (cat == 1) {\n              window.location.href = '../babymilostore/';\n            } else if (cat == 2) {\n              window.location.href = '../babymilostore/dealers.php';\n            }\n            break;\n          case 16: //webstore cat/sub cat\n            //     pos = cat*125+360;\n            //    $(\" #mobile_menu\").animate({ scrollTop: pos+'px' }, 200);\n            for (i = 0; i < 8; i++) {\n              if (i == cat) {\n                if ($('#m_menu_lookbook_cat_' + i).is(':visible')) {\n                  console.log('1');\n                  $('#m_menu_lookbook_cat_' + i).css({\n                    \"display\": \"none\"\n                  });\n                  $('#larrow_1').attr({\n                    \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                  });\n                  $('#larrow_1_' + cat).attr({\n                    \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\"\n                  });\n                } else {\n                  $('#m_menu_lookbook_cat_' + i).css({\n                    \"display\": \"table\"\n                  });\n                  $('#larrow_1').attr({\n                    \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                  });\n                  $('#larrow_1_' + cat).attr({\n                    \"src\": \"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\"\n                  });\n                }\n              } else {\n                $('#m_menu_lookbook_cat_' + i).css({\n                  \"display\": \"none\"\n                });\n              }\n            }\n            break;\n          case 17: //eyewear\n            window.location.href = '../eyewear/';\n            break;\n        }\n      }\n      function confirm_to_PC(page) {\n        var retVal = confirm(\"PC SITE ??\");\n        if (retVal == true) {\n          switch (page) {\n            default:\n              //window.open(page+'/', '_blank');\n              window.location.href = page + '/';\n              break;\n            case '../mania':\n              window.open(page + '/', '_blank');\n              break;\n          }\n        } else {\n          return false;\n        }\n      }\n      $(document).ready(function($) {});\n    </script>\n    <style>\n      .new_menu {\n        width: 100%;\n      }\n      .new_menu tr {\n        height: 60px;\n        font-size: 36px;\n        color: #FFF;\n      }\n      .new_menu {\n        border: 0px none #FFF;\n        border-spacing: 0px;\n      }\n      .new_menu td {\n        height: 50px;\n        padding: 30px 30px;\n        border-top: 0px none #FFF;\n        border-left: 0px none #FFF;\n        border-right: 0px none #FFF;\n        border-bottom: 15px solid #FFF;\n      }\n      .m_menu_1_cat {\n        background-color: #414042;\n      }\n      .m_menu_2_cat {\n        background-color: #6d6e71;\n        position: relative;\n      }\n      .m_menu_3_cat {\n        background-color: #a7a9ac;\n        position: relative;\n      }\n      .m_menu_4_cat {\n        background-color: #d1d3d4;\n        position: relative;\n        color: #555;\n      }\n      .new_menu a {\n        color: #FFF;\n      }\n      .max_size {\n        width: 100%;\n        height: 100%;\n      }\n      .m_sub_menu_class {\n        width: 100%;\n        display: none;\n      }\n      .m_sub_menu_cat_class {\n        width: 100%;\n        display: none;\n      }\n      .float_arrow {\n        position: absolute;\n        background-repeat: no-repeat;\n        top: 35px;\n        right: 30px;\n        /*background-color:#fff;*/\n        height: 60px;\n        width: 60px;\n      }\n      .float_arrow_2 {\n        position: absolute;\n        background-repeat: no-repeat;\n        top: 45px;\n        right: 20px;\n        /*background-color:#fff;*/\n        height: 60px;\n        width: 60px;\n      }\n      .mobile_menu {\n        display: none;\n        left: 125px;\n      }\n    </style>\n    <style type=\"text/css\">\n      .scorpion-click-indicator {\n        z-index: 2147483646;\n        position: absolute;\n        box-shadow: 0 0 0 3px rgba(111, 148, 182, 0.3);\n        border-radius: 5px;\n        width: 40px;\n        height: 40px;\n        animation: scorpion-click-anim 0.5s ease-out forwards;\n      }\n      @keyframes scorpion-click-anim {\n        0% {\n          box-shadow: 0 0 0 3px rgba(111, 148, 182, 0.8);\n          opacity: 1;\n          -webkit-transform: scale3d(0.6, 0.6, 1);\n          transform: scale3d(0.6, 0.6, 1);\n        }\n        100% {\n          box-shadow: 0 0 0 100px rgba(111, 148, 182, 0.3);\n          opacity: 0;\n          -webkit-transform: scale3d(1, 1, 1);\n          transform: scale3d(1, 1, 1);\n        }\n      }\n      .scorpion-position-indicator {\n        z-index: 2147483646;\n        position: absolute;\n        border-radius: 2px;\n        background-color: #FF4136;\n        animation: scorpion-pulse-anim 1s ease-out infinite;\n      }\n      @keyframes scorpion-pulse-anim {\n        0% {\n          box-shadow: 0 0 0 3px rgba(255, 65, 54, 0.6);\n          transform: scale3d(0.6, 0.6, 1);\n        }\n        100% {\n          box-shadow: 0 0 0 20px rgba(255, 65, 54, 0.1);\n          transform: scale3d(1, 1, 1);\n        }\n      }\n    </style>\n  </head>\n  <body style=\"height: 585px; overflow: hidden;\">\n    <div id=\"overlay_popup_7PB46\" class=\"nowhereHolderOverLay\" style=\"width: 100%; height: 100%; top: 0px; left: 0px; position: absolute; z-index: 1000; background-color: rgb(0, 0, 0); opacity: 0.5;\"></div>\n    <div id=\"popup_7PB46\" class=\"nowhereHolder\" style=\"opacity: 1; top: 50%; left: 50%; z-index: 1000; position: absolute; background-color: rgb(255, 255, 255); border-radius: 10px; width: 400px; height: 188px; margin-top: -94px; margin-left: -200px;\">\n      <div class=\"nowhereCloseBtn pointer\" style=\"width:33px;height:33px;cursor: pointer;position: absolute;top:-17px;right:-17px; background-color: #fff; -webkit-box-shadow: 0px 0px 6px 0px rgba(77,77,77,1); -moz-box-shadow: 0px 0px 6px 0px rgba(77,77,77,1);box-shadow: 0px 0px 6px 0px rgba(77,77,77,1);border-radius: 13px;border-radius: 50%;padding-bottom: 0px;z-index:1000\"><img src=\"/lib/img/close.png\" style=\"cursor: pointer;height: 14px;left: 50%;margin-left: -7px;margin-top: -7px;position: absolute;top: 50%;\"></div>\n      <div class=\"nowherePopupOutter nano\" style=\"width: 100%; height: 100%; overflow: hidden; border-radius: 10px;\">\n        <div class=\"nowherePopup nano-content\" style=\"height:100%;\">\n          <div class=\"nowhereContent\" style=\"float: left;width: 100%;\">\n            <table width=\"100%\" style=\"padding:20px\" '=\"\"><tbody><tr><td width=\"50%\" align=\"center\"><a href=\"https://us.bape.com/\" target=\"_blank\" class=\"goBapeOnline\"><img src=\"/lib/img/usbape_redirect_img.jpg\" width=\"100%\"></a></td><td></td><td width=\"50%\" align=\"center\">ACCESS <a href=\"https://us.bape.com/\" target=\"_blank\" class=\"goBapeOnline\">US.BAPE</a> <br><br> OR <br><br>STAY ON <a href=\"javascript:void(0)\" class=\"stayBape\">BAPE.COM</a></td><td></td></tr></tbody></table><div class=\"padding20 col-xs-12\"></div></div></div></div></div><input type=\"hidden\" id=\"silding_menu\" name=\"silding_menu\" value=\"0\">\n<div class=\"mobile_menu\" id=\"mobile_menu\">\n    <table width=\"100%\" border=\"0\" cellspacing=\"2\" cellpadding=\"0\" bgcolor=\"#000000\">\n        <tbody><tr>\n            <td bgcolor=\"#FFFFFF\"><table class=\"new_menu\">\n                                            <tbody><tr>\n                            <td class=\"m_menu_1_cat top\"><a href=\"../login/\">LOG IN</a></td>\n                        </tr>\n                        <tr>\n                            <td class=\"m_menu_1_cat\"><a href=\"../signup/\">SIGN UP</a></td>\n                        </tr>\n                                            <tr>\n                        <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(1,0);\">WEB STORE<div class=\"float_arrow\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\"></div></td>\n                    </tr>\n                </tbody></table>\n                <div class=\"m_sub_menu_class\" id=\"m_menu_webstore\">\n                                            <table class=\"new_menu\">\n                            <tbody><tr><td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,0);\">\n                                    MEN' S <div class=\"float_arrow_2\">\n              <img id=\"arrow_1_0\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n          </div>\n          </td>\n          </tr>\n          </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_0\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MjM='\">T-SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MTg='\">CUT AND SEWN <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MjA='\">SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MjI='\">KNIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MTc='\">JACKET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MjE='\">PANTS <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MTk='\">FOOTWEAR <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MTY='\">GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,1);\">\n                  LADIES' <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_1\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjM='\">T-SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MTg='\">CUT AND SEWN <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjA='\">SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjI='\">KNIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MTc='\">JACKET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjE='\">PANTS <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjU='\">SKIRT+ONE PIECE<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MTk='\">FOOTWEAR <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MTY='\">GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,2);\">\n                  KIDS' <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_2\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_2\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjM='\">T-SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MTg='\">CUT AND SEWN <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjA='\">SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjI='\">KNIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MTc='\">JACKET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjE='\">PANTS <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjU='\">SKIRT+ONE PIECE<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MTk='\">FOOTWEAR <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MTY='\">GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,3);\">\n                  BABY <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_3\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_3\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjM='\">T-SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MTg='\">CUT AND SEWN<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjA='\">SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjI='\">KNIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MTc='\">JACKET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MzI='\">BABY SET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MzM='\">BABY SUIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjE='\">PANTS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjU='\">SKIRT+ONE PIECE<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MTk='\">FOOTWEAR<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MzA='\">BABY GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MzE='\">MOMS GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,4);\">\n                  MR. BATHING APE <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_4\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_4\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MjM='\">T-SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MTg='\">CUT AND SEWN <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MjA='\">SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MjI='\">KNIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MTc='\">JACKET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MjE='\">PANTS <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MTk='\">FOOTWEAR <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MTY='\">GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,5);\">\n                  EYEWEAR <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_5\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_5\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OA==&amp;stock=MQ==&amp;categoryid=MTY='\">GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,6);\">\n                  ORDER <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_6\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_6\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MjM='\">T-SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MTg='\">CUT AND SEWN <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MjA='\">SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MjI='\">KNIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MTc='\">JACKET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MjE='\">PANTS <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MjU='\">SKIRT+ONE PIECE<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MTk='\">FOOTWEAR <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;stock=MQ==&amp;categoryid=MTY='\">GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,7);\">\n                  BABY MILO STORE <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_7\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_7\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MjM='\">T-SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MTg='\">CUT AND SEWN <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MjA='\">SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MjI='\">KNIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MTc='\">JACKET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MjE='\">PANTS <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MjU='\">SKIRT+ONE PIECE<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MTk='\">FOOTWEAR <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;stock=MQ==&amp;categoryid=MTY='\">GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(2,8);\">\n                  ONLINE EXCLUSIVE <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_8\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_webstore_cat_8\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MjM='\">T-SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MTg='\">CUT AND SEWN <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MjA='\">SHIRT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MjI='\">KNIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MTc='\">JACKET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MjE='\">PANTS <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MjU='\">SKIRT+ONE PIECE<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MTk='\">FOOTWEAR <div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MTY='\">GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MzI='\">BABY SET<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MzM='\">BABY SUIT<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MzA='\">BABY GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;stock=MQ==&amp;categoryid=MzE='\">MOMS GOODS<div class=\"float_arrow_2\"><img id=\"arrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- store list-->\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(11,0);\">STORE LIST\n\n                <!--<div class=\"float_arrow\"><img id=\"arrow_2\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\"></div>-->\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <!-- store list-->\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(3,0);\">NEWS<div class=\"float_arrow\"></div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_news\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(3,1);\">PC SITE ??/td&gt;</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(4,0);\">LOOKBOOK<div class=\"float_arrow\"><img id=\"arrow_2\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\"></div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div class=\"m_sub_menu_class\" id=\"m_menu_lookbook\">\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(16,0);\">\n                  A BATHING APE®\n                  <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_0\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_lookbook_cat_0\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=MQ==&amp;t=MQ=='\">2020 SS MEN'S<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=MQ==&amp;t=Mg=='\">2020 SS LADIES'<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=MQ==&amp;t=Mw=='\">2019 AW MEN'S<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=MQ==&amp;t=NA=='\">2019 AW LADIES'<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=MQ==&amp;t=NQ=='\">2019 SS MEN'S<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=MQ==&amp;t=Ng=='\">2019 SS LADIES'<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(16,1);\">\n                  BAPE KIDS®\n                  <div class=\"float_arrow_2\">\n                    <img id=\"arrow_1_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"15px\" width=\"15px\">\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"new_menu m_sub_menu_cat_class\" id=\"m_menu_lookbook_cat_1\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=Mg==&amp;t=MQ=='\">2020 SS<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=Mg==&amp;t=Mg=='\">2019 AW<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n              <tr>\n                <td class=\"m_menu_4_cat\" onclick=\"window.location.href = '../lookbook/?s=Mg==&amp;t=Mw=='\">2019 SS<div class=\"float_arrow_2\"><img id=\"larrow_1\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_left_arrow_2.png\" height=\"15px\" width=\"15px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_lookbook\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(4,1);\">PC SITE ??/td&gt;</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(5,0);\">BAPE® MANIA<div class=\"float_arrow\">\n\n                  <!--<img id=\"arrow_4\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\">-->\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_mania\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(5,1);\">PC SITE ??/td&gt;</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(6,0);\">BAPE® CARD</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(15,0);\">MR. BATHING APE®<div class=\"float_arrow\"><img id=\"arrow_3\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\"></div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_mrbathingape1\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(15,1);\">LOOKBOOK</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_mrbathingape2\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(15,2);\">DEALERS</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(151,0);\">BABY MILO® STORE<div class=\"float_arrow\"><img id=\"arrow_3\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\"></div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_babymilostore1\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(151,1);\">ITEMS</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_babymilostore2\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(151,2);\">DEALERS</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_babymilostore3\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"window.open('https://www.instagram.com/babymilostore_japan/');\">INSTAGRAM</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(17,0);\">EYEWEAR<div class=\"float_arrow\"></div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(7,0);\">PROFILE<div class=\"float_arrow\">\n\n                  <!--<img id=\"arrow_5\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\">-->\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_profile\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(7,1);\">PC SITE ??/td&gt;</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(8,0);\">CONTACT<div class=\"float_arrow\">\n\n                  <!--<img id=\"arrow_6\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\">-->\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_contact\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(8,1);\">PC SITE ??/td&gt;</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(9,0);\">FAQ<div class=\"float_arrow\">\n\n                  <!--<img id=\"arrow_7\" src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_down_arrow.png\" height=\"30px\" width=\"30px\">-->\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu m_sub_menu_class\" id=\"m_menu_sub_faq\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(9,1);\">PC SITE ??/td&gt;</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_2_cat\" onclick=\"javascript:m_sub_menu(10,0);\">SITE MAP</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(12,0);\">Instagram</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(13,0);\">Facebook</td>\n            </tr>\n          </tbody>\n        </table>\n        <table class=\"new_menu\" width=\"100%\">\n          <tbody>\n            <tr>\n              <td class=\"m_menu_3_cat\" onclick=\"javascript:m_sub_menu(14,0);\">Twitter</td>\n            </tr>\n          </tbody>\n        </table>\n        <a href=\"#mobile_menu\" onclick=\"javascript:$(&quot; #mobile_menu&quot;).animate({ scrollTop: 0 }, 200);\">\n          <table class=\"new_menu\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td class=\"m_menu_2_cat\">PAGE TOP<div class=\"float_arrow\"><img src=\"https://bape.com/lib/img/webstore/mobile/sub_menu_up_arrow.png\" height=\"30px\" width=\"30px\"></div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </a></td>\n        </tr>\n        </tbody>\n        </table>\n      </div>\n      <script type=\"text/javascript\" src=\"../lib/js/cms.js\"></script>\n      <script type=\"text/javascript\" src=\"../lib/js/nowhere.js\"></script>\n      <script type=\"text/javascript\" src=\"../lib/js/nowhere.popup.js\"></script>\n      <script type=\"text/javascript\" src=\"https://www.google.com/jsapi?key=AIzaSyAkRzfLCXhwe06Sx8lPIig4EfXWVuvrr4o\"></script>\n      <script type=\"text/javascript\">\n        window.mobileAndTabletcheck = function() {\n          var check = false;\n          (function(a) {\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n          })(navigator.userAgent || navigator.vendor || window.opera);\n          return check;\n        };\n        var root_header_path = '/';\n        function geoTest() {\n          var callback = function(country_code) {\n            //            $.inArray(country_code, [\n            //                \"FR\",\n            //                \"FX\",\n            //                \"DE\",\n            //                \"NL\",\n            //                \"DK\",\n            //                \"IT\",\n            //                \"CH\",\n            //                \"ES\",\n            //                \"SE\",\n            //                \"BE\",\n            //                \"NO\",\n            //                \"FI\",\n            //                \"AT\",\n            //                \"IE\",\n            //                \"PT\",\n            //                \"LU\",\n            //            ]) != -1\n            if (true) {\n              nowhere.popupHelper.closeIcon = 'lib/img/close.png';\n              var newPopup = nowhere.popupHelper.new(function() {\n                if ($(window).width() < 768 || mobileAndTabletcheck()) {\n                  return $(window).width() * 0.8;\n                }\n                return $(window).width() * 0.5\n              }, function() {\n                return 'auto';\n              }, true);\n              if (mobileAndTabletcheck()) {\n                newPopup.append(\"<a href='/webstore/gridview.php?brandid=NA==&stock=MQ==&categoryid=MTY='><img src='../lib/img/170427_BPO_BNL.jpg' width='100%'></a>\");\n              } else {\n                newPopup.append(\"<a href='/webstore/?brandid=NA==&categoryid=MTY=&stock=MQ=='><img src='../lib/img/170427_BPO_BNL.jpg' width='100%'></a>\");\n              }\n              //newPopup.append(\"<table width='100%' style='padding:20px' '><tr><td width='50%' align='center'><a href='javascript:void(0)' class='goBapeOnline'>bapeonline.com</a><td><td width='50%' align='center'>ACCESS EUOPE WEBSTORE<br> \\\"BAPEONLINE\\\" <br><br> OR <br><br> <a href='javascript:void(0)' class='stayBape'>STAY BAPE.COM</a><td></tr></table>\");\n              newPopup.enableOverLay(\"#000\", 0.5);\n              newPopup.disableDocumentScroll = true;\n              newPopup.showClose = true;\n              newPopup.cloesToDestroy = true;\n              newPopup.append($('<div class=\"padding20 col-xs-12\"></div>'));\n              newPopup.on('loaded.init', function($container) {\n                // console.log('loaded.init');\n                $($container).find(\".closeBtn\").click(function() {\n                  newPopup.hide();\n                });\n                $($container).find(\".stayBape\").click(function() {\n                  newPopup.hide();\n                });\n                $($container).find(\"img\").load(function() {\n                  newPopup.resize();\n                  console.log('img load');\n                });\n                //                        $($container).find(\".goBapeOnline\").click(function () {\n                //                            document.location.href = 'http://bapeonline.com';\n                //                        });\n              });\n              newPopup.on('loaded', function($thisContainer) {\n                newPopup.resize();\n              });\n              newPopup.on('resize', function($thisContainer) {\n                //                        newPopup.resize(false);\n              });\n              newPopup.setBackgroundColor(\"#ffffff\");\n              newPopup.setCss({\n                \"border-radius\": \"10px\"\n              });\n              newPopup.show();\n            }\n          };\n          callback();\n          /*\n           if (google.loader.ClientLocation) {\n           var country_code = google.loader.ClientLocation.address.country_code;\n           callback(country_code);\n           } else {\n           $.getJSON('https://freegeoip.net/json/', function(json){\n           if(json.country_code) callback(json.country_code);\n           });\n           }\n           */\n        }\n        // disable here\n        // geoTest();\n        function geoTest2() {\n          //alert (\"TEST 123\");\n          //alert (\"country code = \" + country_code);\n          var callback = function(country_code) {\n            //alert (\"country code 2 = \" + country_code);\n            if ($.inArray(country_code, [\n                \"US\",\n                \"CA\"\n              ]) != -1) {\n              nowhere.popupHelper.closeIcon = 'lib/img/close.png';\n              var newPopup = nowhere.popupHelper.new(function() {\n                if ($(window).width() < 768 || mobileAndTabletcheck()) {\n                  return $(window).width() * 0.8;\n                }\n                return $(window).width() * 0.5\n              }, function() {\n                return 'auto';\n              }, true);\n              //alert (\"TEST 456\");\n              if (mobileAndTabletcheck()) {\n                newPopup.append(\"<table width='100%' style='padding:20px' '><tr><td width='50%' align='center'><a href='https://us.bape.com/' target='_blank' class='goBapeOnline'><img src='\" + root_header_path + \"lib/img/usbape_redirect_img.jpg' width='100%'></a><td><td width='50%' align='center'>ACCESS <a href='https://us.bape.com/' target='_blank' class='goBapeOnline'>US.BAPE</a> <br><br> OR <br><br>STAY ON <a href='javascript:void(0)' class='stayBape'> BAPE.COM</a><td></tr></table>\");\n              } else {\n                newPopup.append(\"<table width='100%' style='padding:20px' '><tr><td width='50%' align='center'><a href='https://us.bape.com/' target='_blank' class='goBapeOnline'><img src='\" + root_header_path + \"lib/img/usbape_redirect_img.jpg' width='100%'></a><td><td width='50%' align='center'>ACCESS <a href='https://us.bape.com/' target='_blank' class='goBapeOnline'>US.BAPE</a> <br><br> OR <br><br>STAY ON <a href='javascript:void(0)' class='stayBape'>BAPE.COM</a><td></tr></table>\");\n              }\n              newPopup.enableOverLay(\"#000\", 0.5);\n              newPopup.disableDocumentScroll = true;\n              newPopup.showClose = true;\n              newPopup.cloesToDestroy = true;\n              newPopup.append($('<div class=\"padding20 col-xs-12\"></div>'));\n              newPopup.on('loaded.init', function($container) {\n                // console.log('loaded.init');\n                $($container).find(\".closeBtn\").click(function() {\n                  newPopup.hide();\n                });\n                $($container).find(\".stayBape\").click(function() {\n                  newPopup.hide();\n                  cms.setCookie('staybape', 1, 1, \"/\");\n                });\n                $($container).find(\"img\").load(function() {\n                  newPopup.resize();\n                  console.log('img load');\n                });\n                //                        $($container).find(\".goBapeOnline\").click(function () {\n                //                            document.location.href = 'http://bapeonline.com';\n                //                        });\n              });\n              newPopup.on('loaded', function($thisContainer) {\n                newPopup.resize();\n              });\n              newPopup.on('resize', function($thisContainer) {\n                //                        newPopup.resize(false);\n              });\n              newPopup.setBackgroundColor(\"#ffffff\");\n              newPopup.setCss({\n                \"border-radius\": \"10px\"\n              });\n              newPopup.show();\n            }\n          };\n          callback();\n          if (google.loader.ClientLocation) {\n            //                     console.log('google');\n            //alert (\"TEST 789\");\n            var country_code = google.loader.ClientLocation.address.country_code;\n            callback(country_code);\n          } else {\n            //alert (\"TEST 001\");\n            $.getJSON('../webstore/geoip.php', function(json) {\n              //                         console.log('geoip');\n              //                       console.log(json.data.geo.country_code);\n              if (json.data.geo) {\n                callback(json.data.geo.country_code);\n                //alert (\"country code 4\" + country_code);\n              } else {\n                //alert (\"Fail\");\n              }\n            });\n            //alert (\"country code 3 = \" + country_code);\n          }\n        }\n        // disable here\n        if (cms.getCookie('staybape') != \"1\") {\n          //alert (\"TEST 0000\");\n          geoTest2();\n        }\n      </script>\n      <style>\n        body {\n          padding: 0;\n          margin: 0;\n        }\n        img {\n          border: 0;\n        }\n        @media only screen and (max-device-width: 479px) {\n          .wrapper {\n            display: none;\n          }\n          .m_wrapper {\n            position: relative;\n            display: block;\n            width: 980px;\n            /*font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; */\n            font-size: 3em;\n            line-height: 1.5em;\n            color: #000;\n          }\n          .header_wrapper,\n          .content_wrapper,\n          .footer_wrapper {\n            display: none;\n          }\n        }\n      </style>\n      <script type=\"text/javascript\">\n        var storelist_lat;\n        var storelist_lon;\n        jQuery(document).ready(function($) {\n          //storelist slider\n          for (var i = 0; i < 0; i++) {\n            $('#banner-slide-' + i).bjqs({\n              width: 820,\n              height: 546,\n              animduration: 450,\n              animspeed: 5000,\n              showcontrols: false,\n              showmarkers: false,\n              automatic: true\n            });\n          }\n          var slider = $('.bxslider').bxSlider({\n            pager: false,\n          });\n          slider.startAuto();\n        }); //end of ready\n        //gps\n        //window.onload = function() {\n        function init_gps() {\n          if (/Android|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n            var startPos;\n            if (navigator.geolocation) {\n              navigator.geolocation.getCurrentPosition(function(position) {\n                startPos = position;\n                //document.getElementById(\"startLat\").innerHTML = startPos.coords.latitude;\n                //document.getElementById(\"startLon\").innerHTML = startPos.coords.longitude;\n                storelist_lat = startPos.coords.latitude;\n                storelist_lon = startPos.coords.longitude;\n                //alert(\"startLat: \"+startPos.coords.latitude);\n                storelist_gps();\n              }, function(error) {\n                //alert(\"Error occurred. Error code: \" + error.code);\n                //alert(\"Enable GPS function on your Mobile Phone to locate the BAPE STORE® nearby.\");\n                alert(\"近くのBAPE STORE®を見つけるためにあなたの携帯電話にGPS機能を有効にします。\");\n                // error.code can be:\n                //   0: unknown error\n                //   1: permission denied\n                //   2: position unavailable (error response from locaton provider)\n                //   3: timed out\n              });\n            }\n          }\n        }\n        //};\n        // Reused code - copyright Moveable Type Scripts - retrieved May 4, 2010.\n        // http://www.movable-type.co.uk/scripts/latlong.html\n        // Under Creative Commons License http://creativecommons.org/licenses/by/3.0/\n        function calculateDistance(lat1, lon1, lat2, lon2) {\n          var R = 6371; // km\n          var dLat = (lat2 - lat1).toRad();\n          var dLon = (lon2 - lon1).toRad();\n          var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) *\n            Math.sin(dLon / 2) * Math.sin(dLon / 2);\n          var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n          var d = R * c;\n          return d;\n        }\n        Number.prototype.toRad = function() {\n          return this * Math.PI / 180;\n        }\n        function storelist_gps() {\n          window.location.href = \"../index/?lat=\" + storelist_lat + \"&lon=\" + storelist_lon + \"&s=c3RvcmVsaXN0&mi=Mg==\";\n        }\n        var loc_url = location.search.split('loc=')[1];\n        if (loc_url == 1) {\n          init_gps();\n        }\n        setTimeout(function() {\n          document.getElementById(\"mainpage_news\").style.opacity = 1;\n        }, 1500);\n      </script>\n      <script type=\"text/javascript\">\n        var _gaq = _gaq || [];\n        _gaq.push(['_setAccount', 'UA-4693871-3']);\n        _gaq.push(['_trackPageview']);\n        (function() {\n          var ga = document.createElement('script');\n          ga.type = 'text/javascript';\n          ga.async = true;\n          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n          var s = document.getElementsByTagName('script')[0];\n          s.parentNode.insertBefore(ga, s);\n        })();\n      </script>\n      <a id=\"hidden_link\" href=\"../lib/img/index/popup/popup.jpg\" style=\"visibility:hidden;\"></a>\n      <div class=\"wrapper\">\n        <div id=\"index\"><br>\n          <div id=\"index_social_media\">\n            <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n              <tbody>\n                <tr>\n                  <td><a href=\"https://twitter.com/BAPEOFFICIAL\" target=\"_blank\"><img src=\"https://bape.com/lib/img/templates/tw_icon.png\" width=\"24\" height=\"19\" border=\"0\"></a></td>\n                  <td>&nbsp;</td>\n                  <td><a href=\"http://instagram.com/bape_japan\" target=\"_blank\"><img src=\"https://bape.com/lib/img/templates/ig_icon.png\" width=\"21\" height=\"21\" border=\"0\"></a></td>\n                  <td>&nbsp;</td>\n                  <td><a href=\"https://www.facebook.com/BAPE.OFFICIAL\" target=\"_blank\"><img src=\"https://bape.com/lib/img/templates/fb_icon.png\" width=\"21\" height=\"21\" border=\"0\"></a></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <br>\n          <br>\n\n          <!--\n        <div id =\"index_title\" class=\"spacing_max\"></div>\n        -->\n          <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n            <tbody>\n              <tr>\n                <td align=\"center\">\n                  <img src=\"https://bape.com/lib/img/index/index_title.png\" border=\"0\" width=\"295\">\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <br>\n          <br>\n          <div id=\"index_menu\">\n            <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n              <tbody>\n                <tr>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"../news/\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r1_c1.png\" border=\"0\" height=\"99\"> </a></td>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"../storelist/\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r1_c2.png\" border=\"0\" height=\"99\">\n                    </a></td>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"../webstore/\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r1_c3.png\" border=\"0\" height=\"99\">\n                    </a></td>\n                </tr>\n                <tr>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"../mrbathingape/\" target=\"_blank\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r2_c1.png\" border=\"0\" height=\"99\">\n                    </a></td>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"../lookbook/\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r2_c2.png\" border=\"0\" height=\"99\">\n                    </a></td>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"https://bapeonline.com/\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r2_c3.png\" border=\"0\" height=\"99\"> </a></td>\n                </tr>\n                <tr>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"https://bape.com/bapy/\" target=\"_blank\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r3_c1.png\" border=\"0\" height=\"99\" onmouseover=\"this.src='https://bape.com/lib/img/index/ie/index_r3_c1_h.png'\" onmouseout=\"this.src='https://bape.com/lib/img/index/ie/index_r3_c1.png'\"> </a></td>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"https://aape.jp/\" target=\"_blank\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r3_c2.png\" border=\"0\" height=\"99\" onmouseover=\"this.src='https://bape.com/lib/img/index/ie/index_r3_c2_h.png'\" onmouseout=\"this.src='https://bape.com/lib/img/index/ie/index_r3_c2.png'\"> </a></td>\n                  <td align=\"center\" valign=\"top\" width=\"125\" height=\"125\"><a href=\"../babymilostore/\">\n                      <img src=\"https://bape.com/lib/img/index/ie/index_r3_c3.png\" border=\"0\" height=\"99\" onmouseover=\"this.src='https://bape.com/lib/img/index/ie/index_r3_c3_h.png'\" onmouseout=\"this.src='https://bape.com/lib/img/index/ie/index_r3_c3.png'\"> </a></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"spacing_max\"></div>\n          <div class=\"footer_wrapper\">\n            <div class=\"footer\">\n              <div class=\"copyright\">\n                <div style=\"width:860px;\">\n                  <div class=\"ipad_footer_image\">\n                    <a href=\"../company_profile/\">\n                      <img onmouseover=\"this.src='https://bape.com/lib/img/templates/profile_over.png'\" onmouseout=\"this.src='https://bape.com/lib/img/templates/profile.png'\" src=\"https://bape.com/lib/img/templates/profile.png\" border=\"0\" style=\"height:13px;\">\n                    </a>\n                  </div>\n                  <div class=\"ipad_footer_image\">\n                    <a href=\"../newsletter/\">\n                      <img onmouseover=\"this.src='https://bape.com/lib/img/templates/footer_01_over.png'\" onmouseout=\"this.src='https://bape.com/lib/img/templates/footer_01.png'\" src=\"https://bape.com/lib/img/templates/footer_01.png\" border=\"0\" style=\"height:13px;\">\n                    </a>\n                  </div>\n                  <div class=\"ipad_footer_image\">\n                    <a href=\"../contact/\">\n                      <img onmouseover=\"this.src='https://bape.com/lib/img/templates/footer_02_over.png'\" onmouseout=\"this.src='https://bape.com/lib/img/templates/footer_02.png'\" src=\"https://bape.com/lib/img/templates/footer_02.png\" border=\"0\" style=\"height:13px;\">\n                    </a>\n                  </div>\n                  <div class=\"ipad_footer_image\">\n                    <a href=\"../faq/\">\n                      <img onmouseover=\"this.src='https://bape.com/lib/img/templates/footer_03_over.png'\" onmouseout=\"this.src='https://bape.com/lib/img/templates/footer_03.png'\" src=\"https://bape.com/lib/img/templates/footer_03.png\" border=\"0\" style=\"height:13px;\">\n                    </a>\n                  </div>\n                  <div class=\"ipad_footer_image\">\n                    <div onclick=\"mobile_alert('sitemap');\" style=\"cursor:pointer;\">\n                      <img onmouseover=\"this.src='https://bape.com/lib/img/templates/footer_06_over.png'\" onmouseout=\"this.src='https://bape.com/lib/img/templates/footer_06.png'\" src=\"https://bape.com/lib/img/templates/footer_06.png\" border=\"0\" style=\"height:13px;\">\n                    </div>\n                  </div>\n                  <div class=\"ipad_footer_image\">\n                    <div onclick=\"mobile_alert('help');\" style=\"cursor:pointer;\">\n                      <img onmouseover=\"this.src='https://bape.com/lib/img/templates/help_no-border_over.png'\" onmouseout=\"this.src='https://bape.com/lib/img/templates/help_no-border.png'\" src=\"https://bape.com/lib/img/templates/help_no-border.png\" border=\"0\" style=\"height:13px;\">\n                    </div>\n                  </div>\n                  <div class=\"ipad_footer_image\">\n                    <div onclick=\"javascript:location.href='http://www.bape.com/recruit'\" style=\"cursor:pointer;\">\n                      <img onmouseover=\"this.src='https://bape.com/lib/img/templates/recruit_no-border_over.png'\" onmouseout=\"this.src='https://bape.com/lib/img/templates/recruit_no-border.png'\" src=\"https://bape.com/lib/img/templates/recruit_no-border.png\" border=\"0\" style=\"height:13px;\">\n                    </div>\n                  </div>\n\n                  <!--\n                 <div class=\"ipad_footer_image\"><div onclick=\"document.location.href='../unsubscription/'\" style=\"cursor:pointer;\">\n                       unsubscription\n                    </div>\n                </div>\n                -->\n\n                  <!--\n                <div class=\"ipad_footer_image\">\n                    <a href=\"../faq/english.php\"><img src=\"https://bape.com/lib/img/templates/footer_04.png\" border=\"0\" style=\"height:13px;\"/></a>\n                </div>\n                <div class=\"ipad_footer_image\">\n                    <a href=\"../newsletter/\"><img src=\"https://bape.com/lib/img/templates/footer_01.png\" border=\"0\" style=\"height:13px;\"/></a>\n                </div>\n                -->\n                  <div class=\"ipad_footer_image\" style=\"float:right;padding-right:20px; cursor:default;\">\n                    <img src=\"https://bape.com/lib/img/templates/footer_05.png\" style=\"height:11px;\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div style=\"height:50px\"></div>\n          <br>\n        </div>\n      </div>\n\n      <!--end of web-->\n\n      <!--mobile-->\n      <div class=\"m_wrapper\">\n        <div id=\"m_header\">\n          <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n            <tbody>\n              <tr>\n                <td width=\"20\" height=\"88\">&nbsp;</td>\n                <td style=\"min-width:510px;\"><a id=\"m_title_img\" href=\"../index/\"><img src=\"https://bape.com/lib/m_img/template/header_title.png\" width=\"510\"></a></td>\n                <td>&nbsp;</td>\n                <td><a href=\"../login/\"><img src=\"https://bape.com/lib/m_img/template/m_header/m_cart.png\" height=\"85\"></a></td>\n                <td width=\"20px\"></td>\n                <td><a href=\"../favourite/\"><img src=\"https://bape.com/lib/m_img/template/m_header/m_fav.png\" height=\"85\"></a></td>\n                <td width=\"20px\"></td>\n                <td><img src=\"https://bape.com/lib/m_img/template/m_header/m_menu.png\" height=\"85\" onclick=\"javascript:menu_move(1);\"></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <style>\n          #m_header {\n            background-size: cover;\n            height: 150px;\n            line-height: 150px;\n          }\n          .m_wrapper {\n            margin-top: 180px;\n          }\n          .m_wrapper select {\n            text-align: center;\n            margin: 0 auto;\n            -webkit-border-radius: 0px;\n            -moz-border-radius: 0px;\n            border-radius: 0px;\n            -webkit-box-shadow: 0 3px 0 #ccc, 0 -1px #fff inset;\n            -moz-box-shadow: 0 3px 0 #ccc, 0 -1px #fff inset;\n            box-shadow: 0 3px 0 #ccc, 0 -1px #fff inset;\n            background: #fff;\n            color: #000;\n            font-size: 35px;\n            padding: 0 20px;\n            width: 85%;\n            height: 100px;\n            outline: none;\n            display: inline-block;\n            -webkit-appearance: none;\n            background-position: right center;\n            -moz-appearance: none;\n            appearance: none;\n            cursor: pointer;\n            background-image: url(../lib/m_img/signup/m_signup11.png);\n          }\n          .m_wrapper input {\n            font-size: 35px;\n          }\n          .m_wrapper textarea {\n            font-size: 35px;\n          }\n        </style>\n        <div class=\"mobile_content\">\n          <div id=\"mainpage_news\" style=\"opacity: 1;\">\n            <div class=\"bx-wrapper\" style=\"max-width: 100%; margin: 0px auto;\">\n              <div class=\"bx-viewport\" style=\"width: 100%; overflow: hidden; position: relative; height: 0px;\">\n                <ul class=\"bxslider\" style=\"width: 1215%; position: relative; transition-duration: 0.5s; transform: translate3d(0px, 0px, 0px);\">\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\" class=\"bx-clone\"><a href=\"../news/m_content.php?u=MTgwMw==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/2001212_MMVS_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgwNA==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/200210_NIFEBK_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgwNQ==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/200210_NIFEBM_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgxNg==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/200212_RAHN_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgxOA==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/200212_MCKCL_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgxNw==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/2001212_MBPWBK_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgwNg==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/200210_NIFEBL_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgxMw==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/191009_ASR_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgxNQ==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/200210_JMWHJ_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgxNA==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/200210_MR_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\"><a href=\"../news/m_content.php?u=MTgwMw==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/2001212_MMVS_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                  <li style=\"float: left; list-style: none; position: relative; width: 100px;\" class=\"bx-clone\"><a href=\"../news/m_content.php?u=MTgwNA==\" id=\"news_slider_url_1\">\n                      <img src=\"https://bape.com/lib/img/news/news_img/200210_NIFEBK_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\">\n                    </a></li>\n                </ul>\n              </div>\n              <div class=\"bx-controls bx-has-controls-direction\">\n                <div class=\"bx-controls-direction\"><a class=\"bx-prev\" href=\"\">Prev</a><a class=\"bx-next\" href=\"\">Next</a></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"m_spacing_line\"></div>\n          <div style=\"height:670px;\">\n            <div style=\"float:left;border-width:1px; border-style:solid;border-color:#dddddd;margin-left:15px;margin-right:20px;margin-bottom:20px;\">\n              <a href=\"../news/m_content.php?u=MTc5NA==&amp;s=SkFOVUFSWSsyMDIw\">\n                <img src=\"https://bape.com/lib/img/news/news_img/BAPECOM_INFO_BNL2.jpg\" alt=\"\" width=\"465\" height=\"310\">\n              </a>\n            </div>\n            <div style=\"float:left;border-width:1px; border-style:solid;border-color:#dddddd;margin-bottom:20px;margin-reft:15px;\">\n              <a href=\"../news/m_content.php?u=MTgwNw==&amp;s=RkVCUlVBUlkrMjAyMA==\">\n                <img src=\"https://bape.com/lib/img/news/news_img/_200205_VD_BNL.jpg\" alt=\"\" width=\"465\" height=\"310\">\n              </a>\n            </div>\n            <div style=\"float:left;border-width:1px; border-style:solid;border-color:#dddddd;margin-left:15px;margin-right:20px;\">\n              <a href=\"../news/m_content.php?u=MTgxMQ==&amp;s=RkVCUlVBUlkrMjAyMA==\">\n                <img src=\"https://bape.com/lib/img/news/news_img/200206_BBR_BNL.jpg\" alt=\"\" width=\"465\" height=\"310\">\n              </a>\n            </div>\n            <div style=\"float:left;border-width:1px; border-style:solid;border-color:#dddddd;\">\n              <a href=\"../news/m_content.php?u=MTczMA==&amp;s=SkFOVUFSWSsyMDIw\">\n                <img src=\"https://bape.com/lib/img/news/news_img/191224_BS20_BNL.jpg\" alt=\"\" width=\"465\" height=\"310\">\n              </a>\n            </div>\n          </div>\n          <div class=\"m_spacing_line\"></div>\n          <div id=\"m_index_menu\">\n\n            <!--WEB STORE-->\n            <a href=\"#webstore_1\">\n              <div class=\"m_index_menu_1\" id=\"webstore_1\" onclick=\"m_menu_showhide('webstore', 2)\">\n                <div class=\"m_index_menu_1_padding\">WEB STORE</div>\n              </div>\n            </a>\n            <div id=\"webstore_2\" style=\"position:relative;  opacity:0; display:none;\">\n              <a href=\"#webstore_2_2\">\n                <div id=\"webstore_2_2\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 10)\">\n                  <div class=\"m_index_menu_2_padding\">MEN'S</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_10\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_10_5\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MjM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">T-SHIRT</div>\n                </div>\n                <div id=\"webstore_10_5\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MTg='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">CUT AND SEWN </div>\n                </div>\n                <div id=\"webstore_10_5\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MjA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SHIRT</div>\n                </div>\n                <div id=\"webstore_10_5\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MjI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">KNIT</div>\n                </div>\n                <div id=\"webstore_10_5\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MTc='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">JACKET</div>\n                </div>\n                <div id=\"webstore_10_5\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MjE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">PANTS </div>\n                </div>\n                <div id=\"webstore_10_5\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MTk='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">FOOTWEAR </div>\n                </div>\n                <div id=\"webstore_10_5\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mg==&amp;stock=MQ==&amp;categoryid=MTY='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">GOODS</div>\n                </div>\n              </div>\n\n              <!-- ================================================================================== -->\n              <a href=\"#webstore_2_3\">\n                <div id=\"webstore_2_3\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 11)\">\n                  <div class=\"m_index_menu_2_padding\">LADIES'</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_11\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">T-SHIRT</div>\n                </div>\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MTg='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">CUT AND SEWN </div>\n                </div>\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SHIRT</div>\n                </div>\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">KNIT</div>\n                </div>\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MTc='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">JACKET</div>\n                </div>\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">PANTS </div>\n                </div>\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MjU='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SKIRT+ONE PIECE</div>\n                </div>\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MTk='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">FOOTWEAR </div>\n                </div>\n                <div id=\"webstore_11_5\" class=\"m_index_menu_4 m_index_menu_level_11\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Mw==&amp;stock=MQ==&amp;categoryid=MTY='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">GOODS</div>\n                </div>\n              </div>\n\n              <!-- ================================================================================== -->\n              <a href=\"#webstore_2_1\">\n                <div id=\"webstore_2_1\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 12)\">\n                  <div class=\"m_index_menu_2_padding\">KIDS</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_12\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">T-SHIRT</div>\n                </div>\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MTg='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">CUT AND SEWN </div>\n                </div>\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SHIRT</div>\n                </div>\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">KNIT</div>\n                </div>\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MTc='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">JACKET</div>\n                </div>\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">PANTS </div>\n                </div>\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MjU='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SKIRT+ONE PIECE</div>\n                </div>\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MTk='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">FOOTWEAR </div>\n                </div>\n                <div id=\"webstore_12_5\" class=\"m_index_menu_4 m_index_menu_level_12\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=MQ==&amp;stock=MQ==&amp;categoryid=MTY='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">GOODS</div>\n                </div>\n              </div>\n\n              <!-- ================================================================================== -->\n              <a href=\"#webstore_2_6\">\n                <div id=\"webstore_2_6\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 13)\">\n                  <div class=\"m_index_menu_2_padding\">BABY</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_13\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">T-SHIRT</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MTg='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">CUT AND SEWN</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SHIRT</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">KNIT</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MTc='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">JACKET</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MzI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">BABY SET</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MzM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">BABY SUIT</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">PANTS</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MjU='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SKIRT+ONE PIECE</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MTk='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">FOOTWEAR</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MzA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">BABY GOODS</div>\n                </div>\n                <div id=\"webstore_13_5\" class=\"m_index_menu_4 m_index_menu_level_13\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Ng==&amp;stock=MQ==&amp;categoryid=MzE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">MOMS GOODS</div>\n                </div>\n              </div>\n\n              <!-- ================================================================================== -->\n              <a href=\"#webstore_2_7\">\n                <div id=\"webstore_2_7\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 14)\">\n                  <div class=\"m_index_menu_2_padding\">MR. BATHING APE</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_14\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_14_5\" class=\"m_index_menu_4 m_index_menu_level_14\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MjM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">T-SHIRT</div>\n                </div>\n                <div id=\"webstore_14_5\" class=\"m_index_menu_4 m_index_menu_level_14\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MTg='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">CUT AND SEWN </div>\n                </div>\n                <div id=\"webstore_14_5\" class=\"m_index_menu_4 m_index_menu_level_14\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MjA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SHIRT</div>\n                </div>\n                <div id=\"webstore_14_5\" class=\"m_index_menu_4 m_index_menu_level_14\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MjI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">KNIT</div>\n                </div>\n                <div id=\"webstore_14_5\" class=\"m_index_menu_4 m_index_menu_level_14\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MTc='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">JACKET</div>\n                </div>\n                <div id=\"webstore_14_5\" class=\"m_index_menu_4 m_index_menu_level_14\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MjE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">PANTS </div>\n                </div>\n                <div id=\"webstore_14_5\" class=\"m_index_menu_4 m_index_menu_level_14\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MTk='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">FOOTWEAR </div>\n                </div>\n                <div id=\"webstore_14_5\" class=\"m_index_menu_4 m_index_menu_level_14\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=Nw==&amp;stock=MQ==&amp;categoryid=MTY='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">GOODS</div>\n                </div>\n              </div>\n\n              <!-- ================================================================================== -->\n              <a href=\"#webstore_2_8\">\n                <div id=\"webstore_2_8\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 15)\">\n                  <div class=\"m_index_menu_2_padding\">EYEWEAR</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_15\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_15_5\" class=\"m_index_menu_4 m_index_menu_level_15\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OA==&amp;stock=MQ==&amp;categoryid=MTY='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">GOODS</div>\n                </div>\n              </div>\n\n              <!-- ================================================================================== -->\n              <a href=\"#webstore_2_9\">\n                <div id=\"webstore_2_9\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 16)\">\n                  <div class=\"m_index_menu_2_padding\">ORDER</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_16\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MjM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">T-SHIRT</div>\n                </div>\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MTg='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">CUT AND SEWN </div>\n                </div>\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MjA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SHIRT</div>\n                </div>\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MjI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">KNIT</div>\n                </div>\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MTc='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">JACKET</div>\n                </div>\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MjE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">PANTS </div>\n                </div>\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MjU='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SKIRT+ONE PIECE</div>\n                </div>\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MTk='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">FOOTWEAR </div>\n                </div>\n                <div id=\"webstore_16_5\" class=\"m_index_menu_4 m_index_menu_level_16\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=NA==&amp;categoryid=MTY='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">GOODS</div>\n                </div>\n              </div>\n              <a href=\"#webstore_2_10\">\n                <div id=\"webstore_2_10\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 17)\">\n                  <div class=\"m_index_menu_2_padding\">BABY MILO STORE</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_17\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MjM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">T-SHIRT</div>\n                </div>\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MTg='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">CUT AND SEWN </div>\n                </div>\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MjA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SHIRT</div>\n                </div>\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MjI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">KNIT</div>\n                </div>\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MTc='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">JACKET</div>\n                </div>\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MjE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">PANTS </div>\n                </div>\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MjU='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SKIRT+ONE PIECE</div>\n                </div>\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MTk='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">FOOTWEAR </div>\n                </div>\n                <div id=\"webstore_17_5\" class=\"m_index_menu_4 m_index_menu_level_17\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OQ==&amp;categoryid=MTY='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">GOODS</div>\n                </div>\n              </div>\n              <a href=\"#webstore_2_11\">\n                <div id=\"webstore_2_11\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"m_menu_showhide('webstore', 18)\">\n                  <div class=\"m_index_menu_2_padding\">ONLINE EXCLUSIVE</div>\n                </div>\n              </a>\n\n              <!-- array list -->\n              <div id=\"webstore_18\" style=\"position:relative;  opacity:0; display:none;\">\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MjM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">T-SHIRT</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MTg='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">CUT AND SEWN </div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MjA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SHIRT</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MjI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">KNIT</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MTc='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">JACKET</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MjE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">PANTS </div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MjU='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">SKIRT+ONE PIECE</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MTk='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">FOOTWEAR </div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MTY='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">GOODS</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MzI='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">BABY SET</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MzM='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">BABY SUIT</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MzA='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">BABY GOODS</div>\n                </div>\n                <div id=\"webstore_18_5\" class=\"m_index_menu_4 m_index_menu_level_18\" onclick=\"window.location.href = '../webstore/gridview.php?brandid=OTk=&amp;categoryid=MzE='\" style=\"position:relative;\">\n                  <div class=\"m_index_menu_3_padding\">MOMS GOODS</div>\n                </div>\n              </div>\n            </div>\n\n            <!--STORELIST-->\n            <script>\n              var lv1temptype = 0;\n              var lv2temptype = 999;\n              var lv3tempid = 999;\n              var lv3temptype = 999;\n              var lv4tempid = 999;\n              var lv4temptype = 999;\n              var lv4templau = 999;\n              function openstorelist() {\n                $('.m_lauclass').css(\"display\", \"none\");\n                $('.m_storedetail').css(\"display\", \"none\");\n                lv3tempid = 999;\n                lv3temptype = 999;\n                if (lv1temptype == 0) {\n                  closeother();\n                  closealllv2();\n                  $('#storelist_2').css(\"display\", \"block\");\n                  $('#storelist_2').css(\"opacity\", \"1\");\n                  $('#storelist_1').css(\"background-image\", \"url(../lib/m_img/index/arrow_up_lv1.png)\");\n                  $('.m_index_menu_level_2').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                  lv1temptype = 1;\n                  lv2temptype = 999;\n                  lv3tempid = 999;\n                  lv3temptype = 999;\n                  $('.m_index_menu_level_4_content').css(\"display\", \"none\");\n                } else {\n                  if ($('#storelist_2').css('display') === 'none') {\n                    closeother();\n                    closealllv2();\n                    $('#storelist_2').css(\"display\", \"block\");\n                    $('#storelist_2').css(\"opacity\", \"1\");\n                    $('#storelist_1').css(\"background-image\", \"url(../lib/m_img/index/arrow_up_lv1.png)\");\n                    $('.m_index_menu_level_2').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                    lv1temptype = 1;\n                    lv2temptype = 999;\n                    lv3tempid = 999;\n                    lv3temptype = 999;\n                  } else {\n                    $('#storelist_2').css(\"display\", \"none\");\n                    $('#storelist_1').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv1.png)\");\n                    $('.m_index_menu_level_2').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                    $('.m_index_menu_level_4_content').css(\"display\", \"none\");\n                    closealllv2();\n                    lv2temptype = 999;\n                    lv3tempid = 999;\n                    lv3temptype = 999;\n                    lv1temptype = 0;\n                  }\n                }\n              }\n              function openstorelistlv2(type, pid) {\n                closealllv2();\n                $('.m_lauclass').css(\"display\", \"none\");\n                lv3tempid = 999;\n                lv3temptype = 999;\n                $('.m_lauclass').css(\"display\", \"none\");\n                $('.m_storedetail').css(\"display\", \"none\");\n                $('.m_index_menu_level_2').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                if (lv2temptype == 999) {\n                  $('#storelist_' + type).css(\"display\", \"block\");\n                  $('#storelist_2_' + pid).css(\"background-image\", \"url(../lib/m_img/index/arrow_up_lv2.png)\");\n                  lv2temptype = type;\n                } else if (lv2temptype == type) {\n                  $('#storelist_' + type).css(\"display\", \"none\");\n                  $('#storelist_2_' + pid).css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                  lv2temptype = 999;\n                } else {\n                  $('#storelist_' + type).css(\"display\", \"block\");\n                  $('#storelist_2_' + pid).css(\"background-image\", \"url(../lib/m_img/index/arrow_up_lv2.png)\");\n                  lv2temptype = type;\n                }\n              }\n              function openstorelistlv3(id, type) {\n                $('.m_lauclass').css(\"display\", \"none\");\n                $('.m_storedetail').css(\"display\", \"none\");\n                $('.mlv4title').css(\"background\", \"url(../lib/m_img/index/arrow_storelist_right_lv3.png) no-repeat\");\n                $('.mlv4title').css(\"background-size\", \"contain\");\n                if (lv3tempid == 999 && lv3temptype == 999) {\n                  $('#storelist_lv3_' + id + '_' + type).css(\"display\", \"block\");\n                  lv3tempid = id;\n                  lv3temptype = type;\n                } else if (lv3tempid == id && lv3temptype == type) {\n                  $('#storelist_lv3_' + id + '_' + type).css(\"display\", \"none\");\n                  lv3tempid = 999;\n                  lv3temptype = 999;\n                } else {\n                  $('#storelist_lv3_' + id + '_' + type).css(\"display\", \"block\");\n                  lv3tempid = id;\n                  lv3temptype = type;\n                }\n              }\n              function openstorelistlv4(type, id, lau) {\n                $('.m_storedetail').css(\"display\", \"none\");\n                $('.mlv4title').css(\"background\", \"url(../lib/m_img/index/arrow_storelist_right_lv3.png) no-repeat\");\n                $('.mlv4title').css(\"background-size\", \"contain\");\n                if (lv4tempid == 999 && lv4temptype == 999 && lv4templau == 999) {\n                  lv4tempid = id;\n                  lv4temptype = type;\n                  lv4templau = lau;\n                  $('#storelist_' + type + '_' + lau + '_' + id).css(\"background\", \"url() no-repeat\");\n                  $('#storelist_' + type + '_' + lau + '_content_' + id).css(\"display\", \"block\");\n                } else if (lv4tempid == id && lv4temptype == type && lv4templau == lau) {\n                  $('#storelist_' + type + '_' + lau + '_content_' + id).css(\"display\", \"none\");\n                  $('#storelist_' + type + '_' + lau + '_' + id).css(\"background\", \"url(../lib/m_img/index/arrow_storelist_right_lv3.png) no-repeat\");\n                  $('#storelist_' + type + '_' + lau + '_' + id).css(\"background-size\", \"contain\");\n                  lv4tempid = 999;\n                  lv4temptype = 999;\n                  lv4templau = 999;\n                } else {\n                  $('#storelist_' + type + '_' + lau + '_content_' + id).css(\"display\", \"block\");\n                  $('#storelist_' + type + '_' + lau + '_' + id).css(\"background\", \"url() no-repeat\");\n                  lv4tempid = id;\n                  lv4temptype = type;\n                  lv4templau = lau;\n                }\n              }\n              function closealllv2() {\n                $('#storelist_6').css(\"display\", \"none\");\n                $('#storelist_5').css(\"display\", \"none\");\n                $('#storelist_3').css(\"display\", \"none\");\n                $('#storelist_4').css(\"display\", \"none\");\n              }\n              function closeother() {\n                m_menu_showhide(\"storelist\", 2);\n                $('#webstore_2').css(\"display\", \"none\");\n                $('#news_2').css(\"display\", \"none\");\n                $('#lookbook_2').css(\"display\", \"none\");\n                $('#mrbathingape_2').css(\"display\", \"none\");\n              }\n            </script>\n            <a href=\"#storelist_1\">\n              <div class=\"m_index_menu_1\" id=\"storelist_1\" onclick=\"openstorelist()\">\n                <div class=\"m_index_menu_1_padding\">STORE LIST</div>\n              </div>\n            </a>\n            <div id=\"storelist_2\" style=\"position:relative;display:none;\">\n              <div id=\"storelist_2_1\" class=\"m_index_menu_2 m_index_menu_level_2\">\n                <div class=\"m_index_menu_2_padding\" onclick=\"init_gps();\">現在地から探す</div>\n              </div> <!-- /////////////////////////next///////////////////////// -->\n              <a href=\"#storelist_2_2\">\n                <div id=\"storelist_2_4\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"openstorelistlv2(4,4);\">\n                  <div class=\"m_index_menu_2_padding\">BAPE STORE®</div>\n                </div>\n              </a>\n              <div id=\"storelist_4\" style=\"position: relative;display: none;\">\n                <div class=\"storelist_lau_4\" style=\"position: relative;\">\n                  <div id=\"storelist_4_j\" class=\"m_storelist_index_menu_3 m_index_menu_level_4\" onclick=\"openstorelistlv3(4,'j');\" style=\"position:relative;background: url(../lib/m_img/index/arrow_right_w_lv3.png) no-repeat;background-size: contain;width: 980px;height: 85px;padding-top: 35px;\">\n                    <a href=\"#storelist_4_5\">\n                      <div class=\"m_index_menu_3_padding\">\n                        日本\n                      </div>\n                    </a>\n                  </div>\n                  <div id=\"storelist_lv3_4_j\" class=\"m_lauclass\" style=\"position:relative;display:none;\">\n                  </div>\n                  <div id=\"storelist_4_i\" class=\"m_storelist_index_menu_3 m_index_menu_level_4\" onclick=\"openstorelistlv3(4,'i');\" style=\"position:relative;background: url(../lib/m_img/index/arrow_right_w_lv3.png) no-repeat;background-size: contain;width: 980px;height: 85px;padding-top: 35px;\">\n                    <a href=\"#storelist_4_0\">\n                      <div class=\"m_index_menu_3_padding\">\n                        海外\n                      </div>\n                    </a>\n                  </div>\n                  <div id=\"storelist_lv3_4_i\" class=\"m_lauclass\" style=\"position:relative;display:none;\">\n                  </div>\n                </div>\n              </div> <!-- /////////////////////////next///////////////////////// -->\n              <a href=\"#storelist_2_3\">\n                <div id=\"storelist_2_3\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"openstorelistlv2(3,3);\">\n                  <div class=\"m_index_menu_2_padding\">BAPE KIDS®</div>\n                </div>\n              </a>\n              <div id=\"storelist_3\" style=\"position: relative;display: none;\">\n                <div class=\"storelist_lau_3\" style=\"position: relative;\">\n                  <div id=\"storelist_3_j\" class=\"m_storelist_index_menu_3 m_index_menu_level_4\" onclick=\"openstorelistlv3(3,'j');\" style=\"position:relative;background: url(../lib/m_img/index/arrow_right_w_lv3.png) no-repeat;background-size: contain;width: 980px;height: 85px;padding-top: 35px;\">\n                    <a href=\"#storelist_3_0\">\n                      <div class=\"m_index_menu_3_padding\">\n                        日本\n                      </div>\n                    </a>\n                  </div>\n                  <div id=\"storelist_lv3_3_j\" class=\"m_lauclass\" style=\"position:relative;display:none;\">\n                  </div>\n                  <div id=\"storelist_3_i\" class=\"m_storelist_index_menu_3 m_index_menu_level_4\" onclick=\"openstorelistlv3(3,'i');\" style=\"position:relative;background: url(../lib/m_img/index/arrow_right_w_lv3.png) no-repeat;background-size: contain;width: 980px;height: 85px;padding-top: 35px;\">\n                    <a href=\"#storelist_3_0\">\n                      <div class=\"m_index_menu_3_padding\">\n                        海外\n                      </div>\n                    </a>\n                  </div>\n                  <div id=\"storelist_lv3_3_i\" class=\"m_lauclass\" style=\"position:relative;display:none;\">\n                  </div>\n                </div>\n              </div> <!-- /////////////////////////next///////////////////////// -->\n              <a href=\"#storelist_2_4\">\n                <div id=\"storelist_2_4\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"openstorelistlv2(5,4);\">\n                  <div class=\"m_index_menu_2_padding\">A BATHING APE PIRATE STORE®</div>\n                </div>\n              </a>\n              <div id=\"storelist_5\" style=\"position: relative;display: none;\">\n                <div class=\"storelist_lau_5\" style=\"position: relative;\">\n                  <div id=\"storelist_5_j\" class=\"m_storelist_index_menu_3 m_index_menu_level_4\" onclick=\"openstorelistlv3(5,'j');\" style=\"position:relative;background: url(../lib/m_img/index/arrow_right_w_lv3.png) no-repeat;background-size: contain;width: 980px;height: 85px;padding-top: 35px;\">\n                    <a href=\"#storelist_5_0\">\n                      <div class=\"m_index_menu_3_padding\">\n                        日本\n                      </div>\n                    </a>\n                  </div>\n                  <div id=\"storelist_lv3_5_j\" class=\"m_lauclass\" style=\"position:relative;display:none;\">\n                  </div>\n                  <div id=\"storelist_5_i\" class=\"m_storelist_index_menu_3 m_index_menu_level_4\" onclick=\"openstorelistlv3(5,'i');\" style=\"position:relative;background: url(../lib/m_img/index/arrow_right_w_lv3.png) no-repeat;background-size: contain;width: 980px;height: 85px;padding-top: 35px;\">\n                    <a href=\"#storelist_5_0\">\n                      <div class=\"m_index_menu_3_padding\">\n                        海外\n                      </div>\n                    </a>\n                  </div>\n                  <div id=\"storelist_lv3_5_i\" class=\"m_lauclass\" style=\"position:relative;display:none;\">\n                  </div>\n                </div>\n              </div> <!-- /////////////////////////next///////////////////////// -->\n              <a href=\"#storelist_2_5\">\n                <div id=\"storelist_2_5\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"window.location.href='../storelist/dealers.php'\">\n                  <div class=\"m_index_menu_2_padding\">DEALER LIST</div>\n                </div>\n              </a> <!-- /////////////////////////next///////////////////////// -->\n              <a href=\"#storelist_2_6\">\n                <div id=\"storelist_2_6\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"openstorelistlv2(6,6);\">\n                  <div class=\"m_index_menu_2_padding\">ONLINE STORE</div>\n                </div>\n              </a> <!-- /////////////////////////next///////////////////////// -->\n              <div id=\"storelist_6\" style=\"position: relative;display: none;\">\n                <div id=\"storelist_6_0\" class=\"m_storelist_index_menu_3 m_index_menu_level_4\" onclick=\"window.location.href='../webstore/?brandid=Mg==&amp;categoryid=MjM=&amp;itemid=&amp;color=&amp;stock=MQ=='\" style=\"position:relative;\">\n                  <a href=\"#storelist_6_0\">\n                    <div class=\"m_index_menu_3_padding\">\n                      OFFICIAL WEB STORE\n                    </div>\n                  </a>\n                </div> <!-- /////////////////////////next///////////////////////// -->\n                <div id=\"storelist_6_1\" class=\"m_storelist_index_menu_3 m_index_menu_level_4\" onclick=\"window.location.href='http://zozo.jp/men-shop/bapeland/'\" style=\"position:relative;\">\n                  <a href=\"#storelist_6_1\">\n                    <div class=\"m_index_menu_3_padding\">\n                      ZOZOTOWN\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            <!--NEWS-->\n            <a href=\"#news_1\">\n              <div class=\"m_index_menu_1\" id=\"news_1\" onclick=\"m_menu_showhide('news', 2)\">\n                <div class=\"m_index_menu_1_padding\">NEWS</div>\n              </div>\n            </a>\n            <div id=\"news_2\" style=\"position:relative;  opacity:0; display:none;\">\n              <a href=\"../news/m_content.php?u=MTgwMA==&amp;m=MQ==\" id=\"news_slider_url_1\">\n                <table width=\"100%\">\n                  <tbody>\n                    <tr>\n                      <td width=\"80px\"></td>\n                      <td width=\"400px\"><img src=\"https://bape.com/lib/img/news/news_img/BAPECOM-INFO_BNL.jpg\" alt=\"\" id=\"news_slider_1\" width=\"100%\" height=\"240\" style=\"margin:20px auto;\"></td>\n                      <td valign=\"top\">\n                        <div style=\"margin:50px;\">BAPE.COM WEBストア出荷停止期間のお知らせ</div>\n                      </td>\n                      <td width=\"80px\"></td>\n                    </tr>\n                    <tr>\n                      <td colspan=\"4\" class=\"m_spacing_line\"></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </a>\n              <a href=\"../news/m_content.php?u=MTgwNA==&amp;m=MQ==\" id=\"news_slider_url_2\">\n                <table width=\"100%\">\n                  <tbody>\n                    <tr>\n                      <td width=\"80px\"></td>\n                      <td width=\"400px\"><img src=\"https://bape.com/lib/img/news/news_img/200210_NIFEBK_BNL.jpg\" alt=\"\" id=\"news_slider_2\" width=\"100%\" height=\"240\" style=\"margin:20px auto;\"></td>\n                      <td valign=\"top\">\n                        <div style=\"margin:50px;\">2020 SPRING/SUMMER NEW IN KIDS</div>\n                      </td>\n                      <td width=\"80px\"></td>\n                    </tr>\n                    <tr>\n                      <td colspan=\"4\" class=\"m_spacing_line\"></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </a>\n              <a href=\"../news/m_content.php?u=MTgwNQ==&amp;m=MQ==\" id=\"news_slider_url_3\">\n                <table width=\"100%\">\n                  <tbody>\n                    <tr>\n                      <td width=\"80px\"></td>\n                      <td width=\"400px\"><img src=\"https://bape.com/lib/img/news/news_img/200210_NIFEBM_BNL.jpg\" alt=\"\" id=\"news_slider_3\" width=\"100%\" height=\"240\" style=\"margin:20px auto;\"></td>\n                      <td valign=\"top\">\n                        <div style=\"margin:50px;\">2020 SPRING/SUMMER NEW IN MEN'S</div>\n                      </td>\n                      <td width=\"80px\"></td>\n                    </tr>\n                    <tr>\n                      <td colspan=\"4\" class=\"m_spacing_line\"></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </a>\n              <a href=\"../news/m_content.php?u=MTgxNg==&amp;m=MQ==\" id=\"news_slider_url_4\">\n                <table width=\"100%\">\n                  <tbody>\n                    <tr>\n                      <td width=\"80px\"></td>\n                      <td width=\"400px\"><img src=\"https://bape.com/lib/img/news/news_img/200212_RAHN_BNL.jpg\" alt=\"\" id=\"news_slider_4\" width=\"100%\" height=\"240\" style=\"margin:20px auto;\"></td>\n                      <td valign=\"top\">\n                        <div style=\"margin:50px;\">RHINESTONE APE HEAD NECKLACE</div>\n                      </td>\n                      <td width=\"80px\"></td>\n                    </tr>\n                    <tr>\n                      <td colspan=\"4\" class=\"m_spacing_line\"></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </a>\n              <a href=\"../news/m_content.php?u=MTgxOA==&amp;m=MQ==\" id=\"news_slider_url_5\">\n                <table width=\"100%\">\n                  <tbody>\n                    <tr>\n                      <td width=\"80px\"></td>\n                      <td width=\"400px\"><img src=\"https://bape.com/lib/img/news/news_img/200212_MCKCL_BNL.jpg\" alt=\"\" id=\"news_slider_5\" width=\"100%\" height=\"240\" style=\"margin:20px auto;\"></td>\n                      <td valign=\"top\">\n                        <div style=\"margin:50px;\">MULTI COLOR KNIT CARDIGAN</div>\n                      </td>\n                      <td width=\"80px\"></td>\n                    </tr>\n                    <tr>\n                      <td colspan=\"4\" class=\"m_spacing_line\"></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </a>\n              <div id=\"news_2_0\" class=\"m_index_menu_black m_index_menu_1_padding\" style=\"\" onclick=\"m_show_new_menu();\">もっと見る</div>\n\n              <!--<div style=\"margin:10px;\"></div>-->\n              <div id=\"news_2_1\" class=\"m_index_menu_gray m_index_menu_level\" style=\"display:block;background-image:none !important;background-color: #595757;\" onclick=\"window.location.href = '../news/';\">\n                <div class=\"m_index_menu_2_grey_padding\">PC SITE へ</div>\n              </div>\n            </div>\n          </div>\n\n          <!--LOOK BOOK-->\n          <div class=\"m_index_menu_1\" id=\"lookbook_1\" style=\"cursor:pointer;\">\n            <div class=\"m_index_menu_1_padding\">LOOKBOOK</div>\n          </div>\n          <div id=\"lookbook_2\" style=\"position:relative; height:100%; opacity:1; display:none;\">\n            <a href=\"#lookbook_2_2\">\n              <div id=\"lookbook_2_2\" class=\"m_index_menu_2 m_index_menu_level_2 custom\" onclick=\"m_menu_showhide('storelist', 4)\">\n                <div class=\"m_index_menu_2_padding\">A BATHING APE®</div>\n              </div>\n            </a>\n            <div id=\"lookbook_4\" style=\"position:relative; height:100%; opacity:1; display:none;\">\n              <div id=\"lookbook_4_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=MQ==&amp;t=MQ=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2020 SS MEN'S</div>\n              </div>\n              <div id=\"lookbook_4_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=MQ==&amp;t=Mg=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2020 SS LADIES'</div>\n              </div>\n              <div id=\"lookbook_4_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=MQ==&amp;t=Mw=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2019 AW MEN'S</div>\n              </div>\n              <div id=\"lookbook_4_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=MQ==&amp;t=NA=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2019 AW LADIES'</div>\n              </div>\n              <div id=\"lookbook_4_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=MQ==&amp;t=NQ=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2019 SS MEN'S</div>\n              </div>\n              <div id=\"lookbook_4_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=MQ==&amp;t=Ng=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2019 SS LADIES'</div>\n              </div>\n            </div>\n            <a href=\"#lookbook_2_3\">\n              <div id=\"lookbook_2_3\" class=\"m_index_menu_2 m_index_menu_level_2 custom\" onclick=\"m_menu_showhide('storelist', 4)\">\n                <div class=\"m_index_menu_2_padding\">BAPE KIDS®</div>\n              </div>\n            </a>\n            <div id=\"lookbook_5\" style=\"position:relative; height:100%; opacity:1; display:none;\">\n              <div id=\"lookbook_5_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=Mg==&amp;t=MQ=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2020 SS</div>\n              </div>\n              <div id=\"lookbook_5_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=Mg==&amp;t=Mg=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2019 AW</div>\n              </div>\n              <div id=\"lookbook_5_1\" class=\"m_index_menu_4 m_index_menu_level_10\" onclick=\"window.location.href = '../lookbook/index.php?s=Mg==&amp;t=Mw=='\" style=\"position:relative;\">\n                <div class=\"m_index_menu_3_padding\">2019 SS</div>\n              </div>\n            </div>\n          </div>\n          <script>\n            $(document).ready(function() {\n              var type = 0;\n              var dtype = 0;\n              var dtype2 = 0;\n              $(\"#lookbook_1\").click(function() {\n                if (type == 0) {\n                  $('#lookbook_2').css(\"display\", \"block\");\n                  $('#lookbook_1').css(\"background-image\", \"url(../lib/m_img/index/arrow_up_lv1.png)\");\n                  $('#lookbook_2').css(\"height\", \"100%\");\n                  $('#lookbook_2').css(\"opacity\", \"1\");\n                  type = 1;\n                } else {\n                  $('#lookbook_2').css(\"display\", \"none\");\n                  $('#lookbook_1').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv1.png)\");\n                  $('#lookbook_2_3').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                  $('#lookbook_2_2').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                  type = 0;\n                  $('#lookbook_5').css(\"display\", \"none\");\n                  dtype2 = 0;\n                  $('#lookbook_4').css(\"display\", \"none\");\n                  dtype = 0;\n                }\n              });\n              $(\"#lookbook_2_2\").click(function() {\n                if (dtype == 0) {\n                  $('#lookbook_4').css(\"display\", \"block\");\n                  $('#lookbook_2_2').css(\"background-image\", \"url(../lib/m_img/index/arrow_up_lv2.png)\");\n                  $('#lookbook_2_3').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                  dtype = 1;\n                  $('#lookbook_5').css(\"display\", \"none\");\n                  dtype2 = 0;\n                } else {\n                  $('#lookbook_4').css(\"display\", \"none\");\n                  $('#lookbook_2_2').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                  dtype = 0;\n                }\n              });\n              $(\"#lookbook_2_3\").click(function() {\n                if (dtype2 == 0) {\n                  $('#lookbook_5').css(\"display\", \"block\");\n                  $('#lookbook_2_3').css(\"background-image\", \"url(../lib/m_img/index/arrow_up_lv2.png)\");\n                  $('#lookbook_2_2').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                  dtype2 = 1;\n                  $('#lookbook_4').css(\"display\", \"none\");\n                  dtype = 0;\n                } else {\n                  $('#lookbook_5').css(\"display\", \"none\");\n                  $('#lookbook_2_3').css(\"background-image\", \"url(../lib/m_img/index/arrow_down_lv2.png)\");\n                  dtype2 = 0;\n                }\n              });\n            });\n          </script>\n\n          <!--EYEWEAR-->\n          <div class=\"m_index_menu_1\" id=\"eyewear_1\" onclick=\"window.location.href = '../eyewear/';\" style=\"cursor:pointer;\">\n            <div class=\"m_index_menu_1_padding\">EYEWEAR</div>\n          </div>\n\n          <!--MANIA-->\n          <div class=\"m_index_menu_1\" id=\"mania_1\" onclick=\"window.open('../mania/','new_window');\" style=\"cursor:pointer;\">\n            <div class=\"m_index_menu_1_padding\">BAPE® MANIA</div>\n          </div>\n\n          <!--CARD-->\n\n          <!--\n            <div class=\"m_index_menu_1\" id=\"registration_1\" onClick=\"m_menu_showhide('registration', 2)\">\n              <div class=\"m_index_menu_1_padding\">BAPE® CARD</div>\n            </div>\n            <div id=\"registration_2\" style=\"position:relative;  opacity:0; display:none;\">\n              <div id=\"registration_2_1\" class=\"m_index_menu_black m_index_menu_level_2\" onclick=\"window.open('../registration/','new_window');\">\n                <div class=\"m_index_menu_2_padding\">PC SITE へ</div>\n              </div>\n            </div>\n            -->\n          <div class=\"m_index_menu_1\" id=\"registration_1\" onclick=\"window.location.href = '../registration/';\" style=\"cursor:pointer;\">\n            <div class=\"m_index_menu_1_padding\">BAPE® CARD</div>\n          </div>\n\n          <!--MRBATHINGAPE-->\n          <div class=\"m_index_menu_1\" id=\"mrbathingape_1\" onclick=\"m_menu_showhide('mrbathingape', 2)\">\n            <div class=\"m_index_menu_1_padding\">MR. BATHING APE®</div>\n          </div>\n          <div id=\"mrbathingape_2\" style=\"position:relative;  opacity:0; display:none;\">\n            <div id=\"mrbathingape_2_1\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"window.location.href = '../mrbathingape/';\">\n              <div class=\"m_index_menu_2_grey_padding\">LOOKBOOK</div>\n            </div>\n            <div id=\"mrbathingape_2_2\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"window.location.href = '../mrbathingape/dealers.php';\">\n              <div class=\"m_index_menu_2_grey_padding\">DEALERS</div>\n            </div>\n          </div>\n\n          <!--MRBATHINGAPE-->\n          <div class=\"m_index_menu_1\" id=\"babymilostore_1\" onclick=\"m_menu_showhide('babymilostore', 2)\">\n            <div class=\"m_index_menu_1_padding\">BABY MILO® STORE</div>\n          </div>\n          <div id=\"babymilostore_2\" style=\"position:relative;  opacity:0; display:none;\">\n            <div id=\"babymilostore_2_1\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"window.location.href = '../babymilostore/';\">\n              <div class=\"m_index_menu_2_grey_padding\">LOOKBOOK</div>\n            </div>\n            <div id=\"babymilostore_2_2\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"window.location.href = '../babymilostore/dealers.php';\">\n              <div class=\"m_index_menu_2_grey_padding\">DEALERS</div>\n            </div>\n            <div id=\"babymilostore_2_3\" class=\"m_index_menu_2 m_index_menu_level_2\" onclick=\"window.open('https://www.instagram.com/babymilostore_japan/');\">\n              <div class=\"m_index_menu_2_grey_padding\">INSTAGRAM</div>\n            </div>\n          </div>\n\n          <!--Favorite-->\n          <div class=\"m_index_menu_1\" id=\"mrbathingape_1\" onclick=\"window.location = ('../favourite/');\">\n            <div class=\"m_index_menu_1_padding\">お気に入り</div>\n          </div>\n        </div>\n        <script type=\"text/javascript\">\n          function submit_form() {\n            document.getElementById(\"form_submit\").submit();\n          }\n          function m_submit_form() {\n            document.getElementById(\"m_form_submit\").submit();\n          }\n          function m_submit_contact_form() {\n            document.getElementById(\"m_contact_form\").submit();\n          }\n          function m_return_message() {\n            document.getElementById(\"subscribe_form\").submit();\n          }\n          function ipad_submit_form() {\n            document.getElementById(\"ipad_form_submit\").submit();\n          }\n          setTimeout(function() {\n            //init_menu(0);\n            //help_btn(0);\n          }, 500);\n          function proceed() {\n            if (validateEmail(document.getElementById('email').value)) {\n              //alert('Submit success.');\n              submit_form();\n            } else {\n              alert('正しいメールアドレスを入力してください。');\n            }\n          }\n          function m_newsletter_proceed() {\n            if (validateEmail(document.getElementById('news_email').value)) {\n              //alert('Submit success.');\n              //m_submit_form();\n              document.getElementById(\"m_newsletter_submit\").submit();\n            } else {\n              alert('正しいメールアドレスを入力してください。');\n            }\n          }\n          function t_proceed() {\n            if (validateEmail(document.getElementById('email').value)) {\n              //alert('Submit success.');\n              ipad_submit_form();\n            } else {\n              alert('正しいメールアドレスを入力してください。');\n            }\n          }\n          function m_footer_url(url) {\n            document.location.href = url;\n          }\n        </script>\n        <div class=\"mobile_footer_wrapper\">\n          <div class=\"mobile_footer\">\n            <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" style=\"padding-top:35px;padding-bottom:35px;text-align:center;background-color:#f4f4f4;\">\n              <tbody>\n                <tr>\n                  <td height=\"5px\"></td>\n                </tr>\n                <tr>\n                  <td width=\"36%\" align=\"right\"><a href=\"http://instagram.com/bape_japan\" target=\"_blank\"><img src=\"https://bape.com/lib/m_img/template/m_ig_icon.png\" width=\"85\" height=\"85\"></a></td>\n                  <td width=\"14%\" align=\"center\"><a href=\"https://www.facebook.com/BAPE.OFFICIAL\" target=\"_blank\"><img src=\"https://bape.com/lib/m_img/template//m_fb_icon.png\" width=\"85\" height=\"85\"></a></td>\n                  <td width=\"36%\" align=\"left\"><a href=\"https://twitter.com/BAPEOFFICIAL\" target=\"_blank\"><img src=\"https://bape.com/lib/m_img/template/m_tw_icon.png\" width=\"85\" height=\"85\"></a></td>\n                </tr>\n                <tr>\n                  <td height=\"5px\"></td>\n                </tr>\n              </tbody>\n            </table>\n            <div id=\"mobile_footer_bar\"></div>\n            <div id=\"mobile_letter\">\n              <form id=\"m_newsletter_submit\" name=\"m_newsletter_submit\" action=\"\" method=\"post\">\n                <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\">\n                  <tbody>\n                    <tr>\n                      <td align=\"left\" style=\"padding-top: 30px;padding-bottom: 20px;\">NEWSLETTER</td>\n                    </tr>\n                    <tr valign=\"middle\">\n                      <td align=\"left\"><input type=\"text\" name=\"news_email\" id=\"news_email\" placeholder=\"ENTER EMAIL\"></td>\n                      <td align=\"right\"><img src=\"https://bape.com/lib/m_img/template/m_send.png\" height=\"80\" width=\"240\" onclick=\"javascript:m_newsletter_proceed();\"></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </form>\n              <br>\n              <br>\n            </div>\n            <div id=\"mobile_footer_info_bg\">\n              <div id=\"mobile_footer_info\">\n                <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\" style=\"line-height: 1em;\">\n                  <tbody>\n                    <tr>\n                      <td height=\"60\"><a href=\"../company_profile/\" style=\"color:black;\">PROFILE</a></td>\n                      <td width=\"36\">&nbsp;|&nbsp; </td>\n                      <td align=\"center\"><a href=\"../contact/\" style=\"color:black;\">CONTACT</a></td>\n                      <td width=\"36\">&nbsp;|&nbsp; </td>\n                      <td align=\"center\"><a href=\"../help/\" style=\"color:black;\">POLICY</a></td>\n                      <td width=\"36\">&nbsp;|&nbsp; </td>\n                      <td align=\"center\"><a href=\"../faq/\" style=\"color:black;\">FAQ</a></td>\n                      <td width=\"36\">&nbsp;|&nbsp; </td>\n                      <td align=\"center\"><a href=\"../sitemap/\" style=\"color:black;\">SITE MAP</a></td>\n                    </tr>\n                    <tr>\n                      <td align=\"left\"><a href=\"http://www.bape.com/recruit\" style=\"color:black;\">RECRUIT</a></td>\n                    </tr>\n                    <tr>\n                    </tr>\n                  </tbody>\n                </table>\n                <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                  <tbody>\n                    <tr>\n                      <td></td>\n                    </tr>\n                    <tr>\n                      <td><br></td>\n                    </tr>\n                  </tbody>\n                </table>\n                <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n                  <tbody>\n                    <tr align=\"top\">\n                      <td align=\"left\" height=\"70\">©NOWHERE Co., Ltd.</td>\n                      <td align=\"right\">\n                        <div onclick=\"scroll(0,0);\">PAGE TOP <img src=\"https://bape.com/lib/m_img/template/m_arrow_up.png\"></div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!--$_SERVER['HTTP_USER_AGENT'] = 'windows,chrome,firefox';\n             onclick=\"window.open('../index/index3.php','new_window'); -->\n      </div>\n\n      <!--end of mobile-->\n      <script>\n        var page_url = location.search.split('p=')[1];\n        if (page_url == 1) {\n          m_menu_showhide('webstore', 2);\n        }\n        var store_url = location.search.split('st=')[1];\n        if (store_url == 1) {\n          m_menu_showhide('storelist', 2);\n          setTimeout(function() {\n            m_menu_showhide('storelist', 4);\n          }, 600);\n        } else if (store_url == 2) {\n          m_menu_showhide('storelist', 2);\n          setTimeout(function() {\n            m_menu_showhide('storelist', 3);\n          }, 600);\n        } else if (store_url == 3) {\n          m_menu_showhide('storelist', 2);\n          setTimeout(function() {\n            m_menu_showhide('storelist', 5);\n          }, 600);\n        }\n        var news_url = location.search.split('news=')[1];\n        if (news_url == 1) {\n          m_menu_showhide('news', 2);\n        }\n        var brand_url = location.search.split('mi=')[1];\n        if (brand_url >= 10) {\n          m_menu_showhide('webstore', 2);\n          setTimeout(function() {\n            m_menu_showhide('webstore', brand_url);\n            document.getElementById(\"webstore_2_2\").style.backgroundImage = \"url('https://bape.com/lib/m_img/index/arrow_down_lv2.png')\";\n            if (brand_url == 10) {\n              document.getElementById(\"webstore_2_2\").style.backgroundImage = \"url('https://bape.com/lib/m_img/index/arrow_up_lv2.png')\";\n            } else if (brand_url == 11) {\n              document.getElementById(\"webstore_2_3\").style.backgroundImage = \"url('https://bape.com/lib/m_img/index/arrow_up_lv2.png')\";\n            } else if (brand_url == 12) {\n              document.getElementById(\"webstore_2_1\").style.backgroundImage = \"url('https://bape.com/lib/m_img/index/arrow_up_lv2.png')\";\n            } else if (brand_url == 13) {\n              document.getElementById(\"webstore_2_6\").style.backgroundImage = \"url('https://bape.com/lib/m_img/index/arrow_up_lv2.png')\";\n            } else if (brand_url == 14) {\n              document.getElementById(\"webstore_2_7\").style.backgroundImage = \"url('https://bape.com/lib/m_img/index/arrow_up_lv2.png')\";\n            } else if (brand_url == 15) {\n              document.getElementById(\"webstore_2_8\").style.backgroundImage = \"url('https://bape.com/lib/m_img/index/arrow_up_lv2.png')\";\n            } else if (brand_url == 16) {\n              document.getElementById(\"webstore_2_4\").style.backgroundImage = \"url('https://bape.com/lib/m_img/index/arrow_up_lv2.png')\";\n            }\n          }, 600);\n        }\n      </script>\n  </body>\n</html>","reason":"pre-failure"}}
{"tag":"interaction_result","result":{"type":"screenshot","screenshot":"iVBORw0KGgoAAAANSUhEUgAAAyAAAAMCCAYAAACRFKJVAAAAAXNSR0IArs4c6QAAIABJREFUeJzs3WdzXFeeJvjn2jRIB5fwhqD3RiIlllgqSVWlqunuiZno6TfTs/N2P4e+y0Zs9ERv7EZX9UxrqrrkKJVE0YAOIDxhEyYBpHfXnX2RhgBhCMcLknh+1YruQmbee/Jmpvo89/zPOdIXX3whQERERERE5AL5sBtARERERERHBwMIERERERG5hgGEiIiIiIhcwwBCRERERESuYQAhIiIiIiLXMIAQEREREZFrGECIiIiIiMg1DCBEREREROQaBhAiIiIiInINAwgREREREbmGAYSIiIiIiFzDAEJERERERK5hACEiIiIiItcwgBARERERkWsYQIiIiIiIyDUMIERERERE5BoGECIiIiIicg0DCBERERERuYYBhIiIiIiIXMMAQkRERERErmEAISIiIiIi1zCAEBERERGRaxhAiIiIiIjINQwgRERERETkGgYQIiIiIiJyDQMIERERERG5hgGEiIiIiIhcwwBCRERERESuYQAhIiIiIiLXMIAQEREREZFrGECIiIiIiMg1DCBEREREROQaBhAiIiIiInINAwgREREREbmGAYSIiIiIiFzDAEJERERERK5hACEiIiIiItcwgBARERERkWsYQIiIiIiIyDUMIERERERE5BoGECIiIiIicg0DCBERERERuYYBhIiIiIiIXMMAQkRERERErmEAISIiIiIi1zCAEBERERGRaxhAiIiIiIjINQwgRERERETkGgYQIiIiIiJyDQMIERERERG5hgGEiIiIiIhcwwBCRERERESuYQAhIiIiIiLXMIAQEREREZFrGECIiIiIiMg1DCBEREREROQaBhAiIiIiInINAwgREREREbmGAYSIiIiIiFzDAEJERERERK5hACEiIiIiItcwgBARERERkWsYQIiIiIiIyDUMIERERERE5BoGECIiIiIicg0DCBERERERuYYBhIiIiIiIXMMAQkRERERErmEAISIiIiIi1zCAEBERERGRaxhAiIiIiIjINQwgRERERETkGgYQIiIiIiJyDQMIERERERG5hgGEiIiIiIhcwwBCRERERESuYQAhIiIiIiLXMIAQEREREZFrGECIiIiIiMg1DCBEREREROQaBhAiIiIiInINAwgREREREbmG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LFbrdG9GkiTouo5Tp07h8uXLe5p8vtkx/X4/zpw5AwB49uwZMpkMFhcXa6tNSZKExsZGnD17FmfOnIHf7z/QAAKg9r6re59Ur0H172t3ZN8rBhAiIiIiOtIkSYLP50NLSwuWl5exsLCw7XM1TcPZs2fxwQcfoL6+/kDaIISAqqoIh8O4ePEimpqaMDc3h8XFRRiGAV3X0dLSgo6ODrS1tcHv90NV1QPfAd0NDCBEREREdOQUCgUsLy8jk8kgkUhgaWkJ8XgcqVQKpmluOvqhaRrC4TAuXLiACxcuIBwO77v0SggBy7JqGyFWR0L6+vrQ1dVV26FdUZTabuvVXcqrr7Msa1/7mLiNAYSIiIiIjhxJkpDJZDAxMYF4PI5kMolisQjLsmrL4q5dHtfv9yMajeLUqVPo7e1FIBDYd/mTLMswTRMzMzP48ssvN0xkdxxnXUlUdRnctSzLwszMDEzTPNDJ6K8TAwgRERERHTlerxenT59GS0sLZmdnMTMzg4WFhdok9OrKVJFIBG1tbeju7kZrayuCweCBzbtob29HKpVCqVTC1NTUno4rhIBpmvB4PGhvb9/Ra3Rdf+WeJYqi1FYIA17sAaKq6rqgVB2V2Q0GECIiIiI6khRFQWNjIxobG3H58mXXz9/b2wsAiMVi+1pVSpZltLe31473KtWgYhjGtsfUdR0ejweSJEEIgUgkgtbWVuTz+drzdF3fcfCpkr744ou3p2CMiIiIiIjeam9HoRgREREREb0TGECIiIiIiMg1DCBEREREROQaBhAiIiIiInINAwgREREREbmGAYSIiIiIiFzDAEJERERERK5hACEiIiIiItcwgBARERERkWsYQIiIiIiIyDUMIERERERE5BoGECIiIiIicg0DCBERERERuYYBhIiIiIiIXMMAQkRERERErmEAISIiIiIi1zCAEBERERGRaxhAiIiIiIjINQwgRERERETkGgYQIiIiIiJyDQMIERERERG5hgGEiIiIiIhcwwBCRERERESuYQAhIiIiIiLXMIAQEREREZFrGECIiIiIiMg1DCBEREREROQaBhAiIiIiInINAwgREREREbmGAYSIiIiIiFzDAEJERERERK5RD7sBROQuy7JgmiZs24bX64Wqrv/XgG3bKJZKsEwTqqrC6/VCUZQNxygUClBVFR6PB7K8t3sZQghYloVSqQRN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WUJTU9OG+TvVa1A9N1DuiFY/w72UoDmOU95oT4jyRHfDQDKZQrFYvgYNDQ2VBQSUDe/LcZxau8ub7pVHzartqV6r6uaK1dcMDAzgu+9u47/9t3+Ez+dDNptFNpuFrCiIhMPwen1Q1Y3nA14sgGBZFlLpNPK5XC2g+f3+2n4XW11jx3GQyWSwuLiETCZd3u+lUjIVDoXQ0tIKv9+36fvdLdu2USyVACHgrawOtnaJ32KxCE3TNnw/X36/tm3XRh9LhgGft/wb3OpzqT5/s00tXz7uVr/Vdde5smKXx+OpnbdaQrnZCFEul4NhGLVd4Ino3ccAQkSvRbXzvd0d1d0er/q/d3PMajsAHFhb9uJ1tGOn1+R1XoO1bQB2tgfGbtpTDSC3b3+P//7f/4/aHKK9vJ+9Xodq59opz5Bf9/qdbtZ3GKqdfre/93u5zi9vKEpE7zaWYBHRa7G2fOQgj7fbYx50O/aq2hE7yI7WTq/J67wGe/lcdn0tJGndymR7vZb7+Q7JslxuwpqO9W6P47a97OlxEPYSeN7k60hEB48BhIhem9fd4T3MduzVYV2T130NXufn4vV4EI1uXLXMze+CJJX3CcEb9F0iInpbMYAQEdEbS5ZlnDx5EidPnjzsphAR0QHhPiBEREREROQaBhAiIiIiInINAwgREREREbmGAYSIiIiIiFzDAEJERERERK5hACEiIiIiItcwgBARERERkWsYQIiIiIiIyDUMIERERERE5BoGECIiIiIicg0DCBERERERuYYBhIiIiIiIXMMAQkRERERErmEAISIiIiIi1zCAEBERERGRaxhAiIiIiIjINQwgRERERETkGgYQIiIiIiJyDQMIERERERG5hgGEiIiIiIhcwwBCRERERESuYQAhIiIiIiLXMIAQEREREZFrGECIiIiIiMg1DCBEREREROQaBhAiIiIiInINAwgREREREbmGAYSIiIiIiFzDAEJERERERK5hACEiIiIiItcwgBARERERkWvUw24AER0Vovo/sIwS8tkULLME3euHPxCGoqoApMNuJO2QcBzk0gmUCjkoqopApBGq5jnsZtFuCIFCLo18Ng1ZkuEPReDx1R12q4joCGAAIaIDI4QAIODYDsxSHsV8FkaxANMowigVUSrkUMxlUMimkM+mYJsmNI8XocYomjuOobn9GLz+ACRJAiSGkcNm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/3bMrfkIggDf9/n7v//7B1rt6kGNj4/zj//4j3ieh+u68/YMAfn7JtYHKUIXQqwgtZiZVQ9+dHljXnbzFx+IaO0sSfiA6DlsbW1dkmOJ23Nj8dss8KCIJ5euSPxRXDTgdlOwXnzxxRUNHxCtjvXiiy/yxhtvYIxpBA8pRBfriRShCyGEEEIwf/+PMAx59tln73mdV155hWKxuKjjF4tFXnnllXte7tlnn21MKZVCdLEeSQARQgghxIa1cOnd+gjIwMAA3d3d97z+sWPH+P73v0+pVLrr5UqlEt///vc5duzYPY/Z3d3NwMDAvJWw5rZTiEedBBAhhBBCCOaHkMUuftDb28uJEyf453/+Z8rl8m0vUy6X+ed//mdOnDhBb2/voo67e/duGQER65YEECGEEEJsaHM7+PURkK1bty7quq7rMjAwwJEjR3jllVeoVCrzfl6pVHjllVc4cuQIAwMDuO7iym+3bt3aGAG5XTuFeJRJABFCCCHEhrdwtGEx06/qYrEYe/bsYefOnbz66quNEFKpVHj11VfZuXMne/bsIRaLLfqY9duXURCxHkkAEUIIIYSYw1pL9j5X8orH4xw4cICuri5ee+01CoUCr732Gl1dXRw4cIB4/P72VslmsxI6xLolAUQIIYQQoqbe6fc8776vm0wmOXz4MI7j8D/+x//AcRwOHz78QJui1m9fQohYj2QfECEewOHDh9m9ezd9fX1kMpnGOu1CCCEeHfV6jyAIqFarFAoFpqamGB8fJwxDHMe572PWp1nNzMzM+//98n0fkP2NxPokAUSI+3D48GFOnDhBc3PzajdFCCHEEql38pVSjV3HK5UKqdRnN968myAIOH36NOVymW9/+9u8//77nD59mscff3zRxed1+XxewodYtySACLFIf/iHf8iTTz652s0QQgixDJRSjQDiOA4zMzP3FUDCMOTcuXNcunSJL33pS7S0tJBOp/n5z39OIpFg79699zWiMjw8PK9dEkbEeiLzRoRYBAkfQgixPs0NHvXw4bou+Xx+0ccwxnD58mVOnjzJSy+9REtLCwAtLS289NJLnDx5ksuXL2OMWfQxr169itZ6XvCQECLWCwkgQtzD4cOHJXwIIcQ6Vg8h9fDhed6iA4gxhhs3bvDrX/+al19+mdbW1nk/b21t5eWXX+bXv/41N27cWHQIOXfunIx+iHVL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z8duSJMdLXB4z15m5nJcf+NHOOnc04npGKMzcygnQbqujs5+Qe/qYe676y7GZjMoX2FrU9WaBEFIYLLXvbCHzgUtpNM1yFicRWvWkJua5ZtjczR0tfPO6z/IqlNOxksYJuZG6GxsprF5CbW1CfKlHL985pcsbl/OOavOI+VI5qbLuFaeptom0nYDOZMjpwR7fzBG1I/QvXAFzW3d2A5kxsbA8ojXtbFk9an0L9vB5ieewRRLGOWDlChLksl7nLP0ZN513Qfp6+1BGE25XEJGbFYuWUl3Ry+Dg0eYmpni2suvZtMFF9DY2IhbdtG+Jp1Os6y/n7pkiu/d939Z3tnLZeddhJQxMrksZYokUjXUpRpwtEK4GUrFDiLxWqxImppGm3RdK+MjI+x/YQem4i3xG8+ryvf5a90V95egxbMxlOaKuEUXf2qOaCpKQ3sTnQtaIGlTMoqip8iXvcDU8lXM54439fX1/PCHP+T666/nH/7hH6qah0984hNcc8011fu99Gr/5s2bOXDgAJdddtkxY5144on09vZy9913H6Ol+HWkUimeeuoprrvuOtrb24EgkPngBz/IZz/72Vc89jw33njj6wqvTz/99Orv6XSaa6+9lg984ANcdtllvPOd73yFGeBVV13F1Vdfzc033/y6xz0+Pl493nmuvPJKvv71r/OXf/mXdHd3s2bNGs466yweeOABbrjhBj71qU8B0NzczIMPPlhtJ3z33Xdz4403csIJJ1THeutb38o3vvGNVy1du+qqq/ja1772iqxKSEjIny5/eJ8uISF/IhgDWhvsymLFuIayW6CUzROJZ7FKLm1dDZx60jK6uttRMYErfWJCkIrYRKI2IiKY8Yv867PPM16Ypex7CFsyks8wPDPDGb0riEibsu+h0UHLVajU9ltYMko6WkvCTuNFNfUtzSxbt4REQw1OXT1qziKRSrFszRrWnn46qcZGJvYf5ntf///o7O5i46bz0EZT09jAwOFhvHKposeulAiJoMmuNCArS+MXd+8mmUqzct16ErW1nHDmGfT+5D9YufZEli5einRc9g4/z789+iBXnn0pq/vOpL2ljeXLV7D5+aeQEUE8FiMRsfFrbQ6PDjCZGWdt7ynEo3EW9/WzsGshzXaKru5ObEfguVn+9f/eSU1NB+defDGtXQs4+w1n8aP772GmmEEKMEahjSDqSFauWsGyVUtxpMvO7c/wy19s5swzN7Jk1VpWLVnD+Rs2cnhskA2nnUlPexfTcxl++IMfYpTmysuvoL2pjdNPPpXnd+wgGUlSF6/FcqLYts0vt+4kkkyzcmmKWDyBHavFLbvs3TNIW+ci6hubSdXVsWTFcmzbxpfzHa7mPVN+4xlW/U1UXnNhwJIWumzIlxS5XJa5bIHUZIKlq/s55aRV1DXWYEcEvnKJ2n+YV6vPPvtsXnjhBcbHx8lms7S3t5NIJI5Z+K9YsQKtNUIIGhsbq7+/FCEE+/btO2bbq93v5SxatIhHH32UQqHA2NgYPT09SCmr+y1cuPAV4ziOw44dO151vO7u7qAN96sghODHP/7xq9521VVX8fa3vz1oW/1rjvvqq68+phXuy8dXSh2z71vf+lYuvfRSRkZG0FrT3t5+TGCRTCa57bbbuPXWWxkcHKSzs5NoNHrMGLt3767+feaZZx5zfO9+97tf0wQxJCTkT4MwAAkJOU5UGiehTSAc1pigJa2BcqHIkUOHmZ0aozQ7R/QNp7PurDWIlEHi4fgKgSDjugyMjjBQnERLgy0FxsBEqcScmmB29zaaYkmmy0U8cVR6jgBd6ckrASkEnlGUpc+a09bgxKJIHBACJ+KQTteQStZgtKHsFskXp3niF3sYOTyIUDAydAhZVkgdOG0rIzEicPkwlUWHNDC4bz/fveNOauvq+fTy1UTSEera62hqS5OZHmRo3zYS+VqefPoxBg8epLCugFaKmBUlnUhhRQTCMSA0RirGs0f44S/+jXKhRG/nIpplM03xJItaOmiM1lKfbkKbCNmc4j9/voXOjixrzzmXpvoGenoW0tLcTGbkSFVRYQuL+pp6li5bihUBVXb52WOP8PAPfkRhZobujhbiiRinr1nGbG4BLQ1NWNJiYnKSHz70Y7KZDJs2nkc8FqOtpY2F3QuxXIWWNgLI5Ob49l13UNfYROv726jrWoj2fcaPHOHeO+/iLW+/mpq6GoQ0OE7QHUxKga+p+Mfr17CU/HUEgYhEBCJ5HbjMKwAtKOTKFEtlZie3kJuY5YI3bWDhsnYSyaP6kj9EpJS0tbVVRdmvxksXxK+1OH+1oOQ3QQhBMpmkt7f3Nxr39cb+7972esf9Xx1fCPGKjMnLb3cc5xWi89ca87c9zyEhIX+chAFISMjxwhy9Rq3gJV4YgReIMZDNafbuHSdX+Bmx2iTL1vchbbCFBGOTcV12j0ziaR1cgUUitcASkpKvGJqdZkJNU5IaI4LuUSCC4EAYDAqJQgjFXHGOPUf2o+0MRgqkCYKisl9icmKUcjZHOllHX98iPnHzpzmw9wBPPP4EP3v4EV7cvg1VKGEJjcRCYVWCHBF0jBICjGZ6bIyh/Qdw29rx8yXiiTR2NEI0rjl8aAfDg33Uq26a0x289//ZyKru5USiMXAVtraDrrPGYGNhGUE2P8uh8QE8zyXvZWmOtBCTMdrqWmiKNeKIOELbxOM13PC+D5NOtNJY14QwFrFonEQijZQORnmBj4h0qKtvomNBG5YxKN9icniOiaERnnnipyxeWMOKE1bTnoI1faupq6nFCCi4JUamxnGLRUp+GYwhGo2QSqUpzeXQUiIsKLolpman0RYUi1kEPpb0cYtzTB8ZpJydQZiKrXtldujKPFECbHNUfP5avHRZZzh2Xs3fIxiljKnMCOOD5wuef2YfXskj+rbzWLqiHfkHmgEJCQkJCfnfzav3GQwJCfmdM+92Pi/R1tWvSqGNACFsyq5hYjzLDx74KRNHMihlYYyFrzRz5RJTxTxRXyK0rGZQHG1wlMFSBmUMnggyE6LarNWg0BihA32GUfj4TJXn2PLiDsquQmoBFuTdLNuf28K9376T0kwGlKKpoZOTTt7AdTd8lL/50v/hgsveionZaAlGK6JGII2oZEOotIk1oDXGVwhtQGmkkEgdo729i0svv5SNm87jzLPO5ZKL3saizuUI46DwsbWNpWyEkUhjYSsHy48gtEQbjTYK34AnbJSMIK0YtrSxhcCWEI8KTl23gt6FjSi3wMzUODOzM7hK4RrwRaD/MJbEjjok4nFsLZC+g3Ad6tMNrFy+iFTcZWZ8L/mpwySlwLFsEAY93+2rEjxqFAKDZUmQIughUDF9tGyLltYWampTCKHA+AjjYRsPYXyEoNJat2IqaMRLhPy/iS/Ha11ZDsYQla/AvvGoOaU0DtqPsm/fGP/xyBZGJor4OrxGFRISEhLyP0/46RIScpwQ5picR7CNo/X6weVrDwG4+TLTQ4otj2/hgrduwIlJysql4M2R9+eIKAvfMig533VqfnEZBCTyJQaEEAQ4Qgb1X1IHJWAgKQnDrHHRRiK0wDgGJ2WRyUzxL9/+Njtf3MG6s0/ljHXn0LGwj1RjDV2xPq664d2UZQarXGJ2JMPMaJbZuVmEsCoeExy9HC9BC42RwfOOKIu+RSvpX7WImvY+CsYwMLyf+x56gAvXn8WJJ5yCI+pQ0uBbGiV1YF6obdBWpUOYRAuJawu8qn2FRkgfTYGSP8PuXU+y9Zkd7No/ivI0+ZkZDo4M0dy5gGQ8AVIwVyggohae9oM2Zbaiq7+VBV2XsHx5F339nUjbplBSCMdGVIz6tNDBc0KD0UGeyQTeEEZ7gckfDtKAIx3q0nVErEgwBwxYlkA6NsaSKCRaWBhhB8aRJghKhfCrvoOvO7eqfbOO5ktemg2ZV5Qci0Zg45U0e3cfYtvWvZy/6ZTf7AFDQkJCQkL+C4QBSEjIccOCSk2/eFkAIir1+h4+vgBhLPI5w3NP72PFSWtJL2rBx6VoyhSkh5QRfOkH4whTWRCDrSWOL4gYiREGaeaFrvPCcInUQfbEsiI4iRRWOoGQFiCwojYr1q5AX3oRMa8WWZti7/69bN/+LBe88SLO2bCB2qTFssUdXHzJJjo62vFUlPGpIpv/43E2P/6zqvYAoKGxgfauTpI1NYiYjRI+lhrHdiROug0vVku2PMmOwafZO/QUG9auCNzfpabslCk7LmXHw7MUWA6RRJR0fQ2lYpGYYxFXHkaVcJRP3IlgjEUJm8PZIt/+4U9QKsp5G86nMV3H4UND7H9xkHe87e0sXboUYUl+/sTP2bX7BabmCrQKHxXPUtOjmRj1iLV00NC9HqSNNzNKXgrqtEYYiDgRamrSlKXEcSwsBF65TDYzi609LO1hCQtpDMbXTE3M4Jb8IHgSEiEjpOsawYniCwslBAaLih99MFP+i6bkomJISPV78LoH5VcSjzSCMhK3cv9KgOMbitMldv5qKyesfm1PiZCQkJCQkN+WMAAJCTlOiOo16ECLUdkIgDK66uFgGRBGo1SZkSNH2LltB72tZyETFmgwxsezFLaWCKygTEnY1VIr39IgFFoYhLYDLYXQKCnIS03OhlphkYzXc/biN7C8cRlJOwnCYAkoOnHqTl7BG87cRJwaJg/PcuDAz6mrT+MKC2lJohGLBQ1NLFy8ikh9G/1zRWrjPtKepK4xikQANu09y7n8muvwPZdkpAZbWeR9HxFTRKWPrQxRE6V/wUrW92fpXnAqSQSeLOD4Fg3FNOmijcCjbAua0k1ctOwi8uUCyVgjStpYJUWnMKRNDlQOYTdjmTpyecnqVf2sP/kUahrqKNqKcp1D+4nLWXvq2Uhps2v6CIf2bOGF8YMs1WtApGhuXcXg0FacRAvRZApMGeXOojyPfGoBDg5NqXo2rT8XVSzREE0iMYxMj7Hn8ACLmzoRWqKs4HUqasH0bIFCvoTUgceLY2BhVwOpuIVBozBoKdBSoo2oluuJY/5lm1f5qpTziUobXnN0WlWzaxgECimyQSaJOAYPpI8yPgaJdm0OHZpl9679v4OZHxISEhLyp04YgISEHCcE7kuWjZW8h7CCbUbPS5ADNXolR1Iu+ezfN8DcqWupiSaCYEMLPFnpcARBa61KyZXg6L5a+JWOVBJhNEIbMjNTuOUCOupSE4+xvHcxpa4OFCUwHgU3w1Rugn1j+9hQ8wYaG2rp7FzA6pVN2HYa6di4pQxz00fAzSG1QiJIRlIs7Gxn43mnsaC9FmmXcY2mti3F6RecFgjU4wbXFCl7syRrDLbII70c6YjF6sXLaKvvJmXXYTT4ShOx4tTHGomJWHBagHS8hlOXr8eJR0jYCbRbopSfw1EuudkJJsePkKxP0lLTyAfecwPNDXXUNjQymZ3h6R3bmcjO4gpQUmAqjYrz+Ry/fOIXnLvuDNJ1NSxfeTLdC1eSisXRvsaUspQmDmNUkXKiAzsiaaxLc80178AvlYmn0kznsmx+ZgsDgwN017VSUj5aGsrKwzMaVyuKfpmSdokJH21r+vo7aaiJ43glVEkjPT94kpZEqaAkzJhj7QiPLbCq/FZpr2ZMUEVWFRRBpc/afBYkCII1GiEkumKgLgBtDMWiy7atr+0sHhISEhIS8tsSBiAhIceJo13/K2U4BItAYUmkJdBGY6rBx7x5oM/h4TH27z/ECY3LkUZiawsXCzEvdDYGIUxwxVzM91MKfD+MEGihQQRbh4b289zOzSRX20SdCBO5SbbsepbFPX2kkylm85OM5oY5OLaHB398N286580sau6lMWkjjEepMMfs9CHGBncidRFVGkPlHUzJQvp5UlGBbfK4+RGMtCkUc2jtU1/fgPQ8SsUi5ZlBLHeGzMh+0rEooqaOsufywr49TIxlWb64h1gsysx0gdqaZtLJemwioCXTo1MM7n6epcuWID2LybEjHNr/PNKa4cjkKA8/sZ31Z13G4uWr6ehfiFSG/eNH+I9fPMa9D/+ISb/EgekxGg/txxEWR6anmMzM8fBjj9Df08cZ55xD04IOYvWNeKUie/ftQc8N42XGsHSByeEXKLk5TKIOJ5nCisc4ODnB4//5GPc8cB8HDw+ysncZuwf3Y2wYHhshXy4QLeU5ODpEbX2E2qQgQ45kfQSh8kwd2Et+zmfm8DBoH1XxUwlChmN1HfMcDWKDn7Liw2JMEFwEgvaX5kBM0P5ZGIT0g/21VS3bEijcUpm9Lwz9LqZ+SEhISMifOOKzn/3sf7GyOCTkT4fPfOYzv7Oxl1SyEWD9/+zdSZAc15ng+f97zz3WjNz3xL4RXEFSpChSlMSSVKUuq96qxrp6Zg4z3de5z9zLbObQNmZzn3ObjbXVdFdPVUliqdQlURQpkiAJgARJ7DuQe2ZExu7Le98c3CMBkgJISgRACu9HSwJIRIR7uGci/fP3Ldtzq4MAHAmj40Oktk+nnWAThXYBBoPFooeEH/3gW/zoX3yPy8kq/+W9V9lyIHpQhO62h/8BWT2BUohkrWsVDlEW0Q7jAmYqc0yPzlAqFmn0t1hprDJcGSbUIZaERmeTdqdFKSgzXZvhW0de4IVdC1RsARsnJEkbnbQIXIoaGiE2FYLUoKIW4voQViGoZJPG0xiNUC5WCEyJbrdLlCyBSylSxRTH2bCGv3ntN/zkV28SxYbiUEhVQtKkjzERf/W//m/86MV/Q1DRHPv12/zf/9d/oNnYpFwdYnP1BuNjJf75v3mBlfY6f/2T12j0y0wt7KFcKYJVbGxscG11kXqvRQLMTM0yXB7GONhqNtjY2kRbS61UZXbHToZHJyiFBVTUoeq6/NmLT/DEvklC6ZOoEa5vRfz0jRNcb0RYU2ZtfZ2V5Ru0u1tYLMOlYWYnp1EB9KI+q+t1FIrp6XHmZkf45jcf5tCuSfaUQzYXu/zi79/gypkluu0ei0uLOJdmncpcFlRsN+LNfyPkqx6DICMf/lgsBlibYC2I6DzdatCC1yEqIChEjIwWSWNHt5W1HYYUrS3OCVrDaet/RHje7+Kv/uqv7vcueN5Xll8B8bz7RRuQQfm5gLaEJc3hR/bzZ//qj2m21vjp3/2KC+fWcEi2aEFAEkUsr6zTanYYHqsyHBRpxv3sMXnwYUQIBgPntMaKAhdmLWJVgtUgSnA6ZTleZm19NYuFbIpOLf3+BqiARDkSlZIEQk9Bu7tM4+Sr1OQwB4ZnqVBEO7IWwFaR9NokQQuXCgWbpYJZOkRpFzEK5yyIo9Fdpx+l9JMEW+hSLISMGYVrWU5eWeXH//APLLUjrDWkbSinAdql5YJFIQAAIABJREFUjI8USOIE5SyBgLIprY0NTn/wPkYXkLjHxlDIhUdnOfDkAX744ou8+8EVoriNS9qMVCepDQ8R9IeRTpu2TWgsL9HUayiy1sapOKw4emmP9SvnKV6/SEkJ4yXN977xKLM7JohVmtXIuB6SdmlsrnDs5AW6ukTsIE36KJvN89jstGhGPSQ/N9YCKLrLV1nrKqJSg7NXCrz08CF2D+1mbmqUk68fp7nVQ4lgnRBok1cMDcZVcssyiMq7cd0sOHfAE089gjHChYuX2FxvZYHIIM1KO8pDZV783hGe+9YTrC01+Ju//ica6xGptYgTFAr5opXvnud5nvc5+ADE8+6Tb337cS5dukKz1UaAarXC/gM7+dM/+wELuyfo9go898IR1tZ/TX0zwgxSZJyi3enR7faZmB1nfnyKS6uXBze4CZxiOCgxWx1jx+QcDsXy2jo3tuq0pYczKWiHShVaguwuujiU0wSmTFAOcTab2WFcgqQOLSkQoUnoJj0+vFRm5tA45UIRnMGJQREiLkXSFOUMFiFWlp70Wet3WWnX2WjVqbdbtKKYyAmJs6AdxbDAw+ML7B7ZyclL51mrNxFnCNMEZ4WYAtpAEGimxobpNevEsSLqbGHjLkmvQ+z6BA56qWPl0hqPPvQQ+yoTLCVXuXLxMnGnS13KUDOMj44wtXc/i60GV1ZX6EQdEmWw6Gxgo1HgEpxLCKwwM1rhhScf5rvPHKZazlLiLEUMKUPVAnt3z/PGR+fothuIDkCB6GyFy4mQJDHkjQaUClAoXBpjo5itqIlqK84vXmfm0ByHHjvAhQ/Pc+ydD7DOobUBp7YL+V3eOW0QaqhbkvkgT9IyMLMwxpEjhzmy/hDvvvM+F85fo9dLUMpRGxniqWeO8Px3HmbHjgl27Jzh4oXrvPX6R7S2+mT1SAFIcs++HzzP87wHhw9APO8++bO/+BarK/tZ36gTRZaJiUn27NnNwsIMOoRCscBDh2POn7/Gm2+dwTmLcQqlFKl1JElCtVBk38IO3mpcJs0qzRkJhthVnmR3aZJgNcUozUxxFxMzFc7UL7ERd9ESEqZVyq6CUXmb3FiT9tKsXaxRFMohqigkOiJVEV3bJFERffpcrTdYazWYnAwJjMKJwgJO26zyWUIaJFzrbXHu+mWW23U2uk06cURkLTGOFMEKGDFoEyI9QeKQy8vLRNpgrcLoFKeyye0FDZVSwNFfv8rRv3sLa2KWriyxvrKEcg4tGo3GJYqVxS0un13kg5OnOXfmMp1WExunaFfA1gWzvkF5bIyFPTvYuTDLlfVFVlt1OlFKKhCIUA0CZkbG2Dc7wTcO7+Gh3TNMj9UoiGCdQSmDJaVcLPDEQ/s5c+kav3n/I1ppRLxdc2HyJgJZLY8iG3Hv1C0rFpIg+YBFZRRjs8N854fPsbqxwqVLK1hryae6kGLzmg6HVtxS2zFI4sv+FIQwMVVjftcYu/ZNsXPPHNeurrCxUQftmJ4dY8euWWbnhglDTalY5NvfeZrLF68S9TukUV5QRHiPvys8z/O8B4EPQDzvPtl7YI6de6aIohQwhGGRMAyzsYTiCAoh07NjfOO5R/ng7Hm6qykqGzWONppyqUhBa/aMT/LIyAyLaxtoikyYUdSq450PjhJvtNFoxmdnmH1sjsMz+zi1fpVG32HbIRtbfTr9DnE/gb7CporUANoRFjTlUki1GjA8UmRqeo5WbxNLRMO0WG8u4yaqCAHalHBOEJWCUjiBtX6bV0+d4Mb6Kq2kn80zUTq/RS9oJRgNWEWaWmwhod1ustVukaDBGFKXIkHWbjg0hiKat3/1a64fX6ZLDxcJ0m+hB6s4WrBOsbJS5+///p+obzZpd/pZuhlgnaPSseiOJWnESLPHC3/8At956btsRU1WNjfo9WLKxSIzE2NMjo6xY2qS0WrIUElhtOCsJVAa6wRnsknrs7Uyf/7S8xB3+OjKVeqxpRU5LGQrKmRxSNYgwOS5UEKgNYHWlHTAvok5hoKAclGz6+AMP/jTb/P3f/tzNlbbJH2HsyChRRmF0QaxDqzgrHxsQKEDakMB4xPDlCqaQtGwd2SeHbsWiOIEtMWEKUGYr6rkS2c798zw2JMHaG61WVtuIZKiMPf0e8LzPM97MPgAxPPuEycKHQRUgjBrS+vs9qhyBaQuoTZSZO/+Bb7/w+/y3/7ra9iWYALNyMgw1WqFgjGM6iJ/su8JTqYXaPUU184uc/LYBZLVDqHTpMD5a+vsX91i/wsPs2N6H+fOnmBttU/UFSLdBwU6DVBicAGIy1JvDIpQKSqlkOHRCgt7pqnUJuiqOhYLolFSwrp8eKFrZV2VrKW+VWdxbY1uGuOUwuWdvtR2y9sErbJGsJKPaTeaLF3JCkoFGCtZ5pJk+1JUBtvuETfaRNJFnCEYpCQpIcKhlWF5ZR2lLJJoQgpYErQCLSUSlWTT4WNha73O26+8wv908C954smHMKEhTR2BhkKoMTpLMRNJsTpFlMvOkTi0VqRaoZKUkUJIZXaMf/+v/5Q3P/yIN0+d5eLKFo1OQpRsd1LOVnPytrgaTSnUlIKAmdooe0emGQoMiojqSMA3vvUYpVKZn/30V1y/ukEcCbpkGZsYYWRohK1Gi63NJkkvxaWgJFthUcqxZ+9eJqcmCQoaZSwiCToMKIcBorJADQTSIlAEhFJZ8+J3n2VtqUm7dYZep8cgbczzPM/zvkw+APG8+8TkLU8Hcz+MUTCY/6HyFB8nTE5N8vwLR9ha2+Sd1z4gLBQ4+NBeRidqiKRUgyIHxmaYPTLPP/zDG1x99zy99S6hC0jzsnRnUy5eXeRq3KE/XmKx0yaxAaIM6ADE4bRGSxYcoDQosJK1cI27lla/xcpGh4OH9/H4U/uYHd1BIAWMKNCCRVBSyFZptGWkVGY0LNGJ+zgjaJWXUEs+i0JpUiWEebaP01ldvhHJ+wk7lM7mnGgszhq6iSWshARKE1iN4NDkyUyi0FoQsSgXgEpRyuJEEVLCSg9NRITLJ71DkjpWl5q88avjTE+PMDVbhZJGiUIrjXVp1jHKCC47MnkiVVb4rcShjMK6GBMY5iZr/On3nufIN5/k6PkLvPr+eyyv1Ol0IjqdPi4BTZC9SmCpDlUoa83BuR0MF8qEOhtEqDVUKkW+8cxjzC/M8dobb3Pu4hVYKDA2N8NIbYxyWOLSybOcf+csnaUeKtUYDYWRkJd++ByTkzUKRiOSfY2pvHJd4VAiOEze/jkjOKZmx/jhn71IP+3z/nunMIEvQvc8z/O+fD4A8bz7ROWXs9vDA12Wx69RODE4FaDQmCBmdrbKn//bl3jmuacJdJmduyYpDRnQNgsalOL6+SWOvXKceCMrxs4SgLIL7cA52qGll/TpN4VYDXL7bT4oxKCdyqdtK4RBmhA43M2Wr7Hjwplr7B4pUds3jqEA9EHFOF1AuRDtDM4IM0PDvHj4CX763hsgKam1WKPQWqHzTlDWgSPbdiyW1KZUCkVC3cIK9LRDYyiorF6kEceE01VE512aSLabQWkCsDZfTVLZqooCxJLkHaggyY5I3t1JKYVLAs6eXGbpW3UmpooopVGUEReAcih9c27KoOetzlOgtBWsUbjAoCRrqGxsTFH1afavE071mayVmEgqRL1hOlsRnY0evSgmLGtGxqsUAsWOuVl0QeO0IdUGJ1mBuQ0SSjvKPP8XzzN1fZ5fXHqf026VdGuFktbsPDDKS/tfonFmi+VLyxTLAd/+wTPseXQXpVoR5SxI3sE3D0A0Bi0CBIjKjkkenQCWXfsn+O//3T/nu9efReu78IXveZ7nPfB8AOJ590mqguxGPwCCKNme36FwGEkRFEpZTOCYmKxQLQ+jCCkUFVpbEEHQpAkce/ck9c0WzkqW8vOJKdmiDVZpEsm2pQHjHBaL0wpnHIjO0qqA7aiDwfRtwSlHP465dm2J9fUWu2tziKTZOk42zS5f3XAMmZCHJuYInvkOx86d4lpjnU2VkCAopTCShUdOCYETumlMKsLY+AipWia0irigEAuxE5SGfhwRlspIoHCxYBV50HRrE1qDNn2cbA+FRyQGAhQpZvumfn5clLDZanL2wkX2PzpFtTCEpBrEgsrqcdCC1tl7VIBLY7Qy6LSKuGyauNYKEYs2is1mg1avRSQxEhoCpSgoTa1YI5ocJkochUBRLUISOFbiNiNSottJWe1usdps0Op1sAipOHSxwNrWJi3RRPnKT18sN3rrdGgxdXCCR546wsriKm9dPcdWIDz18H6mqwUK5ub7zdY/NEJAltQ2OA55nptyFAshk+OjDA+NoFT6ZX/Ze57neZ4PQDzvfnGD4mSyi2SFZGk9eWtVjQVlsDiUGKJ+yuZai/W1OkEI8wtTjI4OI07YXO9w5vRF4tjmnZEGV9k3W7QKCqc1qdagNco6ApcFPbGWPO3KgXPZWJKPZd+o7EJeZXfno25C1LM4FyCqiCMdPAqUBRyhUkwEJQqjc0w9VObK1hqnWqvcaG7S7nRJXApa5cfC0UsiGp0WU7NTBPoUSsn2ooNVIThHEltGRidQZYOLsstm7bL6B0FQ2Rw+pudrDNfmuHRxkThuZ/sl2T93evt45I1sldCLY1ZWN9hqxCCOS+cucePqFYLQMDE5zsz8FKNjIxTCAiLQbLZYX92kvtim3mxiSoaJiVHm5qcZnhnBOoUVh3NZfYs2QihA6EiMpoAhTLNAsIvl1xc+5H0zRM8ltNOYKE1I0xRthRCFcgJOSMShlc3SwhA64ujrmKaknF9vcv3aFt31iFOXN1lrtPnhs48zP1YhVA7BZsGHUvmqk0Epl3+NZB9aKVJriWNYW9lkfXWTl/7yy/7K9zzP8x50PgDxvPtEy80C3+zufZYn45TanljuJEWcpll3fHjyOkdfP0W93qJQFPbun+al7z/H5NQYly7dYGWlThzZrNBbZbUWtzLW5cMJswtfq0HcoFUs2a9YUDHk3ZGUZLNHHBpUVg+CVoyNVBmfqCE6G9qHGkzjdllHJkW2OmEU1aDA8Ogk09VhdqVz3GjVOX3jMmfWl+iohKIzJMpiY8em7rAwMs1kOWRNLMoNalICAqCkNUOlIYrlAq2moLKMq3y+t8LhmJis8tTTj7O60suG7imdpbtJStZW9pa7+ip7lnLC1voW3UaPzcUr/Phvf8Hq8iYm0FSrZaZmJ9m5awe14RqdTpflpWVWV9fo1rv0+n1UAEOVElMzY+x+aA/VXRMUowpDyRA9k4CyOONwKsXpfMYG2YBIJ8JaY4u6a2VDEBUorfIFCSHdHjSYvcdAsq8Uh8ZhSMTSdDG2ZdhYE9p1zQZ10rdPsmN2grHaPoJQ0OJQymElr/1BA4P0MgeicDagvt7m6G/e5/TpCzTWe/wv//td+OL3PM/zHmg+APG8+0SprBhYi0MEnDI4ZZCsL1S+LKJotyI++uAK//k//Yz6WkyaOFAJm+sbGG34k3/2EmfPXCKOHCI6CzBkcJE9uHCFkhXSKKFQUEQayLs4gUZjcFYDJu/ypMkuUAc1KnlNiVYUy0WOPLGP4ZpC6yS77Fduuzg7m8xt8qnr2T4YragVSpSKJWaLNRYqI4iCxsa1bPXCOJwV2jamG3c4sHOWzfPXsn0y2b5UtGXH6Cit1S16/V7WySpPidLo7J2GhieePsjCzl2cv/Am6ISR0WG6rS1s4kCKeW3MzcMzWBGJOhGdrQ5XLi5x8ew1+v1s5gq0uHp5jZPHzxMWQpIkpR9FOGtRLi/wRtigwbVLy5z68AK1+UnMXI3iSBGqirScYk2KU45QHIjNVyKyY6UsxFrQKAIhr5HJ9i+bWJ+fB5e1zNUIWhmsZKlpYmOUkzw4UVgTsrjZ5IPzl3l4zwJDIyUUWcqeVi4vSlfb09kRhXIhcRd+9U/v8tbr77GyvIFLfRG653me9+XzJYaed5/EBLjBUDmxaLHbd7oH862thdWlTV7+8c9ZX1nHpl0UPTSWzfUtTn90iZXlBleuXMOmNr9g/u0XjUGcUowSyrGl4ASdpoDDKodzliAfCogrIi7EYbAarE5xpo8KuxTKXeYWisxMFKmWVbZaotx2hyUtkqdDme1aEqcgMhAFglLCqC6wszTC07sOUrZZ0GLEYZXQTxM63RbPPfMEFaMQkxd7O8dMrcwzhw5y7LW36bbbYLN6mUHtidGO8clhnnnuCW4sLrLV2mDHrin2H9hLEBZR5pMVLfmaQtZCC60ViUsJygVs/p6cpIhkQx977R5b9S267Q42Sbe7Sw1Wi5AArKHTiLlxZpkLb57n2puXaJ+tEzQNQZIV6QdOEzidFdErnQ1QFIXL64G0ZGllOm9d5QAZ5JaZFKdTrHHEpGA0zoJKC3SaPaK4B8oiIvSt49TFa5y/vkrXKlI0InlI6SwOi1KD3l4GkQLvHz/H+8cusHxjCxsHt2bweZ7ned6XxgcgnnefnF9p07YBVoegNcjNadZZvYUiiiyLN1ZZW90EB1qlWfE5KTa1NLe6fPTBWbrdTpa2M8jnV7duKfuDFtC9hGInotqNqaWWwEWg+2AiMBFKJfmFrkN0gpgIKUSoYo/RSc3BhyaYmw8ZrxUpKMlqE7KxGFkNy/ZE7mwtROe7YjXEBrJrWiFEUwtLVHWIRmXF8DoruLY2Zm52nIWJMZQ2aKUZKhc4uHOWkk1oLG9ibZZqdvNYOUzo+PZ3n6Xd6XD+0nn2HdjJ93/wIlvNOr1ePy/MTxDl8nJstvcVpQhrJcqTQ4zvm6Y4XsSpKJtpQorOwsHsjcogZenmh+T/ORSaAtpqTA9ktUfjo2WW3r0Em5ZCHKJdeLPYP28WoEUIXVaMr/MmATZPkyPIh09aR5D2CCXNtqt11r0srdBZ16wudenFKVYlKCU4ZbiyUufnr7/L1Y02iSmR5jU8WmeBqnMWUIhTuERz7sxVGhsdxCqM0vlZ9DzP87wvlw9APO8++Y8/fpXTS006LiQRg/pEz1MFtFotrly+RqeVZuk3g/hCAKeJI8vKyirj42PZJPB8JYJPvVKWqBQ6RbGbMNq3fPvQYfbPTVCtAoU+Uujigiam2EQVWuhqj+qkYWbXCPsfXmDXvmmGh0MW5kaZm5iiqItoCVAS5BfT+mMTubPULcE4KOQpRamCSGdF705DKi6rWc+XMlIEpYWRcoFqrUzRhIg4atUS+3ZMQb+LxEI2BFxAZ+12TTFgYmaMRx8/yPHjHzG/Y4ap6VGGRys8/Y0n8h0KUSrdPho3D5XCGUVlcphkSMFUkYNPH8YU9fZsksETtp8rN7tvqby31KDMOyErEg8EClaodBXBcsTaicvoLYezWTcyLaDFZfUhylFIsyBEIVgtJNrhlECcUBPNfGGII1P7OTxxgEKvQr8Om4tdbpyus3S+R9QMcQQo41CkWIGODfjwygp/87NfcW29RarDfNUtTx3Tg65nhlazw+L1ZbrtDgqLSN+HH57ned5d4WtAPO8+OXFxEX7+On/+vad5YvckJm/Dm90Rd9g0ZfHGDU6fPos4haYCkmYXh2S1HjaxNBtbzCyMY8xVYmfRt0YBt1xuD7JpihYqqWJHdYiHnnqOV6+dZD3ugBWMsxiTQhiighAdhJjAEBpFQcNQGPLY/ocZLg5jKOTF0Hm/W2xWf5L/ZzWY/CI8cNk7iwNIDUTiWOu3iZRDicYqQVswoaFYLBI6xVa/i0qyWocw1FTLYTakj0FtRvaauqCZmBnnR//sj/jo9ElGR6bZf2iazfVVysUC3W6T6Zkp6mt9rCTbC0SDD6cUuhRQGKtw/NKHNGxCMFlhdtcCy9eWsP0Ujb45znz7/4K5pZOWqGwFZLASpPMDXrAa14IuCZ2VOnp4FFEaI9lqh9UOa8BmBTPYwVBGgbKFhdIo35jfx77RGSI1xlsfXWbp5EXqSYQVh+obXFQAEghjROXBqg5I0Wx2Y46dvkQ5fIV//ccvMjtapWjydyCgRaEJeP+942xubJIkUR6oCeInoXue53l3gQ9APO8+aXWWOXFBQ6GMqRzh8bka5dRR1A5LyuZGk5Pv3GDtus1qM1QPEZvXLuQpNDYg6jlqtSrgsgvzj7XhzQIDlMvnXxisaFwCjcVVpp+YpjilKTpFkGpKNkQUxAVDwSlCB5FxJFoYUiGPjc3xfGWaIa0RkixFCNleDUjyVRyFQ0teUK9SUmMJRBHGWaH9lktZ3WoiFqx2iASYUJgJS8wPz/HLo2dZWkvoaiFIDc4KvTjA2DJKIEwNhgRVgJndBV78zuNUh6q88eYi3/r2U/S7bWrVGrbvWLq8wvzUHPXNM6QW0hBKiRBKNpHcmoThuRKm5rjWbbOsY3RVM/xclVJQIL2QIn2FywMuIcEqi9Nk0UJ2CLIVje2zmz0ym0oSZFU9OkWpFO0SrApITDZx3YgidDZLvRKDNSGCUFbCI+PjfHv+ADtHZlGFMu9eb/HO2TMsN7tEYkAEIxHadLNOZVIAWwLSvD4nxVrDarfAP71/GVWu8ZfffZo9FUW/7MAVcGmZzbU+77xxiuZmB6wbvCXP8zzPuyt8Cpbn3ScOR73V4tT5a7z57hk6scoGAgKdjnD6oxucfO8MUa+Pc4NZDZnBDAsRwVpLoRCyPVH9U/UfanueRlaArbBJysr1G/S32oSpUNIBRRMQGIMJNFqp7SF+SkFBFONhmScOHKJcLKG3i923y7D59FYH08fzJKW8K5ZVEEtCo13HkSAmYZQSDxV3cnjyYS4vt/jpu8eJ+jGFfkSqE7pJxPpmg2a3RyJ5alIAE1MjfPell9izdz9vvHkUqxSbzS02mi1Gp6a5cPUqy+vrrG5uYCU/gg5SY4jR2SwWAwuHd7NeTNkyFpdalHVIUTN7eBfMlenWhH4QY1UK+frT4Ezc/iPT0472MMx8cz9uxzBRSaFRlGKhGkMp1ShrSJXBKkWIYlwCnh7bwQ/3PsmhiT2EtQk+aDb5u9ePcvrKDRKboklRkiIuzdsg31zXUehBcQyCIXWaRjfi1XeO88GVazQSCy5AU6DfS3n9129w7cp1up1+tqLleZ7neXeRD0A87z4RbUDDWqPNR+ducPrCIqlS9FPFqVPL/MNPXmdtpZ4XCmdzPT55oS+AE8E5QWuNOEfe6oiPJxplQ/tcfnEs1tGqN+lsbFFTJYpWY+RmIKG3BwBmQc6QDtk9MsnOsem82P2zDVoMQ5bmZJXKu2pZUkno9tooHMVQ8/DwTh6beZxzZzd49a1TrG92cKnFaQvaYm1Cvb7F2voGzgiptgyPj/DS9/+I/Qce5vTpi5w+dZbhYoXZiWmefeo5eu2I9058wMZanc3VDVTiCFNNKAasQpTCGkdlaojazkkaOqbrEgoYtIOusnSHNcVHp7D7ynTHHP1iimhBYRBnPuMIZOdAjKU8WuLp555meGwEHWYrF0plQVmiFNYYrBjKhEy7gOdndvPSgcfYO7lAWBzmRj3ip68d56OL12hFcRbMOYtWCq0BsRS1pawTQknI/mnPO3OJwaFJMax2evzjW29ztdnF2RKdluXoGyd45Ze/oVFvYZ3d/rryPM/zvLvFp2B53v0iIYjFuoTV9S0++OgCj++d4fK5Jf7zf/pHVq5uZrMrBjUdkk8r327/mlFKZUXFLk/BGjw2+9ubmxsUUuedl9LIsn59jdGpGRpRn4gEiyOb45E9x6os6BkNyxye2UlVDGLkc7VnvbUjVpaKRdYxSgTtLAXJ6lEOTu5hPJjj568c4/3zN6j3I7QJsnLuPBLKWtMaVpbXcVhEw979e3js0cc5f/Ucr/7qTbqdmKWrizQP7uV05wLH3j3G5fPXsb3sclxjshUZCwadtautwOHvPM4mbWIXYZzLGlxpQyoOikI4X2ZmfI54qk3zg2XsuhCmQgGD227qe9uTDAnIVpfGueuMDxUgSIiVzbK3VLbEZATKqWahNMTTu/bw+O69TFRqiAtoJpqfvfYOJz+4QqvVJvtnOz+ZzlLSwsRQkZFahTiKWNrs0pIsOFLb81yyKfcWzfkrN7h0Y42Z4hQfnDjFz376CuurDSTV+YSRPEj97FPseZ7neb8TH4B43n2iXAExKYqYNOmwurzCmVOX+X//409ZvdbH9rM5HUA2FTvvXpQ9Of9FgdaaVrMDZIHIdiaO3DrtYtC1SfKRfeAENlY22et2UFAhXRejAo1yt6y0KIUWqAQF5kYnKIgicp/v0lS2A6dBWXa2bSNQViELo9P0rKbWH+L/e+s33FjuEUWCEY2VFKsdWmV38atBARU7eq0eWmWrOZvr6/zsJy9zdWWRammEp176Jh8c/4Cf/PgfSbBEcUwaQ6ADnBu0KCYf85gSDAXs+uZB+mNC3TWBNCscN5pYBIwitSnaCLaqKMyVmXHzbB5fRG9lL/d5xmQYFKotfPSL4yw8sZvpHVU6hYTYpAiOEM1YqcYj07vYvzDP9FCZobAAChIT8uaJ07x76jz1ZjZsUCkQ0RgFM7UyP3zmYZ57/CC10RG6seP/+ckveevcdaI4QcjOn1JZ0p5RChulNNYbvH79GG//5m2WFzcQd3Pw5CCg8gGI53med7f4AMTz7hPjAsTEFIKUhZkJjjx8mF/97HWWLzewcQEj6ceKK0QG9RR59yYcOtAUS0U6nR4iBpQbDOUYPGv7+Yq8221+d9sCjY0mcTOmXCuxRR8rKcEt24AswCkWixRLJazN0n7kc2RhCYMakvzxknWGClBUTJHDuw/TiC7wy1+e5Mpmi26SBT6hdjiVggYnmoorMlWqYqKUpBNn9dUBLF1fZm1xmbA8xI5du7hw7jz1xhaRTbL2vtqgFKQuHyqoBVGKUDsKYyG7njmE2TnEqm4SmRRtJe8cRVYgDgQqACzOCDIUoKcD9EyNXrdNMfptGay3rDhtrwAFOKvobMRcff8qI5s1nnzxceb3zFIuGsphyHi5xripEFQNKsjSs1JR9C28ceyIcWaVAAAgAElEQVR9llotInFoFaIxGGBmKOR//NHzPLdvkumxKj1T5MqWpdHpYUmzISxOo3AYwLqEgqQ8/+QRyqni/WOnuHFtnSRyGMwtgxX96ofneZ53d/kAxPPuEy0giWVipsqRR/dT0sKVM9dwkcm6SOlsleLTUz2y8EPlMypGxoap19dwTvLVhk8WhX+8UFzy2dcKRa+T0FndolypEtj8Il0UToNx2WoFWki0EBlwxqCczdvu3tmgKFpnFdIYlRemO42RAlEv4s23T/NBvYtpO0IgNY5YDQbtGXCKkbDEwugo8fV1JHboPI0s7llSIE76XL50FUn6SJQQqKzzFCJoBaIdKsw601ZGqwwvjFDYO05rwtAtNElshBaF1QHiAowzFBKF6yUEicuGEIZZgXjcTelFMUpDqh3qU0sgt7bqzQdAorMUNAetRoS1Eb3pZR57+DHGxodQhWwGTKgCrE4xTlAS0JUC1zdbXKjXaaRJFpBZQ0Erpquaf/v9Z/jewSl2jASkgWa15/hvb3/ItfUmzia3fMG4rNZGWWaGq7z45JNcf/td1pc36HcjtJhb9j1rVfDpBD7P8zzP+/L4AMTz7hNHRGAKTAxPsmt+ns6lG7TrXTRFrBISPj4sT+UrE4MLRREIQs3k5DiXL1/I02jyiR9ycysDH7+8zF5Px0K63mP3oQX6UYd1mxDnDZQUZPM7tKKZ9FnsNRivzlCzilsub28vLzoZtOi1StAarEAzTjl68jynL6/hEoMLIEwtBStEgYEgAAuV2KGnhWotoNVq5cfA4Lbb3FqiWOi7Nia0lMeqVKvDVKpVKqUihZLB6piedKFqKI/XiIcD2mVHx/Tp24iCaMI0ABsQRAZpxtjVLm6tg+vHiBJUpYDRhnSrz/BGCv3sSMZ3ePsq7xQmkmapUOQLVH2HxhAGIYVyCWeyAY19slbJoQuwcUDHGd49d5WlboSIEMSOMIDZoZAfPXuY7zyxh8nhMl0TcrWZ8re/Oc5vTl6g0e5mNTwqS6lySqHEYrSwc8ccUyMjnGu06LQ6+fEctG/26x6e53neveEDEM+7T5yOwZUJTRkXCwGacjEgNoaElDQNweUpVbnBZbcTCEIoFQuMjNRoNJpYq9F8sjPTzZoRkSz4EJUFMkaAVNC9lPnqGMNzFd65dopNEmIERVYcHVtLM+rx4ZUL7D00ypALwHx2Az2Vr3woGVS+OxyOBLi+Xue1Y+/TSoDUorXDakuCytrDuhDtLInpE1QdYcGRxv28SNqC0nkrYoc2BVTRMrF7hPLCLENDw1TKVcqlAtVaSKGmuVa/TlRMaRHTtjFJEhE4S8k6nAOdKgpbQn9xg+7KFslmBG2LdpJ17wp7OCcUnUJbh0MTKwjlk0sgiiAICIIAozUoiHRKmqYEoimYIvM7J3j82SdRw2ViTfZ5B5aUNAyop5ZEFG+dPMPrvzlO2nUoq6gWCsyMBPzpC0/w0pMHmR6t0qPAxZbmv752knc/OM/K6hKBI+t8pRUMisq1wuUBhjhHoA3FQgFnBXGWNIn5ZOqVbK/heJ7ned6XywcgnnefCAbRwvJmm3PXVnlu7zxHXjyISwwbjS0unl4l7g4mUQ9WPwbJU5owLDA+MUKrvUm/k02/VtvrHDe3cusv2YrK4MLSIQQ0G32GTcAju3YyXAx59/pFLnTrKIRUg2hFr9/n/PJ13izXeHFuPzXKtzT4vT0FiHJ54XeAIPTjlPOLK1xZraMcaKXBgUWDyvZNuaxpsFOgKBDqkEKxgCMrzNepxiqbTQsvpUw/so/OSJHLnQ7t1TqxjQlECIua4fEajxzaxd5hRaMfsZG2cSpAuo6t1Ra2IySbTRqrHZJGj7Qfo6xCu7xcXxQ6VgQqy4kblPHr7Xrt7ZnqmIKwa+8Es/OT1EaG6Mcx6406nU6HgjIszM/yzHNPsvvgTqq1UvZKLrvY18pA6ri60eYXbx/jjeOnWFyv4xBmhgq8cGgHzz9xmEcP7mS0WsCJ5sZGj//y6gne/PAS9c16loKnJctgE5Wl1GERJxAUOX99hcsbqxx8cj8yVKTb6rOyVOfqpUUkVfn7kc91bj3P8zzvd+UDEM+7T9LzGx/78++TBfN//p77Mhgb8i/5jH3YnnP4+1yeCj/47+A//B+/x0v8Lm4dEH8f3Syf+e3H8EWEf/fvP99zn0f4H/7n32Ef+EocCs/zPO8B5QMQz7tP1G8p5P4ctd133d3fB3X/3udX4Ph+ti9yfH73Y/m1OBSe53neHyQ/Cd3zPM/zPM/zvHvGByCe53me53me590zPgDxPM/zPM/zPO+e8QGI53me53me53n3jA9APM/zPM/zPM+7Z3wA4nme53me53nePeMDEM/zPM/zPM/z7hkfgHie53me53med8/4AMTzPM/zPM/zvHvGByCe53me53me590zPgDxPM/zPM/zPO+e8QGI592Bc+5+74LneZ73NeN/dnjenfkAxPPuoNVq3e9d8DzP875m/M8Oz7szH4B43h0sLi7e713wPM/zvmb8zw7PuzMfgHjeHZw9e/Z+74LneZ73NeN/dnjenfkAxPPu4MSJE2xtbd3v3fA8z/O+Jra2tjhx4sT93g3P+0rzAYjnfYZXXnnlfu+C53me9zXhf2Z43mfzAYjnfYYTJ05w9OjR+70bnud53lfc0aNH/eqH530OPgDxvM/h5Zdf9kGI53med1tHjx7l5Zdfvt+74XlfC8H93gHP+7p4+eWXWVpa4qWXXmJkZOR+747neZ73FbC1tcUrr7ziVz487wvwAYjnfQEnTpzgxIkTPPnkkxw6dIj5+XlqtRpa+8VEz/O8B4FzjlarxeLiImfPnvWBh+f9DnwA4nm/g0Eg8odi6dJp3vv1Tz/7gQqQj3/KiVAqhjz/vcOUQoM4+fjDQ8PR186yudG6p4Ha03/0r5jeuf+ebe9+i/ttjv/yr2msLyLO3uZRCnGAAqXk458XGB4eZt/BHUxNDqO1RrKH4kRYWd7g0oVFWq32J55792gTMrWwnyPf/Qu0Ce/JNr8KLp58jfPHf4GT2x9nceq3nEcADS7kyDf2MzM7BgKSn0mtYKvZ5ejrp3DEwL2Z1q2V4shLf8nMrsP3ZHue5331+du2nuexfPU8InLbjzS1HHx4nudefIgkSbc/78RRKoV854ePUtAKZ93HnudEkCjl2RcOUqkWcc7dcTtf5kervn6/D+s91e+0iHpt5LbHGIwJOXB4D6OjI4BBBETAOWF8YoSHHtnF1OQwSikk/0vJL4JnZsbZu2+eoaEqznFPzqFzlrjfIYl69/fg3mONtetYd/vjYlPFnv072blzBzZRHzvHyoV86zuPMD09istfAwFEcE6oDZX55osPgw0Q1F05b586jyI0N5bu92H1PO8rxAcgnveAi/td1q5fvONjRITZ+VFGqkWefeEgaXrzDvsL3zuMsQ51m+cqBaSW51586JOLJ3fNoadfZMfBx+7R1r4CRFi7cZ6o19kOGD71EAcTk2PMzo7z8GN7GB2toZRGBEZHR9h/YCejI0P5CfvUs0HB9MwYCztmKRXLiNzujH85lNIUihVGp3ehzIOzWB91W2ws3en7UaONYu/eWQ4/uoP5HTOI02SrWwHPfvthhobKCPKp70khWw2pVcscefYANhmscd1NitrYLNWRybu8Hc/zvk58AOJ5HuWh4c98TKPeAWBmZoS5+THS1HLgoTmKoWFlvcXSahNrb6Z06NDQi1JuLNZxTigazTee20+SpHftfQzE/R5BWLjr2/mqsDalVV9BxPGpHLlbZHfEoTZUYe++BarVCmFQZOeuGYaHq9mDbglgBr9TqCwG0Yq5+XFm5ycwJuBuXrxqYxiZnGfPw89RKFbu2na+apr1FVya3PExkq9AIfDYE3sol8s4q9l3cIHRkUp2DuXm+ds+jwrECYIwPT3K3v07cfbuBiBawc5DTzO355G7uh3P875efADieQ+4QqnC03/0L+94LRkEhvffvUwvSUGEaq2Ec8Lc/Dg4ob7R4de//Ii1zQ7aaJrdiKOvn+Uff3qC9fU2QaAREWamh9l/aI7U3q5G4csxOjWHCR6cmgEThDz87J8wOrmA1ua3PkZp2Fyv02g0Sa1leKRCsVBiZLTGUK1Cp9Pn2NELHHvnIo2tDihIU8vi4jpvHz3H2bOL9PsJhULA/I4ppibHQbI773eDc45+d4tuu/GxoOgP3dTCAQ489f07HFWHIJw7u4jSCm00M/NjiBN27JzCOuHYsXP8/MfvE0VxfnqE1bUt3nj1NO+9dzELTkR46PAORkZr3M1LAQG21m9g7/L3vOd5Xy8Pzrq253m3VR0exwQhNrn9nVdBePW/fcg3nj/A5QurFIsBlWKAc8LhR+aZnh3mvWOXOXnsEnFsGRoq8ujjOzl0eA6XWHRgQIRHHt1Bu9llbbWFMXfnwsfdtgj7D1exMszI5A6aG8u3ef+CtQnnTl9DKYXRhn7UZ2xsmCA0VCpFDj0yz+WLy1w8dwMlmsZGhziJmd85wfzCOOVStqpUGyqxY880cZKwudFA6ez1v0xaaYrlGkOjk7dJC/vDNbPrMGeP/YLf2vUB0Fq4duUGYRiw/+Ac66sNypUKpWIICp566gAnucJ7xy5QGy6xcrVDt7/F5OwYjz+xNzuc+TF9+tmHeP2XJ0ml/1u39ftSwNjMboIH6IaA53mfzQcgnufdLFS9A5Xfk33z12cIA4M2GqNVVixrHeMjFb7/x4+RJhatFDo0iHW4xKHDgLdeP0uxHPLkU3t45tuHePv1c2yut1B34eIy6T9YRcsDJgjuvCChhCjq89HJy4DgrGN6dhyjNQjUahUeeXwPnU6fXi9m94EZKuUihWKAVpo0tTS22hijGR0dYu+BeVBCfXMr38CXdwEr4rBJhE0TwkL5S3vdrwMThDcbAfxWgjaKixeusLS4Tr/fo1YdQemsm5nScOSZvXQ6EY1Gm+nZCarVEqVSSNY6CxZvrFOplhkdqfLcdx7h7TdOESc9vvQgRCk6zc0v9zU9z/va8wGI53lEvTbW3jnvfCAMshQfYzSiNeR32wWQ1KHzgMIl2eeVUXT6MWvrTcTB7v0zBFpR32jfleBjsC8PGhEh7nfvcNGaUUpwLs7vgGu01h87D1prhmsVhmuV/DhKFnwq2Nrqcv70IsZoDh5eoFwuUiqVgCZ346hL1m7rS3/dr7o46ub1PHf6/hC0hijqonR23gbrJYOanUqlSLVSzB99s+DcWsdH711Ca833/vgpyuUi5WqBuHEXVkEEnLv7dV+e5329+ADE8zzajY0vfN3xeYIHpWB9rcU7Ry9ijEYZxZuvnkZE7upMkPABKkAfsGlMr934nOlngxUvlQWMt5zKW8+qyv8vIrRaPRYXV+n2WjjnOHM6QUTRarbI5kl8uReuAiitH7j0K4Bus45W6o5zQG5yIIpBo7BPn7/B77M/9foxly4ukroEBE4cP4dNLfWNJtrchbkgKmv/7HmedysfgHieR3118Qs/R2t15xu0kN39VJCmKWGY/XOjlLprKx8DhXL1rr7+V1HS7xL1Wvmd889Hqewi/7NOhwDrqw3WV+ukaXY3u1FvAiofhHcXageUQpsQ/QC14B2or179wgs/Qfj5vqdarR4XzyxRKGcbWF/dRCnuTvABIEKpUrs7r+153teW74LleR6NtS8egLTbfZrNHup2heQCqhhw/fI6QfDbOzPdLaXK0D3d3ldBp7VJ1Gt/oZQlJ444inH29isYkteKJInFObf9WaUEpb78lY+MQmtNWCw/kHfPm+vXv+BRVXQ7Sd5993bnEVDQbrUJCjcfk53DuzsRvVQdfiBXsjzPuz0fgHiel6VgfUFGa15/5RSXLqwQJRatFSYvTAdo9WOOv3WB5aXGXV/x+KRi+cGZGzHQbqxh0+QLxB9ZAHH92jI3FteJ4jSrT1Zs/zqYG7G8vMHa2gY2TblXFTZKaYql6m3bCv+hSuM+7a0v+v3oaLW2+PDDK9jUbZ87bj2XwGa9zcVzS9y7Q5ql7xVKD96KpOd5d/bgrW17nvcxNomJ+t3f6blKKU59eIOPPrhOoRBgndvOXY/6KcVicNda7d5hpwjC4r3d5ldAv9PMC9C/SIAgpGnCuY+ucvXiKiNjVYZqZbQxpElKrxXTanXpRz2cpHm61b0gKKUIC6WsDuRBIUK/2yJNoi/8VG2Ea5cXWbq+ytjYCCPjQxijsTalsxXRbke0Wg10APe0TUN+HrP2XH4VxPO8jA9APO8B9/teihijEYSwEHD40CzT08MUQsP/z96dNkdynYm9/+dW+16FKuxrdwO9b2w2N3ERLYkcLRMaXcmaubJv+I7jvvCn0NewY8LhuTF22JI9UnhG1pU8M9SMhiLZTTbJ3jegsQOFAgpVqH3LvC+qKgl0ozc2WOhGP78IBNm1ZJ5cKvM85zzn5I2by0zdWkbreKXDeqxxEHuBZVnNp2d/qRmjLBTNpForkVwqsrroIBQNEEsEcMQMKrUy5YrZweCjTXm+go+Wer3aOo6P/7tRNROTOqtrqySX0oSDYXqGA8T7whQm51B1ha863epuivJ8HkchxINJACLEc043DHTDQa1S/tLLUBWFl96YwKWpVGsNTNMi0hVoTtna6cqHBeVCHl/o+ekFURQF7Uln/rIsevq7GBntIxDwoLTSZ7AsSuUy1cpXNd7jfsUxqVXLWJaJojw/FVjDcPJET5e3LNxuLy+8ddCeghfA6XTw4T9eQnc9eRkfh2k2j6P0fgghNpMARIjnnoLhcD5RAGJaFv/w68/RdbWVg65gmpY981WnZdNJfKHorqx7t+iGE9QvW8mzsFBIt57V4nDomA2TRsMiny9Qq1bp9NNVTLNBMZehUa89Vyl1uuFA1TQajUeZTnl7pVKBG1dm8PgcVMv11uDzMpqz071YFqqiUNxIE4z2dnjdQoinmQQgQognbj1XUNBUBcvEfr6Hpu1ei6fHF9y1de8WzXC0nvXQfhzd41EUi1qtQnJ51f7+F43WnX8YoGVZ1KtlzHodnpcARFHQDCeabjxBANIcP5NKrWImsVPnmgPTd+GhjopCqZCVMSBCiC0kABFC4HB2OC/jKzQ4cYJwvG+3i9FZltUc6PskqTvNBe1OJfUuiqLgcHno23fiuXumi6470HQDnqBHshkwWs0OsV2t8yu4PAEG9p+S4EMIscXzk1grhLgvw7k3pq1VdZ0DJ1/d7WLsCt3h2jNT1mq6g1jvGN3Dh3a7KJ3XnjVqJ+rruxx8KAocPPtHreBYCCG+IAGIEGLP9IBYZgPLfL5mwAKalVZnc/rcvdDQrKoa3kCk2RPwHNId7t3IettxiqLiD8d3uxhCiKeQBCBCCNy+wG4XYUdYpsXa8txuF2NXGIYLTdPZ5WbvHWGadXLrzQcrPncsC8Pp3u1S7AjLMtlYT0r6lRDiHhKACCFw7qE8+9kbn+12EXaFZhjNHoM9UNdrNOrkMysUc+ndLkrnKQpOj38PHMZmF87S1KUv+XwaIcReJgGIEAKnx7fbRdgx6eV51lcWd7sYHafpBqpusBciEMs0KRc2WJm90Xq6+/PF5Q3uiU4Dy4LU3A2K+YwEIUKILSQAEULg3kMBCMDkxQ93uwgdp+kODIcbZS/UXIF6rcLK3HVKz2EviMcXav3fs34sLRqNOtNXP5A0LCHEFhKACCFweQOo2t65HKQW7pBJPV+9IJpm4PT47OewPOtMs0FxY53FqUvPXS+IyxvYC2PQgWYi1sLtzyhuPH+BpBDi/vbGnUoI8UQ03cDp8e92MXbUnSsf73YROkpR1Vbqzt65rNfqVVLzNynl1ne7KB3l8gT2To+BZdGo15i+9tFul0QI8RTZO3cqIcQT8QbCu12EHbW6NINlPV9T8jYrrnvnsm6ZDQq5DGvLd3a7KB3ldPtwuvbOxBCWBcmZKzQaz+GsZkKIbe2dO5UQ4on4QtHdLsKOskxzTzxL4XG4/WF0w7FnxoEAYJlUSvndLkVHqZqO1x9+9oeAbFItF6mWCrtdDCHEU0ICECEEAKFo924XYUc53F6UPTIe4lG5vUGcLs+e6gVBUdB1x26XouO8ofieCqAVVUM3nLtdDCHEU2IP3aWEEE8iENlbTyz2BfdWj86jMJxuDJd3D/WAKCiKitO7Nx6U+ThCXQOo6l45juD2BNAdrt0uhhDiKSEBiBACAG8wjGsPTccb7R7Y7SJ0nG448Ye6Wk9Ef/YpioLT5cEXjO12UTouEO1uzf61N4IQf6R7DwXGQognJQGIEKJF2TPjQBRVpWf4wG4XY1f4Iz2oqs5eqLiqmoYnEMPt21sTJDyUZeENxnD7gnui0q4qkBg6tNvFEEI8RSQAEUIAcOuz91ldnNntYuyIxOA+XM9h2o7ZqLOxttiabehZH0DQHPsRHziAbjxnY0AUhezqIrVKaQ88A0XB4fbR1b9fnoYuhLDtjX56IcQT03Rjt4uwIxRV5cCJV3e7GLsitXCLpTuXadSru12UJ6ZpGv5Ignj//t0uSseZZoMrH/wNtVqVZz2QVBQYOnj2+QsihRAPJD0gQggARo+8yNixs7tdjCc2euRFvMHIbhdjVyQGJhg98hqOZ3wguqIoONxeBg6cxuHeO+OSHpWqapx++89wewI826l0Ct5AlKGDL+52QYQQTxkJQIQQNsPxbE+TGYx1s//4y7tdjF2jqCrdI4eaM4A9w1Px6oaT+MAE8YHx3S7KrnF5gwyMv/DszoSlKGiaxpFXvoem7Y3eVSHEzpEULCEEALVKmclL53a7GF+ay+vj1Fvfe+6e/XG39PIMxdw6PKNPgdd0g2j3MGPHXkPdI7N5fRlmo8bi5GeYz+S4CQUF2HfiLcKJwd0ujBDiKfR836mFELZ6vUqjXtvtYnwphtPFmX/xf+Dy+He7KLuqUa+xNH2FaqX8TA5eVjWdYLSX/ae+jtP9fB/L1cU7lHLrz+DAbaU57mPiRUaPPp9jsYQQDycBiBACALc3wEvv/BhPILTbRXksDpebF7/5wz0zhfCT0HSDgf0n8fiCqKq228V5LM3go4eJM9/CF9pbD8X8MiLdQ4S7R1pjeZ6VNKxm8NE7doyJM9/a7cIIIZ5i2ptvvvnT3S6EEOLp4PL46N93hOzqMqV8dreL81Aur5+z3/oR/vDz96C6+/EGokR7xyjlM5QLWSzz6U/F0jSDcHyQg2ffJRjt2e3iPBU0Tad39CiqqrOenH4GOkKawcfA+Ascfunbz1wALIToLAlAhBBbqJpG78hB0isLlPIbu12c+/KFY5z91o/w+J+tHptOcDjcxHrHKBc2KOUzmGZjt4t0H0pzwHn/fg6++A6+UNduF+ipoigKkcQQTref1YVbT28QojSDj7FjrzNx5psoz/AECEKIzpAARAhxD0VR6B7aR3L2NrVKabeLc4/E4D7OfOMHOJzu3S7K00lR0DSdcGKIUj5NKZ996oIQBQWH003f2HHGX/hGc/zOMzx18FcpGO3BcLhZXbzNU5eOpSjousHhl77DyOHndwY6IcTjkQBECLEtVdPp6hthceoaZqO+28Wx7T/5Kodf+heo95ntyrKsZ/oZGDumFYQEwt1spJeolvJYT8nMWIqi4vGHGDn8CmNHX0N3uCT4eIhQVx/1WoVsan63i2JTFAW3x8+pr/8piYEDcgyFEI/s+Z3jUAjxUB5/iGOvvcsnf/+L3S4KhtPFia99m1jf8D3vLS8v88/vv49pmmiqRqVa4ezZs4yNju5CSZ8iioInGGXf8Te4dv7/I7e+sstjQhRUVSUQ7WHf8TeI9Y3dk65jWRamaVKv1zEM476B5vPowKm32Ugvk16e3uVZzpopV5HEEMff+AFOl2/b4KNarWJZFk7ns/18ISHEzpMARAjxQPH+UQ6c+ho3L/x+18rgj3Rx+q0/xu0L3vPerdu3uXDhAn29fTQazTSj3r5ebty4QTaT4dSpU50u7lMnnBhi5NAr3P78dxRz67tUeVUwHE66+vczduz1e8Z7mKbJ+vo6n3/+OblcDofDQbVaJRgMcubMGbxe7y6U+emiajrHX/8BH/7qLyjms8AuHEel+YyP4cMvc+DU29sONp+dneXjjz/G5XKhKAq5XI7Dhw9z+PDhzpdXCPFUkqYlIcRDjR19kaGDJ3dl3f37j/DKt//PbYOParXKhx98yL/80Y84d/48Y2OjjI2N8sEfPuDQwYNMTk2RTqd3odRPF0VR6B4+TP+B07g8/s6nqCkKbq+f4UMvcejsH20bfKysrPDBBx+gaZrd8xGLxYjH4/zud79jY+PpnRChk5wuL6f+xZ/hdLnp+HgQRcHhcHLsa3/CxAvf3Db4uHr1KpcuXcLv96OqKoqicOjQIVZXV/nnf/7nzpZXCPHUkgBECPFIDr34dUaPvti5FSoKh196m6OvfOu+U3peu3aNo0ePtD9Of38//f399PX3kclkeOnsWS5duty5Mj/FVE1j6OCLDIyfwbllwLey6W/nKYpKMNLNgdPfYOzY1zC2mTggn88zPT3N2NgYhmEQCAQ4duwYLpeL27dvMzExwYULFzCfgSmFv3KKgj/Yxcmv/+ldQchXfRwVvP4IL7375/SOHNn2M6VSiYsXL/Ltb3+bmzdvcvLkSU6ePMnly5fp6+tjY2OD5eXlr6R8QohniwQgQohHNn7qa5x6649x+wJ4g2EGDhyje/gAmmHs+LrGjp5lcPzEAz+TyWTp6mq3piv85f/7//Kf/tNfsrKS4ujRo8TjcTLZzI6X7VmlaQYjh1/hwKm38Ye6UFUNRWlWLtv/3bkKrIKqakS6h5h48R16Ro6gbBNINhoNisUilmXR29uLruv4/X66urqIx+NYlkUkEsGyLOkFaVMUwl39nH33/8YfjqNuOn6K0pxhbCePo6IoBGN9vPztf4s3GLvvYPNbt25x4kTzN6tpmn+Rb8wAACAASURBVN2D1dXVRT6f59SpU1y7dm2Xx68IIZ4GMgZECPFYEoP7SAzu2/JarVLm6rl/YHHq2hMtW9MNxk9/Dafbx6Pkt3t9XrLZLH19fViWxf/1r/81MzMzXPj0UzRNY3V1Fb/f/0Rl2mtUTaNv7Djh+AAb6SSG043b46eYz7Iw+RmrC7eplks8yfgCRVFxef14/VHCiSEC4e77pn1ZlmUPODcMg2KxyLlz57hw4QKKovDGG2/g9XrxeDzU60/PbGy7TlHwBmO8/O1/y/LMVQyHm0AkQbVSYnHyc+ZufNzaX09S2Vfw+IJ4/GF6Ro9hPGS2slwux9jYGNBMj/yrv/orarUafr+f119/nXq9TrVafYLyCCH2CglAhBBPzHC6OP61PyIc7+Xqufe+9ExLp976HrHeYcxGA9N8eGXz4MRB/uZv/4ZDhw7RrmgNDQ3xm9/+llwuxycXLnDi+PEvVZa9zuOP4PFHvvh3IEokMcjS9BWmr35ILp1sTdvbrnA+WkVW0wy6BvYzduwN3F4/tUoZVbv/U7EVRUHXdWq1GrVaDY/Hw2uvvcbw8DDvv/8+brebRqNBqVRCe8BynleabtA39sU57vIGCYQT9Iwc5bPf/ZxSIbtp+mWFRz2O7XFDR1/5HqbZoFLKP3SaXb/fTzabpbu7G4fDwU9+8hOWlpb44IMP0HWdTCaD8RX0lgohnj2SgiWE2DGD4yc4+86/xOVt9jqMHH4Bp/vRZi/q23eYWG9zil1V09CNh0/d6fV62L9vH3/393/P66+/br/+rW9+k/f/8AdcLhe9vb1fYkueT6qm0zt6jENn3yXWN4am6aiqim44ULWHt1cpikoo3sfg+BkC4TiG04MnEHngdzVNw+1ujgtJJpP2OA+Xy0V/fz9XrlxhbW0Ny7IIBu+diEBsQ1EIRnt4+Tv/lljvSCtFS8Hp8vBo40QUPL4QR175LppuYDjdj/SU+n379nHx4kV7KmXLsujr6yOXy7G+vs4nn3zCxMSEPKdHCCEPIhRC7Cy318/A/qMA7Dv2Et1D+8ll1igXcs0PKLQqNS5UTcNs1PEGI5x84zto+uO3jvb29lIul/ns889ZXlpm6s4dLl+6zPDwMK++8spObtpzQVEU3N4gkcQQiqrh8vgZnDiD0+WlmEuD2WhOxaoodsW2/W+XN0Dv2HESgwcf2OtxN8Mw0HWdq1evEolE6OnpIRAI4PF4WFxcZHZ2lrNnz+LxeL7CLd9jFAVNd9A9cgRNN8ill3n5O/8PZqPORnqpNV5k63FUFAULBVWBI6/+MYFw4rEeLmgYBrVajYsXL7J//356e3tRFIVYLMYf/vAHAoEAR48e/Qo3WgjxrFB++tOfymgwIcRXrl6rUiuX0AwHhtNpP4CuXMzhdHvveSDdl7GxsUGj0SAcDj/xsgRYlkmjXkdVVUyzQSa1wHpyhkopj6Y7cLi86A4nZr1GrVrCF4rT1b+/OVbgMZmmyerqKhcuXKBcLuN0OqlUKvj9fs6cOUMgEPgKtvD5UasU0R0uFEVlbXma1YXbVEp5dMOFy+PDcHpo1KvkM6tEe0boGfnyz+y4desWn376KT6fD0VRyGazTExM2APUhRBCAhAhhBCPrj2D0XYt45b1WC3m2y/eolqtUq1WcTqdOByOJ1qeuI/NM1FtPmY7cAzbCoUCpmnagYgQQrTJIHQhhBCP7kEVyR2oZCqKIoFHJ9zvWO1goNBOmZPgQwhxNwlAhBBCPHWk0vrsk2MohLgfmQVLCCGEEEII0TESgAghhBBCCCE6RgIQIYQQQgghRMdIACKEEEIIIYToGAlAhBBCCCGEEB0jAYgQQgghhBCiY2QaXiHEQ6VSKUqlkv1vr9dLNBq953OmabKyskJ3d/eW1y3LYnFxkUajYb8Wi8Xs5wQkk0lisRiapm35zvLyMj09PfZr1WqV5eVlLMsikUjgcj3+E7efJ5ZlPXQqVKv1QLq7P2dZFqZp2u+1/7Z7v01RFFT14e1ad6/zYevabZvP283n6N1M09x2++/eV3ef55Zl3fO9RqPxwHXd7/27X7+7TPcr43blfdD6H7VMpmnax3uzuz93v/2wuTxtqqrec35sPkb3W4cQ4ukhAYgQ4qF+85vfEAqF0PXmJSOTyRCNRvnGN76x5XN37tzhv//3/86f//mfE4vF7NcbjQZ//dd/zf79+4FmhWJ+fp5vfetbDA4OMjs7y9WrV3nrrbfs73z00UdUq1U7APn0009JJpMMDg6iqiq///3v8fl8vPzyy1/15j+TyuUyv/71rxkcHOTw4cPbBmu5XI5/+qd/ore3l4MHD9qfaTQanD9/njt37gDN4+VwODhy5Aj79u2jVqvx6aefcvv2bZxOJ9CsFI6MjHD06FH7te1Uq1Xm5+dZX1/n9OnTlEolrly5wsWLF/F6vZimia7rnDp1irGxsa9gzzye6elpfv3rXxOJROyntJ88eZKjR49u+Vy1WuXf//t/z/e//336+/u3vHf+/HkuX75sB9y1Wo2vf/3r9Pb2UqvV+G//7b/x4x//GMMwAFhZWeH3v/89P/jBD7YtUzqd5i/+4i/4N//m39DV1WW/vrCwwH/5L/+Ff/fv/h1erxfLsvjFL37Bu+++a6/75z//Od///ve3fdCjZVm8//77TE9PYxgG9Xqd48ePc+TIkQfuo4WFBd577z0Mw6BWq3H69GkOHjwIwPvvv8/CwgKVSoVSqUQkEsHlcvG9730Py7Iol8v87//9v8nn83bw8dZbb5FIJOzlX7p0iXPnztlPVK9Wq4yNjfHKK6/Y+/4//If/QDwexzRNFEXBsiy++93v4vF4nqpgVgjRJAGIEOKhVFXl7bffxu12A82Kyn/8j//xnhbPzz77jO9+97t8+umn9wQnwWCQd955x/732toa//AP/8Dg4CBnzpzhZz/7GclkkkQiQSaT4fbt2/zZn/0ZAFevXqVUKjE2Nsa1a9fQNI3BwUHq9Trnz5/nzJkzHdgLz5bFxUUikQgrKyuMjo7idDrvqYgtLCzg8/nIZDLkcjk7ALEsC8MwOHnyJKOjoxiGwezsLMlkkmQySTgcxuv1cvbsWQ4cOAA83kPnTNO0W6wty8LlcnHmzBmOHDmCaZqkUik+/fRTuru78Xq9O7RHvpxarcaxY8d45ZVXUBSFRqPBX/7lX3Lw4EE7IIfmOXr69Gk++eQT+vr6tuyParXK66+/bgdUxWKRv/7rv+Zf/at/hWEYnDlzhn/8x3/k7bffBuC3v/0t3/3ud+9bpnq9TjQa5cqVK7zxxht2hfvq1atEIpEtvQG1Wm1LD0S9Xr/vct977z3cbjc/+clP7F6Hv/3bv0XTNCYmJrY9xpZl8Zvf/IYf//jHuN1uTNPkv/7X/0pfXx9+v5+vfe1rWJbF9PQ08/Pz9r/b/sf/+B+8/vrrDA4OAlAoFPjZz37Gn/zJnxAMBu399/LLL3P48GG7V+8//+f/zPj4OJFIBIBIJMKPfvSjR+r1E0LsPhkDIoR4JJVKxf6bmZkhHo9vCT4ymQyqqjIxMcH8/PwDKzrAPWkZ7777Lr/97W9pNBr89re/5Z133kFVVSzL4sqVK7z00ktkMhnOnj3Lt7/9bW7evMmJEyeYmpraNv3ieWaaJnNzc4yMjOB2u8lkMvccj2q1Sjqdpq+vD13X2djY2PKZu4+P0+lE07Qtr9/v/7+MzWlZDocDTdOeuuPaLuN2KUDXr1/nzJkzFItFyuXyA/fH5vQmRVGYmJggk8mQTCb56KOPGB8fJxAIPLAs3d3drK6u0mg07J6ZYrFIKBR6YAV8u3K1vz8/P2/3KLbT6d555x3Onz//wGUahmG/r6oq3/jGN9B13X6tHSC1j2f79fZ1ZGBgwF6Wx+PhzTff5Ny5c9uWu70sj8ez5fxop3Dd/f9CiKeT9IAIIR7Ksix++ctf2ikSxWKRF154YctnPv/8c06ePImqqoyOjnLr1i07DQNgY2ODX//61/byFhYWtvSI+P1+jh07xl/91V8xPj5up3C1e1nalb6PPvoIh8NBV1cXiqLg8XioVCp2iolopug0Gg1CoRBDQ0MsLy8Ti8XsFB9ojuvRNI1wOEyj0SCXy5HP5wmFQkCz5fzOnTusra1hmibZbJb+/n5isRimaZLL5bh06RJXr17Fsiz8fj8TExN2S/bjqFQqzM7OUiqVqFarZDIZBgYG8Pv9O7ZPvixN07h48SLJZBJojld66aWXtgTfy8vL+P1+DMPg0KFDXL58eUuvnKqqvP/++3z++edAs3fq+9//vv2+ZVl885vf5Be/+AVut5sf/vCHD6zwK4qCaZoMDQ0xOTnJ+Pg4N2/eZHR0lGvXrn2p7Uyn0/eM61IUBafTiaqqNBqNbQMvRVF45513+Pu//3scDgfRaJT9+/c/0u8xlUrd01sEkEgktgQgqqpy69YtCoWC/T2/3088HrcDjdXVVX75y1/aKViJRIJXX331S+0LIcRXTwIQIcRDKYrCn/7pn9q5/Y1Gg1/+8pf09/fT3d1NvV7n8uXLlMtlbty4QbFYZGFhYUsA4na7OXbsmF1heOutt+yUrrbjx49z7tw5XnzxRfs1TdOo1+t2q+aJEyeYnJzk0KFDAJRKpW3z2Z9nd+7coV6vMzU1hWmaLC0tMTg4iNfrtXuVZmdnKZfLzM3NUavVWFlZIRKJ2GkvmqYRCATo6urC7XYTCoXs7xeLRbxeL8ePH2ffvn1As5K4OSVps3Y6z/0GP29el2EYRCKRXU+9ams0GkxMTPDyyy/bYxZ+9atf0d/fT1dXF5Zl8dlnn+H1erl8+TKWZXHx4sUtAYhpmrz44osMDw8DkM1m+V//63/xk5/8BIfDgaIo+P1+uru72b9//yNNHGCaJuPj4/zd3/2dHYB85zvf4erVq19qO9vjN+63D7YLPtplCYfDfOc736Fer5NMJvmbv/kbvvGNbxCPx7/UOqvV6j0D9YPBoN0oYVkWqVRqy3cikQh/9Ed/ZA9WlwHoQjzdJAVLCPFI7p7FJxQK2S2SU1NTDA8Pc/ToUY4cOcLZs2ep1+usr6/b39F1nb6+Pvr7++nv778n+Ni87M0URWFoaIjr169jGAYOh4NXX32Vjz76iDt37hCJRO5b8X0elUolkskkgUDAnlXI5XKxtrZGpVIBmr1R+XzeDtzaKTTZbNb+jKqqRCIRhoeH6e/vx+/3bwkgFEVB13WcTidOpxPDMO4bYKytrdm9CHfPnAXNcyMWizEyMsLAwMBTE3y0qaqKw+HA6XQSCoU4dOgQS0tLWJZFrVZjcXGRcDhMvV5HURS8Xi+Li4tblqFpmr2vEokEiUSCdDq9JVVI1/VHmkUMmvu/naaVTCZxu93bjvPZTjuAaQf1iqIQDodZX1+nUqnYr1uWxdLS0n17oizLIpfL8T//5/+0z7Xe3l5OnTrF5OTkQ9OgBgcHuXbt2pb1AVy7do3R0dEt64nH44yOjjI6OspLL73E2traPfujfYza56MQ4ukld20hxEO1x2G0b+qZTIa5uTneeOMNAD755BPeeecdwuGw/Z0zZ85w4cIFe2DtdhXP7Wz3uRdffJH33nvPTgfZ2NggGo1y9erVLWlcz7v2dMeRSIRjx47ZaTB9fX1cuXKFYrGIy+Vifn6erq4uxsbG7MplLBZjYWGBbDZLNBrdUnncrlJrmibFYpFMJmNXYh0OBx6PB8uyyOfzmKZJKBSye85u375NX18fi4uLW2ZJe9rz9dtpYdBMP7x48aI9SPzq1ascOXKE48eP25+PxWJ8+umn9Pb22q8Vi0XW19dRFMUe7xGNRr/0gOl2hf348eP8/Oc/54//+I+3nfJ2u39vbGxs6dEIhUKoqspbb73Fz372M1577TWCwSDJZJIPP/yQH/zgB9uWsx0EmabJBx98wIEDByiVSnz44Ye8++67D922SCTC4OAgv/rVrzh9+jSGYXDz5k3m5ub44Q9/eM+2bl5ee0KAdsDWaDTIZDJbZsEKBoPSOCHEU0p78803f7rbhRBCPN0Mw6BQKFCtVqlWqwSDQd58800cDoc9oPbu3P9wOEytVrOnCXW73VumDL0fl8tlj+9oUxSFkZERHA4H8/PzZDIZent7eeGFFx65xfh5oCgK6XSa/v5+fD6fvW9cLhf1eh2v14vD4aBQKJBIJAgEAvZ+drvd1Ot1PB4PLpfLHtexeTmbFYtFlpaWmJ2dZWFhgYWFBWq1mj0Ien19nVKpRDAYtAOTfD5PMpmkv7+fffv22elg0Bx8/LCB17tlZmaGhYUFe/rgl19+mXg8jqIoLC4ucuTIkS0V3UAgYB8HaAZrk5OT9jJKpRJf//rXt4yTUBSFer1OOBy+b+9gW7syHo/HCYVCVKtVe1rgWq1Gd3e3PQi8VqvR09Nj9yyWy2Vu375tH7P5+Xn6+/sxDMMeM3T79m2mpqYwDIO33377oT1S4+PjrK+vc/36dfL5PK+++uqWaXTb+8DhcNizVrUNDg7idru5du0a8/PzJBIJ3njjjS3nnMPhwOv1bimHYRgEg0G7USSVStnn4vz8vL2sh+1LIcTuUH76058+3U1PQgghhBBCiD1Dmg6FEEIIIYQQHSMBiBBCCCGEEKJjJAARQgghhBBCdIwEIEIIIYQQQoiOkQBECCGEEEII0TESgAghhBBCCCE6RgIQIYQQQgghRMdIACKEEEIIIYToGAlAhBBCCCGEEB0jAYgQQgghhBCiYyQAEUIIIYQQQnSMBCBCCCGEEEKIjpEARAghhBBCCNExEoAIIYQQQgghOkYCECGEEEIIIUTHSAAihBBCCCGE6BgJQIQQQgghhBAdIwGIEEIIIYQQomMkABFCCCGEEEJ0jAQgQgghhBBCiI6RAEQIIYQQQgjRMRKACCGEEEIIITpGAhAhhBBCCCFEx0gAIoQQQgghhOgYCUCEEEIIIYQQHSMBiBBCCCGEEKJjJAARQgghhBBCdIwEIEIIIYQQQoiOkQBECCGEEEII0TESgAghhBBCCCE6RgIQIYQQQgghRMdIACKEEEIIIYToGAlAhBBCCCGEEB0jAYgQQgghhBCiYyQAEUIIIYQQQnSMBCBCCCGEEEKIjpEARAghhBBCCNExEoAIIYQQQgghOkYCECGEEEIIIUTHSAAihBBCCCGE6BgJQIQQQgghhBAdIwGIEEIIIYQQomMkABFCCCGEEEJ0jAQgQgghhBBCiI6RAEQIIYQQQgjRMRKACCGEEEIIITpGAhAhhBBCCCFEx0gAIoQQQgghhOgYCUCEEEIIIYQQHSMBiBBCCCGEEKJjJAARQgghhBBCdIwEIEIIIYQQQoiOkQBECCGEEEII0TESgAghhBBCCCE6RgIQIYQQQgghRMdIACKEEEIIIYToGAlAhBBCCCGEEB0jAYgQQgghhBCiYyQAEUIIIYQQQnSMBCBCCCGEEEKIjpEARAghhBBCCNExEoAIIYQQQgghOkYCECGEEEIIIUTHSAAihBBCCCGE6BgJQIQQQgghhBAdIwGIEEIIIYQQomMkABFCCCGEEEJ0jAQgQgghhBBCiI6RAEQIIYQQQgjRMRKACCGEEEIIITpGAhAhhBBCCCFEx0gAIoQQQgghhOgYCUCEEEIIIYQQHSMBiBBCCCGEEKJjJAARQgghhBBCdIz+qB+cn5/n8pUreL1eLNPEAvbv20dXVxcbGxucO38en88HQKPRIBwOc2D/AQxDp9FoMD8/z/z8PJYF9UadrlgX4+MH0HWdTCbD9Rs3aNTrqKqGqip0dcUZGxvl888v0t/fRyQS4datW/j9fnp6etA0DQDLsqjVarz33u9wupyoqoqqqvi8Pg4fPoRhGDu6w373j//I4UOHiEajAOTyeVZTKbq7u3E6nSRXVrh27RqGYdhljHd1MTw8Qi63wfLyMgcONLd7fmGBpaUlxg8cwO/3U6vVuHnrFqMjIxiGwcLiIosLC9TqdcyGycjoCIMDAwCsraUpV8ok4nEcDgeKogBgmiarq6vcnpykXq+jKAqKouD1eDh8+DCVSoUbN29SLBapVqsoioJhGITDYQ4fOkQyucLU1BTVWpV6vY7DMNB1nfHxcQKBANPT0ywsLm7Zr8PDw/R0d5NOp7lx4wZW63VN04jFYvT29Njnxk6pVqtUKhVSqRSZTAa3x0M8Hsfn9dplq9Zq5HM5VlIpyqUS4XCYWCyG2+1G0zRqtRrp9XUMXScUCqGqzXg8mUzi9Xpxu93kcjlyuRy1eh3LNNF1HV3Xicfj6Hrz3M5ksyhAMBi0190wTSrlMtlsltTqKo1Gg65YjFgshq7rVKtV1tfXqdfr1BsNFEDXdXw+H5FIZEf3ValUIr2+Tr1Ws88Hl8tFJBJFVRVM0ySbzVKpVOjq6kLTNBSl+Xqj0aBQKLCWTlOv1wmFQvh9PnRdx+Fw7Gg5i8UimUyGubl5ypUy4VCYoaFBfD4f9Xqd6elpuru7WUunWVlZoVFvUK/XMRzNczTe1YXf72d6ZoZqpYKiqigoKKrC0OAgiUTCXpdpmiwsLDA5OcnZs2dxuVz2NufzeW7cuMHI6CihYBBd16nX6ywtL1MqFunp6cHr9aIoCuVymStXrlCpVlEVFU1TiUQixONxAoHAju6fjz76iEajYZ+nwWCQ/v5+PB4PlmXRaDRYX19nfn6eYrGI1+ulv7+fSCSCpmmYpsna2hqqqhKNRu3lQPOanUwmsSyLRCKBqqrU63VWV1eZm5ujWq0SCATo6+sjGAyiKAqXL19mdHQUj8eDqqooikIqlSKVSnH48OEd3fY//OEDLKzmuQl4vV76+vrw+XyoqkoqleLWrdtouoamNq+7uq5x8uRJAGq1GplMhvmFBQr5PP5AgMHBQfw+H4ZhkMlkmJycpFqroakaFhbB1va6PR50TWN5eRm3200gELD3XS6XI5vNkkgksCyL5WSSRDxOoVBgcnKShmlSq9WwTAvDMHC6nJxqlUmIr4ppmpRKJfv+CAqxWNS+b23+7dfrdWZnZwmFQgSDQTRNo9FokEql8Pl8+Hw+LMuiWq0yNzfH2toaiqIQjcXo6e7G5XJhWRZzc3P09fVhGAbFYpHZ2VmGhoZwuVw0Gg1yuRwoCj6vl+VkknhXF06n0y5DJpPBMAyCwSDZbJaZmVm7XgPgD/jpTiTQNI3JyUlqtToAiqoQ8PuJRqO43W4URWF+fp50en3Ldvb0dBONRrcss61arbKyssLq6iqWBdFohEQiYZfvSSwsLBAOh+2ytY9PtVrdUk/cfDzW1tYIBAK43e77Lrd9zV9YWMDr9RKORNBa1+3l5WXi8TjZjQ1cLhe+1v1qO8VikUKxSCQcvqcs7bKur6/jcDjwer32Pm3Xvdt1yC/jkQOQWr1ONBrl5IkTmKbJxsYGn1y4wFtvvkm90UBVVF46e9Yu8Lnz55mZmWZ0dJRkMkkmm+XkyZN4vV5M0+TGzZvcuHmTgxMTVGs1vF4v+/fvx+lw2Dczy7LIbmRJ1JoVh1w+j2HcW+mxLAvDYfDySy81v6uqKHDfHf4k5ubmcBjNA+F0OqlWqqyvZ4jFYjidTsqlEsFgkGNHj9oVufaf0+lkJZVieHgYgI1sltRKioGBAXw+H6VymWzrR7ixscF6Os3+/fsJh8MUCkU+/vhjIuFw67Mlchs5Yq1AaMuxqtXwerzs27cPp9MBioLaKoNhGJw6eZJyucy1a9dJJOIkWj9qVVXp7k6QSMRZW1tjaWmJwaEhAn4/iqJQrVap1xsMDQ4xONgMhBRFQVVVzNaN1uFwcPz4cTRNo1wu89lnn6EqCvv27dvR41AoFLh58yZ+v5++/n5yuRw3rt9gbGyUrq4uLMsiubzM0tIy3d0JYtEoqVSKq1evcejQQbtSO3l7kmqtyskTJ+wK4+UrV5gYH8ftdlOv16lWaywsLGBaJj3d3RgOB6ZpAs1z8tq1a+i6zvFjx+wfYr1WY3Z2llwuR29vH4oCs7NzZLNZDhw4YF/QC8Uiy8vLBANBQqEQbre5o/sJmhe0mzdvEg6H8Xo8KIrSutBYWFbz4nvz5i2KxSIul8uuYAIsLy8zOzdHLBbDYRjMzszgcrkYGxvb8QAkn8/z+cWLHJyYwOVysbCwwLVr1zl+/BiqqrKwsEA8HreDgnw+z/T0NBODEzgMA4/HQ6FQoFqtEk8kMHQd2gG412uvx7KaIXI6neba9esMDQ0xNDRkvz8/P8+Nmzfp7u4mFAwCUKlUWF5eZmVlBZ/Ph8fjAaBarbGSSjHealSwLIupqTvkCwVOHD++o/tnenqaV155BVVVaTQazM3NUSgUOHr0KIqisLS0xJ07dxgeHmZ0dJRMJsNnn33GwYMH6evrw7IsMpkMmqbZDSibpdNpTNMkHo9jmiZTU1PMzc0xPj6Oz+djeXmZq1evcuTIEfvmePXqVY4fP45hGNRqNa5cucLY2NiObjfAnek7vPzyyxitfby2tsbFixc5deo0breredxrVUb7R5vntgJa6z7SaDRYXl5mZmaGnt5eBgcGWF/P8NFHH3HmhReIxWKUSiWKxSKJ7m48bre9jnPnzvHaa6+hKgpz8/P09PTg9/vtcmU3NpibmyORSFCpVJicnKSrqwuXy0VPTy+NRp3JqSm8Hg/d3d073iAmxN0sy6JQKHB7chLLtAiFgnaDS3JlhcOHDuFyubZ858rVqxiGwetf+xput7v5+cVFuhMJfD4fjUaD69ev02iYjI6OAs26UKlUYvzAAQDmFxbw+nx0xWKsra1x7dp13G43/f39VKtV5hcW6Orqwuf1MjU1RcDvtyv4jUaDlVQKj9tNMBhkY2ODldQKE+MTtKtxLpfLriBfvXadF8+cQVGg0TBJJpfJ5fPs37cPwzCYnp4mEAgSiYRbW6hsW5lvV+Inp6Yo5PP09vY2t2V+nnw+z8TEhN0wZZqmfe98nLrl1J07HHQ6t6zfNE1ui/27TwAAH+VJREFU3LhBX1+zcX3zOur1OguLi6ia9sAABJr37kuXLhOJhHnxxRehdW+YmpoiGo2ytLhINBrFt+n+115/e/vL5TL5fJ5wKGTvD9M0tzTyLy0tEQwGcTgcaJpmB6mLi4vU6w1GR0fsa61lWaiqet9gpr1MRVEePQDBsrb80+PxYLUW1nzPshcM4PV47VbqjY0c0UgEn89nV8aHh4a4dPkyhUKh+X3LwmwVfvPGNxe7dd3bF8+yN04FFPWryS6LRqP2Cd78IVpfFPOLwtj7YTO3242uaWxsbDR7kmi2YhYLBerhMOm1NG63p3kzr9ep1WrUajUajQZer4ejR498EYBts/zmy+3Xm8fEsiwUoP0rbv9w2kFeO4BoR7WbAyalFbioW/blF8d66/ru5XQ6CQaDlCuV+37my5qZmcHn89kXiHZrSq1WA5o/zMWlJUaGh+2W71gsxpWrV5mcmuLY0aMAuD1uCqsF5ufnGRsbw+l0YrWOn6ZpdHV1EYvFqNVrzV6okRG7x6ler5NZz+Dz+qhUKxQKBfuCkcvlSKfXOXz4kB3YRCIRbt68iWVZeDwehoeHKRQKNOp1urq67JbnnWZZzdbX/r4+QqGQfczbF4xSuYxpmkSjEdbW0vhbAWfzpnODF144TSgUAmBgYIBz586TTqftSvhOyWazdqs+NH9rV69e23KOaZqG3+8nFAqRyWRIp9P09fbiaAWFhWIRn9dLT3f3lp7B7far1dqeW7dv09/fj6pp1Fu9Yj6vb8t3NjY20DSNSDhCLp8nFovZQZzT6aS3VQZFUfD5/Zw7d27HAxBd1+3e30ajgd/v55NPPqFarQJw+/Ztjh8/TiwWA5rXlmAwyPvvv08ikdhy09zud9s+79sVmBs3bvD222/jdrtRVZVQKNRqeWy2eg0PD5PJZJidnWVgYIDJyUmi0WYr605TVa25j1sV+J6eHv7hvfeo12tYlgtFVQkEAvT29qDp+pYGqGq1ytz8PMPDIwwMfHFuuVxOlpNJe3+5PR66EwkCgQCWZRGPx/mnf/onyuVyM3Bo3afu2mmtl1vX/Nb7LpeLvr7eLa2ZfX19296UhdhJtVqtWYFVVXx+L/l8HtO0iEZjFIoFJqemOHTwoP37aF8LwqEwN27c4OjRo83z2TTt8zqbzbKykuLNN99A15vVRp/Px4cffshAqxc2Eg6zurpKVyxGJpNlYHCAZHKFnp4eyuUKxUKB8P799jo3X4Ps9W3aDq/HS29vj13O9n9rtRqaqtLT04OqNl/TNJWVlRUqlUoryFeIRiP09Nz7/c0syyKVSlEulTlw4ICdqeH1ellYWKBSqaAoCul0mnK5bDfeeB/Qo7DdOtp/7e/k83mSyRU0TcPjafYqrK6tUq1U0TSNSrmCZT683jszM0NfXy/FYpFcLkc4HG7Whdvr3LT+zcc7lUo111OtEgoGCbQaVYrFImvpNLVaDZfTia7rRKNR6vUG6fV1O2umu7u7GYAsLWFZFj093SiKwuraGrVqFafLRbyra0sjpWVZrKys4HS5qJTLBAKBRw9ALMsis55hZnYWy7QoFgvEYl32RuVyea5fv44FVMplSqUSR44ebaaY1Gt4WhFYu2dD0zQ8bjeFQgFVVSkUCiwtLWE4HBitjb6n++sBwUixWGRhYcGuTPsDAcKtStNOchgGAwP9zMzMsrq6imEYrRtP833TtFhZSXHjxk10vdmrEE8kCLcqftFolHQ6be+L/v4+stkNarUayZUkA63KVygYJBsMkkyusLi0hKt1QJ1Ox5YgY7v6v2mapNfXuXXrFrputFqAPXYr7xcBBnZgcrfmcVXu+ZFVq1VSq6uUSiUAVE1jcGDA7obN5fPMzs6hqiqVaoViscTw8NA2a3gyqVSK4ydO2NsC0NP6UQCUymUsy7Ir3G2JeJyLly7Z/3YYDnq6uykUiqytpYnHu+6pnCmK0kzlUdiyvkqlGXREohFKxWKzAh0KoWsahUIRp9OBp9XjAM1Kyfj4uN2C8sVFYWvQ91Wo1Wokk0nyhQKqohCJROzeyNVUilA4hNPhJF/IU6lU8Hg8zUq3rtkNB9AMAHp7e1laXrYDhZ0SDAaZX1jgxs2bhILNHqEDB/ZjGAb1en3LZ+39xdZjggUbuRxzc3PNG1EriB4cHLxn3yrQ6l0skE6niUajrKXTeNxuPF5P6xPNfZfL5XA6HHTFYswvLNDT04OnFWxapkW9XrcDllQqhc+7symHgN061m5sWV9fx+l0omkapVKJarW6JcVAURS7p2J9ff2xUvuSrYp5OzWt/TcyMmKftw6Hg5GREaampqhUKhSLRcbHx7+SVn7LsqjXaqitwHhlZQWvx4Ou6yhKc99kMhnm5+ft35fH4yEWi1Gv1ykUCsTjXVv2TU9PD4FAYEtaRL3V8GOaJouLSzgczi33oe3uPtY2r97dkLP5NSG+SrV6nVQqxUB/P4VCgbGxMRRFYXJyin1jY5w/fx6zdR/a7MiRw3xy4QJLS0vEYrEtZ/XScjOToPl7a57DhmEQCAbJZDJ4vV6CwSBz8/NUq1UaZoPuRIJr12+00o0qKIpqNxKajWaFtt1gWKlUKBSLdjqpZUGxVCSVStnXVbfbg9fbSjc1G2Qy6yiqimWaZLMbOJxOuz7W7O3N2o1C7Wvh3b32lmWxlm42urVTSS2rGVyNjY2haRozM7Nks1lCoSD5fJ61tTRHjhx+pAyAzXXDzUzTxLRM6vVmo/vi4iKrq6vEYjGy2Sz5fI4HNbxbVvOeMzc3x+nTp1lOJllaXrYbCu2v3qeB+NKlS4QjEQJ+P5qqsrq2htvtZnJqClVV8Xo8zM3PUylXePXVV6hWK1QqFbxeL9lMhlwux9DQEI16s75lWhbzc3MUi0VCwSCrq6uorWvs5mve5ctXiMe78Hg8NBqNx+gBaaUQ+X3NSMnj8RAMBu2WVMNhEAqHwbKo1ercnryN3so7tgCzVTHcrGGa9sllOBz4/X67i6cdZT8qwzDw+wN2AOK+q4txp7Rb2rriXSSTSYLB4JYKq6I0W9XD4ZCd1uRyOu0KZzgcZmZmFqfThcMwiMcTrK6uUiwWKZVK9gnkdDoZGhqmWCyQLxSoVCpcv36d0dFRuru7H1xGRcHldBIMhXAYzQDEsQO5jNBsifT5fHY5VVXdcqyax6HZeqyXNFIrK19Jq3690bBzvb8om/pFZaLRQNumG1DXdRS++EEoCvj9QcKRCAsLC3g87gf26rRZlkWxWKRSrdDn78XldDI5OUk8Hm/2blnmlot1226kYLRbQdq9amqruxeaXd8zM7OcOfMClgVr6TWy2Sxut5tSuYzT4bxnG1wuJ7VWq/tOCofDTExMUMjnWUmluD05STQSYd++/Y+xFKtVkWzYwYd1n/NPURQ0VWXf2BjT09OEQiHSa2t4vF7cxSKK0kpnKBZZX19neHgYt9vN7du3yefzuFq9ZRsbG3z88cdomo6ma+iaxvj4gZ3ZKZtUKhUuXLhgX+MURbFT4XK53LY3REVpph4UCoXHCkCq1ap9/m4+/pqm2QGIoiiEw2EikQhTU1Ps378fn8/3lbTy1+t1Jicn0XWDeqPOaipFX3+/HRy0x+60W/baZYtGo/bv+e7rkK7rBFspdpZlkdvIMT09g8vtwmyYLC4tMjI8LGlT4pliNhrUa80GEcMwWvcji9HREbtu1Wg0tvxO2yniB/bv5/bk5D3nfLVSxevd2uOtKApOh8PugXU6XSgorK6u4jAMfD4fbpeLjY0NMtks4fAXDcIN0yS9lqZYLALNlOVCoWCnlFs076+pVMpuJI1Fo3g8zUaf5pi1FVCa381ks/T19tnltqxmA02znM3rltPp3DYAqbWGALT3h6JgX2OrtRrZbIaenp5maqplcf78ebLZLF1dXV/6GAUCAULBEH39fbjdLianJnnhdDPTYH09Q3YjC9y/saLdi2FZzfuCZZqsZ7NUq9VHqr9s5HIcO3aMWCxGMpmkXquxsbFBuVTm8OFmip7T6eTKlStAs6G5t6+PocFBGo0G7/3ud4yPj9PdnaDRaODzemm0xgy73G47mLu7zKVymWAoxEB/P7du3370AERttaLHYl/kDm9uxXW73PT29LS6o03W1lZZXl5mcHAQt8tNJpOxu7pN06RSqZDP5QmNj5PNZnE6nYRCIZxOp11w0zThrlb6zV1K7Y0CcDgchELBLTfnr4KCgq7rdCcS5HI5FpeW0DXdLqKiKPh9PuLx+D2pAO1c9EqlTHo9TSKRwO12YRgG8/PzGLpu52YuJ5MU8nn6BwYIBALU63UajQbT09N2SpFlgWk27NzEzevxeDx2F9iDWt4edy/puobP5yWeSNjfbbYaNM+D5uDmCLquY5omK6kUuVz+iX6s2/G4PZTLJSwrZJ8DqVSKZDLJoUOHmuNzqlW727S5pc3UEkXdvNUKqqbSnUiwnk4zNTVld13eT/uitb6+Tm5jg9nZWQDW19dZW1vD6/Wi6zqlUsm+0LfP2Quffsr+ffvsik8nKDQDn96eHnt8R7tMa2trlCtlZmZmAMhmMoRDoeZEEqEQl3OX7Bb39jak19ftHs2dtLi42Kw0RiLNY1epcPXKFVZWko+e1qMoBPwBBga+qJze9/xvdmkRCoWYnZtjdXWVSqVCOBxu9VI2A7XMeobpmRnS6+uoikoul2P6zh0i4WZ+sdfr5eCh5oQXWuumvxODF+9mGAYTExP29U1vXS/av7tCobClu7193DY2Njhy5MgDl333Tcvn87G+vr7l2tLsFVgkm80yPj6OrutomkYgECAWi20ZnL3TdE1jcHAQw+HAMk2CwSBLi4tU+/pwuVzomkZ3opuDBw/agdPmXO3tUj5qtRqfX7zIC6dPNwfH+rz09zcHtpumRSQa4cqVK4yMjNj7k7uW0U5xlZ4N8bRo5t+rmJZFvdGgXC4DsLS0RE9PT3PM7ja/U6XVMx5Op5lvpR+1fzPBULA1QPuLVB7TNNnI5RhpTWjhdrvweNxMz8zQFYvh8Xjo6e1hfn6ecqXCwYkJe126pjM0NGjfB8vlMnemp79IFafZILVv3z67rJt/z7qm09fXh6IqWKaJNj9PpVJutqq3fv/9/f1bUri2a9RWVRWP2021UqFardoBSrlcZiWVwuV0oqqavUyVZip9uZVhcXda62NdB5Qv6l/lctlOaXa6nK1U0/vXQkzTZGZmhlhXjFw+j9m6Dq2urhIOh+/7vba7x3paNMczOhyGvb8dDgd6K6BzOhx2Y7ZhGJiNZn2ATXXO7u4eVtdWmyl/jQY+v3/rcAqaH4+1eunNhvno0/AqrcHd6qY/pXUDb+aUK/aJ38xraw4I1XWdWCxKOr1OMpmk0WhQq9U4f/48Q0NDOFu9A+289M1jE5rHSNlaSW7dVNt/7R9Ixy7/yhetin19fWxkN8hms9t/dptI1Ol04vP5yW1stPLumj/66elphoaGvhiAb5okk0k2WstWVZVMJkM8kbAPumWZ9+yLB0W/9773kL32oLfvs67Nx7F9HlS/gtbyoaEhpqbuUK1W7dSJ2dlZPK3cTKfTiaeVx9muiNVqNaamphgfH7+nzLqus3//ftLr66yurt6367K56c1Ifm1tjWPHjnHkyBGOHj3KiRMnWFhcRFEUgsEQDdMklUrZx2dlZYWNjY2HDizbae1jYhgGDofDDkqbA+Fu8vJLL3H48OHW3xHW1zOUy2UcDgcul4vl5SSmaTI5NcX5jz/m+vXr9LUG6+2k2dlZUq20RrfHQ/D/b+/umtu47jsA/wECIF4IiqT4JqqSIsWyGk/sC9uTZiaTTmpfNZ8q3ywzzUw8zYVTx6qdJrJDSjQlUhYhESABvvdisWsQIhW5oU6nzfPM+MIisItdYM+e33nb6elot6ej1+u9VqtORPaTnZiYKI6zVqtFdVhwnvfaUmTX5NW5ubh//z/j9DS78ZVLWdF4fHISjx9vxD/95Cfx8UcfxUcf/Uv88pf/GptbW9mEu4ioVLOW9NmZmZiZmSkC6GXLW+zz1WryVrt8ONTMzExsbGycKQu2trbi4OCgGEY3Oh559L8z52V4815fX4/d3d1ieycnJ7G6ulqsipPfcPPf1vednPl9lCfK0Ww2o9VsRrvdjn+4fj36/X62wtTpaZTK5ZiczBYHabVa0Ww2i3tLZdgKvLW1dabhau3hw6IFNl+FrtFoRKvVinZ7KuavXi1Wqcvm3eRD4L6bvLq/v39pvctwGSqVSszOzUWv14vKRCXW1tZidXUtDg4OY319Paanpy/spaxUKrGyshJHh4fDFvbsellcWCiGqublwbfPnsXR0VExEqZer0ej0Yitza2YmKhEtVqNxcXFeLK5WQzfiYiizjh6P6rValEZrnCX1//Gy/HRRX3KE+Vot6diut0u5rodHR+PrPxZjmq1cub9F4WuhYWF6PV6xbHlK4luPnkSk8MVvPr9flGH6HW70Wy1Ym9vL/b29obDvZ4Xw8m+j7zknW63i6H5u71eMcT9+Pi4CH6jut1uHB4exg/v3Ilry9fi1s1bMTs3F9vbnWwYel4MX1AeT4w10pciotlsxN5eP/r9ftbQuL1d1N3OGyI+Gl4iIp49exZLi0vZnMzJyXi88XhsdNB332tERK1Wff0ekJkrV2LyvC7+iGg2W8U4w9zK9eux2+tFuZwtS/mjH/1jPHz0KP7rT3+KVrMV7733XiwsZGNyp9rtKA2H8oxuo1wux+3bP4h2ux3lcjmuXVuOzc3N+Pz+/cjHf9+7dy9qtVpcmZmJ+/fvFz/u+uRk3L1799Jb5JYWl4qQMDszE+++927s9nrFD7zRaMT2dif+7Te/ySoxpYj5q/Pxzjs/yi6ySiWuXVuORqM+nMiUTYi8cfNmzM7OFse/tLRUrJQwGOxHlCJu3bwZbw1XmGm1WrGxsRH//rvfFV/s3OxsvPvuuzE5ORndbjd++9tPisBUn6zHBx+8X1R+y+VyzM7OFBNMx+U9UqNdseWJiahWq/Hgq6/i66//UvwAbv/gB3H79u1oNJtxdW7uzIT2+avz0e3uXOp3EBGxsnItDg8P4tNPP42pqXbs7e1GvZH1wuUB6K0f/jAePHgQn/7+9zFZm4xurxvXVlZiaXGxuBDq9XpxjLVaLT784IP49a9//VJXbTY5/aT47geDQTRbrTNzTK4O5wdkcyga2dCetbXYevo0SlGKne5OsVJW/p684L6oknwZKpVKNJvNMxXEUqlUrHYxugTx4uJCPFp/FCfD4ZEffvhhfPaHP8TTp1tRnpiI3d3dbPLYGxiWcvfu3fiPzz6L6rD7/sXz5/H06dP48MMPojy8GZVGVsgrl8tRHZlonleG9/b2Yn19PQsBw3Jibm6uWL0of3+lUonq8Oa0sLAQf1ldjekr01GtVosK9cnxcex0u/H+++8X569cLsfKykpsbW3F3Nxc1KrVKCdoAc8r1OPyAPLOO+/E559/HgcHBzE3NxdPnz6NBw8exC9+8YtipbpSqRQ7Ozvx+PHj4rdcr9djejo77tEej48//jg++eSTuHfvXja++9GjqNVqxQT8M99DtXrpZe34sY/2bOdDSUYbrI6Oj6PX640Mpch6nOuTk3Hr1q1YXV3LjrfRiP7eXvzxj3+Mf/75z4vtVavVKI9UzLLl3LOhBRFZmfPNxkY0Gs2oVCvZymibm/H23beLMqc69lvIGzfOG44Jb0K1Wo3rKyuxtrYWJ8fHMVmvR5yexGB/ECfHJ/H223dfqmflk6rL5XJMt9txbWUlut1ecV9qtVpx9623Yn19vRj6dHhwEHdu3y56e/MGxyszV2JqqjUcGVMvJqjn12W5VIpGs3EmBJXL2fyQ/F5cqVRit7cbX3zxRVGJnmq1Ynl5OSqVykuTwBuNRlS73zVU1euTsb6+Hs+fvygq40uLiy8tP541Fl6JpaXl2Nzcik6nE6cRMej3Y2VlJabb7VheXsrmT/Z6sb9/EPPzC9Eergp4enoaN27ciAcPvopbt27G/Pz8S5X0er0eq2trsbm5OSwPqjG/MB/tqal4vLERjXo97t59Ox6tr0enkwWIyeEE8GyFyj/FT3/60zPb7XQ6sbKyUtSNIyIGg7l4NgyFzUZ2v58c1jnHP1M+8T0/15P1rD66sDAfq2trUZmoxF5/L2rDRY/GG/JarWyIVbVSie1nz2JnZydqtWp8/fVX0Wg2Y39/P65enXvpntAa7rdUyuZDl371q1+9VtPiq7qXil6Isb+Pz7zPW9FKpXKUy683IW902/n7c6MVj/GWvNEK3mUaP9bzWmaPx+a75Bf2+LnIb5z5/583Zm60l2d0tarxv+V/z/c3/rfxz3DesbzqOEc/9/i5Ht/uee95E9/D6elpMXmtNmzlHD/Px8fHsbu3VyxNPDlZe+kc5ucm/7fDw8Niqblc/p2Orh4VEWdek+9v9N+Ojo6GLfgRU1Otl4LGeZ/hsuWtOuMt1PlvZPycjQ/py58FcnR0FM1mK/qDfpwcHxdDKi/LwcFBbHc6sf5oPfb396Nen4ybt27F3HBlj62trVhYWPjuOS/DZ6nkFeLT02yI3cbGRhHasxa1rPEiX+4wP878OSxXhy3dnU6naD1/tr0dU63WcALzXiwtLZ75jezs7MTe3l7Mzc3Ft8+exdLi4hvtAYiIopf0ouv15OQkut1uPH78OPb394fzyLJ1+PMA8u232dDYXH4Dvn79etGTmwfSfF7Fw4cP4+joKNrtdiwvL7/UaDEYDIrnjoyuPHaZ/vznP8edO3fOXFsPHz2KheHy58+fZwuk5McUkVV0fvzjHxfX69On38ZXX3+Vheh2O96+dy9mh8e6u7sbvd5uzM7OFI0Pxycn8eTx45idnS0mTX7zzTexuroavd3dmJ2ZjTt3bhfDA4+OjmJza6t4VkFetueLlbzJIWow6vj4OF68eBGdzvNha/pptFqtbEnWqbMr/OULWoyWjwcHB7HT7UZ7aurMszp2dnaysjVOo9FoRLvdPtPbmy/MMjU1VaxM+OJFNhk8X5AlHxY6NXyeVP4Z+v1+0Sg4GAyi0+mcKUuy0SNTUZ6YiE6nE1dHPu/h4WEMBoPiGV/Pn2e9+KPvzyean1c+HQ7noGQ9GllvwNRUO6rVShweHsZOtxuDfn/YCz0TtVo1G849DGefffZZ3Lhx48w5zHU6nRgM9ovOiPLEREwN5+V0u924MlxWfmdnpyi3JyqVYsn87e3tmJ+fP/OddbvdYqjv6Dno9wcxOVmLfr8f7XY7BoNBFjDGemm3tzvFlIWDg4Ni+NnGxkbx2v39g1hffxQ/+9nPYm9vr3j2V/6Z8hVOe91uEYR2dnaKxzHkk/5Hz8f29nZxfzk+Pn79AHIZzgsIf8s2xrf1qr+lNFpBHw1J46953QA2+trzKvfj/z4eyC76DP8T43NvXmfb33ts5Pf4LOd18V38mu9WsnrVZ3vdQH1RRfBV39H/1u/xb9nvRUP7LrsyNR6aI14+Z38tQI83Uoxu46Lfxnj5cdH3ft6+x/fzJv2173G8cWD02hwtE84rh8e3O16GjP+GX/eauSzjoTjf5+g5Oe97Hw2No7+N0eMYPdbxfYzut9hGNgar+PfR6+BVDTfCBynlD5IdbSw7ryfudLi66EXX1nmNVhEvNzxe9L6LrolXlSGj11kuv9Ze5/583r3kVXOD89cWj3IYacwdLTfPHFdEMWTsyZMnxUOGx53XGDy67fH9jO6jVCoV8ztep/H4de9L5zWkn5ycxJdffhn7BwfRqNfj+fMXsXxtOe4MVz4cf/3otsa3M9pY/vJ+S0UYSxpAAADg/4s33QCTQj7H5dn2duwPBtFqTcXs7Nlh+Jft8mdKAgDA34H/y8Ejl8/DWbl2Ld0+k+0JAAD4uyeAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkIwAAgAAJCOAAAAAyQggAABAMgIIAACQjAACAAAkI4AAAADJCCAAAEAyAggAAJCMAAIAACQjgAAAAMkIIAAAQDICCAAAkMx/A0ih70/jBippAAAAAElFTkSuQmCC","reason":"pre-failure"}}
{"tag":"system","finished":true,"success":false,"error":{"name":"Error","message":"Throwing query failed as element was not found before the timeout. Query context: {\"selectors\":[\"a[href*='/collections/']:humanVisible\",\"a[href*='/collections/']:humanVisible\"],\"operation\":\"priorityFindOne\",\"queryID\":29}","stack":"Error: Throwing query failed as element was not found before the timeout. Query context: {\"selectors\":[\"a[href*='/collections/']:humanVisible\",\"a[href*='/collections/']:humanVisible\"],\"operation\":\"priorityFindOne\",\"queryID\":29}\n    at /Users/airhorns/Code/scorpion-crawler/src/willow/queries.ts:63:15\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"}}

      http_version: null
    recorded_at: Thu, 13 Feb 2020 16:17:36 GMT
recorded_with: VCR 5.1.0
